#!/bin/bash

# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2019 Ian Leonard (antonlacon@gmail.com)

# update-scan: use debian's uscan to check for available package updates

set -e

. config/options ""

# configuration
QUIET="yes"

# functions
help() {
  echo "Usage: "
}

check_for_update() {
  # make optional variables from makefiles local to wipe for next invocation
  local PKG_DOWNLOAD_REPO PKG_WATCH PKG_URL watch_test

  . "${1}"

  if [ -z "${PKG_WATCH}" ]; then
    : #echo "info: ${PKG_NAME}: PKG_WATCH not set; skipping"
    return
  fi

  if [ -z "${PKG_URL}" -a -z "${PKG_DOWNLOAD_REPO}" ]; then
    echo "warning: ${PKG_NAME}: unknown download repository; please set PKG_DOWNLOAD_REPO in package.mk"
    return
  fi

  if [ -z "${PKG_DOWNLOAD_REPO}" ]; then
    download_repo=$(dirname "${PKG_URL}")
  else
    download_repo="${PKG_DOWNLOAD_REPO}"
  fi

  watch_test="${PKG_WATCH}"

  uscan_tmpfile=$(mktemp)
  echo "version=4" > "${uscan_tmpfile}"
  echo "${watch_test}" >> "${uscan_tmpfile}"

  REV=$(uscan --no-conf --verbose --safe --package "${PKG_NAME}" --upstream-version "${PKG_VERSION}" --watchfile "${uscan_tmpfile}" 2>&1 | grep '\$newversion' | awk '{print $3}')

  NEEDUPD=""
  if [ ! "$PKG_VERSION" = "$REV" ] ; then
    printf "* %-32s old: %-10s new: %-10s %-10s\n" "$PKG_NAME" "$PKG_VERSION" "$REV"
  fi
  rm "${uscan_tmpfile}"
}

# pre-check
if ! command -v uscan >/dev/null; then
  die "error: uscan not found; this is required"
fi

# do work

if [ -z "${1}" ]; then
  PACKAGE_LIST=$(find packages/ -type f -name package.mk | sort)
else
  PACKAGE_LIST="${@}"
fi

for build_file in ${PACKAGE_LIST}; do

  check_for_update "${build_file}"

done
