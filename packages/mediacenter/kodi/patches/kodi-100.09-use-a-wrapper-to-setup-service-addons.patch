diff --git a/xbmc/addons/Addon.cpp b/xbmc/addons/Addon.cpp
index a9ffe7f741..edc5304082 100644
--- a/xbmc/addons/Addon.cpp
+++ b/xbmc/addons/Addon.cpp
@@ -340,10 +340,46 @@ AddonVersion CAddon::GetDependencyVersion(const std::string &dependencyID) const
   return AddonVersion("0.0.0");
 }
 
+void LEAddonHook(const AddonPtr& addon, const LE_ADDON_CONTEXT context)
+{
+  if (addon->Type() == ADDON_SERVICE) {
+    std::string contextStr;
+    char cmd[255];
+
+    switch (context) {
+    case LE_ADDON_ENABLED:
+      contextStr = "enable";
+      break;
+    case LE_ADDON_DISABLED:
+      contextStr = "disable";
+      break;
+    case LE_ADDON_POST_INSTALL:
+      contextStr = "post-install";
+      break;
+    case LE_ADDON_PRE_UNINSTALL:
+      contextStr = "pre-uninstall";
+      break;
+    default:
+      contextStr = StringUtils::Format("unknown(%d)", context);
+      break;
+    }
+
+    snprintf(cmd, sizeof(cmd), "/usr/sbin/service-addon-wrapper %s %s %s",
+      contextStr.c_str(), addon->ID().c_str(), addon->Path().c_str());
+
+    system(cmd);
+  }
+}
+
+
 void OnEnabled(const std::string& id)
 {
   // If the addon is a special, call enabled handler
   AddonPtr addon;
+
+  if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE))
+    LEAddonHook(addon, LE_ADDON_ENABLED);
+
   if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_PVRDLL) ||
       CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_ADSPDLL) ||
       CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_PERIPHERALDLL))
@@ -363,6 +399,10 @@ void OnDisabled(const std::string& id)
 {
 
   AddonPtr addon;
+
+  if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE, false))
+    LEAddonHook(addon, LE_ADDON_DISABLED);
+
   if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_PVRDLL, false) ||
       CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_ADSPDLL, false) ||
       CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_PERIPHERALDLL, false))
@@ -401,6 +441,9 @@ void OnPreInstall(const AddonPtr& addon)
 void OnPostInstall(const AddonPtr& addon, bool update, bool modal)
 {
   AddonPtr localAddon;
+
+  LEAddonHook(addon, LE_ADDON_POST_INSTALL);
+
   if (CAddonMgr::GetInstance().ServicesHasStarted())
   {
     if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
@@ -417,6 +460,8 @@ void OnPreUnInstall(const AddonPtr& addon)
 {
   AddonPtr localAddon;
 
+  LEAddonHook(addon, LE_ADDON_PRE_UNINSTALL);
+
   if (CAddonMgr::GetInstance().ServicesHasStarted())
   {
     if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
diff --git a/xbmc/addons/Addon.h b/xbmc/addons/Addon.h
index 515afe1283..5306b7304a 100644
--- a/xbmc/addons/Addon.h
+++ b/xbmc/addons/Addon.h
@@ -52,6 +52,14 @@ void OnPostInstall(const AddonPtr& addon, bool update, bool modal);
 void OnPreUnInstall(const AddonPtr& addon);
 void OnPostUnInstall(const AddonPtr& addon);
 
+typedef enum {
+  LE_ADDON_ENABLED,
+  LE_ADDON_DISABLED,
+  LE_ADDON_POST_INSTALL,
+  LE_ADDON_PRE_UNINSTALL,
+} LE_ADDON_CONTEXT;
+
+void LEAddonHook(const AddonPtr& addon, const LE_ADDON_CONTEXT context);
 
 class AddonProps
 {
