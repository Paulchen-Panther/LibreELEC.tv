From bc8974740cfcf550e3cd4dbbdd4f48dcc5911f64 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?I=C3=B1igo=20Mart=C3=ADnez?= <inigomartinez@gmail.com>
Date: Thu, 22 Feb 2018 14:22:22 +0100
Subject: [PATCH 1/3] build: Port to meson build system

meson is a build system focused on speed an ease of use, which
helps speeding up the software development. This patch adds meson
support along autotools.
---
 Makefile.am                    |   4 +
 actions/Makefile.am            |   5 +-
 actions/meson.build            |  10 +
 data/Makefile.am               |   1 +
 data/meson.build               |  47 +++++
 docs/Makefile.am               |   5 +-
 docs/man/Makefile.am           |   1 +
 docs/man/meson.build           |  36 ++++
 docs/meson.build               |  29 +++
 docs/polkit/Makefile.am        |   2 +
 docs/polkit/meson.build        |  30 +++
 meson.build                    | 356 +++++++++++++++++++++++++++++++++
 meson_options.txt              |  18 ++
 meson_post_install.py          |  37 ++++
 po/meson.build                 |   1 +
 src/Makefile.am                |   5 +
 src/examples/Makefile.am       |   5 +-
 src/examples/meson.build       |  27 +++
 src/meson.build                |  14 ++
 src/polkit/Makefile.am         |   7 +-
 src/polkit/meson.build         | 135 +++++++++++++
 src/polkitagent/Makefile.am    |   8 +-
 src/polkitagent/meson.build    | 119 +++++++++++
 src/polkitbackend/Makefile.am  |   1 +
 src/polkitbackend/meson.build  |  72 +++++++
 src/programs/Makefile.am       |   2 +
 src/programs/meson.build       |  16 ++
 src/symbol.map                 |   6 +
 test/Makefile.am               |   5 +-
 test/meson.build               |  28 +++
 test/polkit/Makefile.am        |   2 +
 test/polkit/meson.build        |  22 ++
 test/polkitbackend/Makefile.am |   2 +
 test/polkitbackend/meson.build |  22 ++
 34 files changed, 1074 insertions(+), 6 deletions(-)
 create mode 100644 actions/meson.build
 create mode 100644 data/meson.build
 create mode 100644 docs/man/meson.build
 create mode 100644 docs/meson.build
 create mode 100644 docs/polkit/meson.build
 create mode 100644 meson.build
 create mode 100644 meson_options.txt
 create mode 100644 meson_post_install.py
 create mode 100644 po/meson.build
 create mode 100644 src/examples/meson.build
 create mode 100644 src/meson.build
 create mode 100644 src/polkit/meson.build
 create mode 100644 src/polkitagent/meson.build
 create mode 100644 src/polkitbackend/meson.build
 create mode 100644 src/programs/meson.build
 create mode 100644 src/symbol.map
 create mode 100644 test/meson.build
 create mode 100644 test/polkit/meson.build
 create mode 100644 test/polkitbackend/meson.build

diff --git a/Makefile.am b/Makefile.am
index a1501807..e3ac5fac 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -10,6 +10,10 @@ NULL =
 
 EXTRA_DIST = 			\
 	HACKING 		\
+	meson.build		\
+	meson_options.txt	\
+	meson_post_install.py	\
+	po/meson.build		\
 	$(NULL)
 
 # xsltproc barfs on 'make distcheck'; disable for now
diff --git a/actions/Makefile.am b/actions/Makefile.am
index 4498f4a6..17099923 100644
--- a/actions/Makefile.am
+++ b/actions/Makefile.am
@@ -13,6 +13,9 @@ clean-local :
 
 DISTCLEANFILES = org.freedesktop.policykit.policy
 
-EXTRA_DIST = org.freedesktop.policykit.policy.in
+EXTRA_DIST =					\
+	org.freedesktop.policykit.policy.in	\
+	meson.build				\
+	$(NULL)
 
 -include $(top_srcdir)/git.mk
diff --git a/actions/meson.build b/actions/meson.build
new file mode 100644
index 00000000..26d2d2d8
--- /dev/null
+++ b/actions/meson.build
@@ -0,0 +1,10 @@
+policy = 'org.freedesktop.policykit.policy'
+
+custom_target(
+  policy,
+  input: policy + '.in',
+  output: '@BASENAME@',
+  command: intltool_xml_cmd,
+  install: true,
+  install_dir: pk_pkgactiondir,
+)
diff --git a/data/Makefile.am b/data/Makefile.am
index 7c53902b..f5ee4bac 100644
--- a/data/Makefile.am
+++ b/data/Makefile.am
@@ -57,6 +57,7 @@ CLEANFILES = $(BUILT_SOURCES)
 EXTRA_DIST = 							\
 	org.freedesktop.PolicyKit1.Authority.xml 		\
 	org.freedesktop.PolicyKit1.AuthenticationAgent.xml 	\
+	meson.build						\
 	$(service_in_files) 					\
 	$(dbusconf_in_files) 					\
 	$(systemdservice_in_files) 				\
diff --git a/data/meson.build b/data/meson.build
new file mode 100644
index 00000000..14c100b5
--- /dev/null
+++ b/data/meson.build
@@ -0,0 +1,47 @@
+service_conf = {'libprivdir': pk_prefix / pk_pkglibdir}
+
+configure_file(
+  input: 'org.freedesktop.PolicyKit1.service.in',
+  output: '@BASENAME@',
+  configuration: service_conf,
+  install: true,
+  install_dir: dbus_system_bus_services_dir,
+)
+
+configure_file(
+  input: 'org.freedesktop.PolicyKit1.conf.in',
+  output: '@BASENAME@',
+  configuration: {'polkitd_user': polkitd_user},
+  install: true,
+  install_dir: dbus_policydir,
+)
+
+if enable_pam
+  configure_file(
+    input: 'polkit-1.in',
+    output: '@BASENAME@',
+    configuration: pam_conf,
+    install: true,
+    install_dir: pk_sysconfdir / 'pam.d',
+  )
+endif
+
+its_data = files(
+  'polkit.its',
+  'polkit.loc',
+)
+
+install_data(
+  its_data,
+  install_dir: pk_datadir / 'gettext/its',
+)
+
+if enable_logind
+  configure_file(
+    input: 'polkit.service.in',
+    output: '@BASENAME@',
+    configuration: service_conf,
+    install: true,
+    install_dir: systemd_systemdsystemunitdir,
+  )
+endif
diff --git a/docs/Makefile.am b/docs/Makefile.am
index 8d7da9db..3c285e4b 100644
--- a/docs/Makefile.am
+++ b/docs/Makefile.am
@@ -1,6 +1,9 @@
 
 SUBDIRS = man polkit
 
-EXTRA_DIST = version.xml.in
+EXTRA_DIST =		\
+	version.xml.in	\
+	meson.build	\
+	$(NULL)
 
 -include $(top_srcdir)/git.mk
diff --git a/docs/man/Makefile.am b/docs/man/Makefile.am
index 0b2dc44e..38e037ef 100644
--- a/docs/man/Makefile.am
+++ b/docs/man/Makefile.am
@@ -24,6 +24,7 @@ EXTRA_DIST = 				\
 	pkcheck.xml			\
 	pkaction.xml			\
 	pkttyagent.xml			\
+	meson.build			\
 	$(NULL)
 
 clean-local:
diff --git a/docs/man/meson.build b/docs/man/meson.build
new file mode 100644
index 00000000..241e82ce
--- /dev/null
+++ b/docs/man/meson.build
@@ -0,0 +1,36 @@
+xsltproc = find_program('xsltproc', required: false)
+assert(xsltproc.found(), 'xsltproc is required for man pages generation')
+
+xsltproc_cmd = [
+  xsltproc,
+  '--output', '@OUTPUT@',
+  '--nonet',
+  '--stringparam', 'man.base.url.for.relative.links', pk_api_docpath + '/',
+  'http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl',
+  '@INPUT@',
+]
+
+mans = [
+  ['polkit', '8'],
+  ['polkitd', '8'],
+  ['pkexec', '1'],
+  ['pkcheck', '1'],
+  ['pkaction', '1'],
+  ['pkttyagent', '1'],
+]
+
+foreach man: mans
+  xml = files(man[0] + '.xml')
+  content_files += xml
+
+  output = '@0@.@1@'.format(man[0], man[1])
+
+  custom_target(
+    output,
+    input: xml,
+    output: output,
+    command: xsltproc_cmd,
+    install: true,
+    install_dir: pk_mandir / ('man' + man[1]),
+  )
+endforeach
diff --git a/docs/meson.build b/docs/meson.build
new file mode 100644
index 00000000..d4a05483
--- /dev/null
+++ b/docs/meson.build
@@ -0,0 +1,29 @@
+pk_api_docpath = pk_prefix / gnome.gtkdoc_html_dir(pk_api_name)
+
+enable_man = get_option('man')
+if enable_man
+  subdir('man')
+endif
+
+enable_gtk_doc = get_option('gtk_doc')
+if enable_gtk_doc
+  content_files += configure_file(
+    input: 'extensiondir.xml.in',
+    output: '@BASENAME@',
+    configuration: {'libdir': pk_prefix / pk_libdir},
+  )
+
+  content_files += configure_file(
+    input: 'version.xml.in',
+    output: '@BASENAME@',
+    configuration: {'VERSION': pk_version},
+  )
+
+  html_images = files(
+    'polkit-architecture.png',
+    'polkit-authentication-agent-example.png',
+    'polkit-authentication-agent-example-wheel.png',
+  )
+
+  subdir('polkit')
+endif
diff --git a/docs/polkit/Makefile.am b/docs/polkit/Makefile.am
index 1fce92c9..2da0192f 100644
--- a/docs/polkit/Makefile.am
+++ b/docs/polkit/Makefile.am
@@ -86,6 +86,8 @@ else
 CLEANFILES =
 endif
 
+EXTRA_DIST = meson.build
+
 CLEANFILES +=   *~				\
 		polkit-1-scan.*			\
 		polkit-1.args			\
diff --git a/docs/polkit/meson.build b/docs/polkit/meson.build
new file mode 100644
index 00000000..297a261c
--- /dev/null
+++ b/docs/polkit/meson.build
@@ -0,0 +1,30 @@
+doc_module = pk_api_name
+
+src_dirs = [
+  source_root / 'src/polkit',
+  source_root / 'src/polkitagent',
+]
+
+private_headers = [
+  'polkitagenthelperprivate.h',
+  'polkitprivate.h',
+]
+
+content_files += files(
+  'docbook-interface-org.freedesktop.PolicyKit1.AuthenticationAgent.xml',
+  'docbook-interface-org.freedesktop.PolicyKit1.Authority.xml',
+)
+
+gnome.gtkdoc(
+  doc_module,
+  main_xml: doc_module + '-docs.xml',
+  src_dir: src_dirs,
+  ignore_headers: private_headers,
+  dependencies: libpolkit_agent_dep,
+  namespace: meson.project_name(),
+  html_assets: html_images,
+  fixxref_args: '--html-dir=' + pk_api_docpath,
+  gobject_typesfile: files(doc_module + '.types'),
+  content_files: content_files,
+  install: true,
+)
diff --git a/meson.build b/meson.build
new file mode 100644
index 00000000..f52c248f
--- /dev/null
+++ b/meson.build
@@ -0,0 +1,356 @@
+project(
+  'polkit', ['c', 'cpp'],
+  version: '0.116',
+  license: 'LGPL2+',
+  default_options: [
+    'buildtype=debugoptimized',
+    'c_std=c99',
+  ],
+  meson_version: '>= 0.50.0',
+)
+
+pk_version = meson.project_version()
+
+pk_api_version = '1'
+pk_api_name = '@0@-@1@'.format(meson.project_name(), pk_api_version)
+
+pk_gir_ns = 'Polkit'
+pk_gir_version = '1.0'
+
+pk_prefix = get_option('prefix')
+pk_datadir = get_option('datadir')
+pk_includedir = get_option('includedir')
+pk_libdir = get_option('libdir')
+pk_mandir = get_option('mandir')
+pk_sysconfdir = get_option('sysconfdir')
+
+pk_pkgdatadir = pk_datadir / pk_api_name
+pk_pkgincludedir = pk_includedir / pk_api_name
+pk_pkglibdir = pk_libdir / pk_api_name
+pk_pkgsysconfdir = pk_sysconfdir / pk_api_name
+
+pk_actiondir = pk_api_name / 'actions'
+pk_pkgactiondir = pk_datadir / pk_actiondir
+
+soversion = 0
+current = 0
+revision = 0
+libversion = '@0@.@1@.@2@'.format(soversion, current, revision)
+
+gnome = import('gnome')
+i18n = import('i18n')
+pkg = import('pkgconfig')
+
+source_root = meson.current_source_dir()
+build_root = meson.current_build_dir()
+
+data_dir = source_root / 'data'
+po_dir = source_root / 'po'
+
+intltool_merge = find_program('intltool-merge')
+intltool_cache = po_dir / '.intltool-merge-cache'
+intltool_desktop_cmd = [intltool_merge, '-d', '-u', '-c', intltool_cache, po_dir, '@INPUT@', '@OUTPUT@']
+intltool_xml_cmd = [intltool_merge, '-x', '-u', '-c', intltool_cache, po_dir, '@INPUT@', '@OUTPUT@']
+
+top_inc = include_directories('.')
+
+cc = meson.get_compiler('c')
+
+config_h = configuration_data()
+
+# defines
+set_defines = [
+  # package
+  ['PACKAGE_BUGREPORT', 'http://lists.freedesktop.org/mailman/listinfo/polkit-devel'],
+  ['PACKAGE_NAME', meson.project_name()],
+  ['PACKAGE_URL', 'http://www.freedesktop.org/wiki/Software/polkit'],
+  ['PACKAGE_VERSION', pk_version],
+  ['VERSION', pk_version],
+  # i18n
+  ['GETTEXT_PACKAGE', pk_api_name],
+]
+
+foreach define: set_defines
+  config_h.set_quoted(define[0], define[1])
+endforeach
+
+# Globally define_GNU_SOURCE and therefore enable the GNU extensions
+config_h.set('_GNU_SOURCE', true)
+
+# functions
+check_functions = [
+  'clearenv',
+  'fdatasync',
+]
+
+foreach func: check_functions
+  config_h.set('HAVE_' + func.to_upper(), cc.has_function(func))
+endforeach
+
+# compiler flags
+common_flags = ['-DHAVE_CONFIG_H']
+compiler_flags = []
+
+if get_option('buildtype').contains('debug')
+  compiler_flags += cc.get_supported_arguments([
+    '-Waggregate-return',
+    '-Wdeclaration-after-statement',
+    '-Wformat=2',
+    '-Wimplicit-function-declaration',
+    '-Winit-self',
+    '-Wmissing-declarations',
+    '-Wmissing-include-dirs',
+    '-Wmissing-prototypes',
+    '-Wstrict-prototypes',
+  ])
+endif
+
+add_project_arguments(common_flags + compiler_flags, language: 'c')
+
+glib_req_version = '>= 2.30.0'
+
+gio_dep = dependency('gio-2.0', version: glib_req_version)
+gio_unix_dep = dependency('gio-unix-2.0', version: glib_req_version)
+glib_dep = dependency('glib-2.0', version: glib_req_version)
+gobject_dep = dependency('gobject-2.0', version: glib_req_version)
+
+expat_dep = dependency('expat')
+assert(cc.has_header('expat.h', dependencies: expat_dep), 'Can\'t find expat.h. Please install expat.')
+assert(cc.has_function('XML_ParserCreate', dependencies: expat_dep), 'Can\'t find expat library. Please install expat.')
+
+mozjs_dep = dependency('mozjs-60')
+
+dbus_dep = dependency('dbus-1')
+dbus_sysconfdir = dbus_dep.get_pkgconfig_variable('sysconfdir', define_variable: ['sysconfdir', pk_prefix / pk_sysconfdir])
+dbus_policydir = dbus_sysconfdir / 'dbus-1/system.d'
+dbus_system_bus_services_dir = dbus_dep.get_pkgconfig_variable('system_bus_services_dir', define_variable: ['datadir', pk_prefix / pk_datadir])
+
+# check OS
+host_system = host_machine.system()
+config_h.set('HAVE_' + host_system.to_upper(), true)
+
+# Check whether setnetgrent has a return value
+config_h.set('HAVE_NETGROUP_H', cc.has_header('netgroup.h'))
+
+setnetgrent_return_src = '''
+  #include <stddef.h>
+  #ifdef HAVE_NETGROUP_H
+  #include <netgroup.h>
+  #else
+  #include <netdb.h>
+  #endif
+  int main() {
+      int r = setnetgrent (NULL);
+  };
+'''
+
+config_h.set('HAVE_SETNETGRENT_RETURN', cc.compiles(setnetgrent_return_src, name: 'setnetgrent return support'))
+
+# Select wether to use libsystemd-login, libelogind or ConsoleKit for session tracking
+session_tracking = get_option('session_tracking')
+enable_logind = (session_tracking != 'ConsoleKit')
+if enable_logind
+  if session_tracking == 'libsystemd-login'
+    logind_dep = dependency('libsystemd', required: false)
+    if not logind_dep.found()
+      logind_dep = dependency('libsystemd-login', not_found_message: 'libsystemd support requested but libsystemd or libsystemd-login library not found')
+    endif
+  else
+    logind_dep = dependency('libelogind', not_found_message: 'libelogind support requested but libelogind library not found')
+  endif
+
+  func = 'sd_uid_get_display'
+  config_h.set10('HAVE_' + func.to_upper(), cc.has_function(func, dependencies: logind_dep))
+
+  # systemd unit / service files
+  systemd_systemdsystemunitdir = get_option('systemdsystemunitdir')
+  if systemd_systemdsystemunitdir == ''
+    systemd_dep = dependency('systemd', not_found_message: 'systemd required but not found, please provide a valid systemd user unit dir or disable it')
+    # FIXME: systemd.pc file does not use variables with relative paths, so `define_variable` cannot be used
+    systemd_systemdsystemunitdir = systemd_dep.get_pkgconfig_variable('systemdsystemunitdir')
+  endif
+endif
+config_h.set('HAVE_LIBSYSTEMD', enable_logind)
+
+# User for running polkitd
+polkitd_user = get_option('polkitd_user')
+config_h.set_quoted('POLKITD_USER', polkitd_user)
+
+# Select which authentication framework to use
+auth_deps = []
+
+auth_fw = get_option('authfw')
+enable_pam = (auth_fw == 'pam')
+if enable_pam
+  # Check for PAM
+  pam_dep = cc.find_library('pam')
+  assert(pam_dep.found() and cc.has_function('pam_start', dependencies: pam_dep), 'Could not find pam/pam-devel, please install the needed packages.')
+
+  # how to call pam_strerror
+  pam_strerror_src = '''
+    #include <stdio.h>
+    #include <stdlib.h>
+    #include <security/pam_appl.h>
+    #endif
+    int main() {
+      @0@
+    };
+  '''
+
+  # FIXME: Not necessary anymore?
+  if cc.compiles(pam_strerror_src.format('pam_handle_t *pamh = 0; char *s = pam_strerror(pamh, PAM_SUCCESS);'))
+    # FIXME: unused?
+    config_h.set('PAM_STRERROR_TWO_ARGS', true)
+  else
+    message('how to call pam_strerror: ' + cc.compiles(pam_strerror_src.format('char *s = pam_strerror(PAM_SUCCESS);')).to_string('1', 'unknown'))
+  endif
+
+  pam_prefix = get_option('pam_prefix')
+  if pam_prefix == ''
+    pam_prefix = pk_sysconfdir
+  else
+    message('PAM files will be installed in prefix ' + pam_prefix)
+  endif
+
+  pam_module_dir = get_option('pam_module_dir')
+  if pam_module_dir == ''
+    pam_module_dir = pk_libdir / 'security'
+  endif
+
+  auth_deps += pam_dep
+elif auth_fw == 'shadow'
+  auth_deps += cc.find_library('crypt')
+endif
+config_h.set('POLKIT_AUTHFW_' + auth_fw.to_upper(), true)
+
+# FIXME: sigtimedwait is not used anywhere?
+'''
+if host_system == 'solaris'
+  rt_dep = cc.find_library('rt')
+  cc.has_function('sigtimedwait', dependencies: rt_dep)
+else
+  cc.has_function('sigtimedwait')
+endif
+'''
+
+os_type = get_option('os_type')
+if os_type == ''
+  os_paths = [
+    ['redhat', '/etc/sysconfig/network-scripts'],
+    ['suse', '/etc/SuSE-release'],
+    ['debian', '/etc/debian_version'],
+    ['gentoo', '/etc/gentoo-release'],
+    ['pardus', '/etc/pardus-release'],
+  ]
+
+  foreach os_path: os_paths
+    if run_command('test', '-e', os_path[1]).returncode() == 0
+      os_type = os_path[0]
+      break
+    endif
+  endforeach
+
+  if os_type == ''
+    message('Linux distribution autodetection failed, specify the distribution to target using -Dos_type=')
+  endif
+endif
+
+pam_include = get_option('pam_include')
+if pam_include == ''
+  if ['suse', 'solaris'].contains(os_type)
+    pam_conf = {
+      'PAM_FILE_INCLUDE_AUTH': 'common-auth',
+      'PAM_FILE_INCLUDE_ACCOUNT': 'common-account',
+      'PAM_FILE_INCLUDE_PASSWORD': 'common-password',
+      'PAM_FILE_INCLUDE_SESSION': 'common-session',
+    }
+  elif os_type.contains('bsd')
+    pam_conf = {
+      'PAM_FILE_INCLUDE_AUTH': 'system',
+      'PAM_FILE_INCLUDE_ACCOUNT': 'system',
+      'PAM_FILE_INCLUDE_PASSWORD': 'system',
+      'PAM_FILE_INCLUDE_SESSION': 'system',
+    }
+  #if ['redhat', 'gentoo', 'pardus'].contains(os_type)
+  else
+    pam_conf = {
+      'PAM_FILE_INCLUDE_AUTH': 'system-auth',
+      'PAM_FILE_INCLUDE_ACCOUNT': 'system-auth',
+      'PAM_FILE_INCLUDE_PASSWORD': 'system-auth',
+      'PAM_FILE_INCLUDE_SESSION': 'system-auth',
+    }
+  endif
+else
+  pam_conf = {
+    'PAM_FILE_INCLUDE_AUTH': pam_include,
+    'PAM_FILE_INCLUDE_ACCOUNT': pam_include,
+    'PAM_FILE_INCLUDE_PASSWORD': pam_include,
+    'PAM_FILE_INCLUDE_SESSION': pam_include,
+  }
+endif
+
+enable_introspection = get_option('introspection')
+if enable_introspection
+  dependency('gobject-introspection-1.0', version: '>= 0.6.2')
+endif
+
+content_files = files('COPYING')
+
+subdir('actions')
+subdir('data')
+subdir('src')
+subdir('docs')
+subdir('po')
+
+enable_tests = get_option('tests')
+if enable_tests
+  subdir('test')
+endif
+
+configure_file(
+  output: 'config.h',
+  configuration: config_h,
+)
+
+meson.add_install_script(
+  'meson_post_install.py',
+  get_option('bindir'),
+  pk_pkgdatadir,
+  pk_pkglibdir,
+  pk_pkgsysconfdir,
+  polkitd_user,
+)
+
+output = '\n        ' + meson.project_name() + ' ' + meson.project_version() + '\n'
+output += '        ============\n\n'
+output += '        prefix:                   ' + pk_prefix + '\n'
+output += '        datadir:                  ' + pk_datadir + '\n\n'
+output += '        includedir:               ' + pk_includedir + '\n'
+output += '        libdir:                   ' + pk_libdir + '\n'
+output += '        sysconfdir:               ' + pk_sysconfdir + '\n'
+output += '        source code location:     ' + source_root + '\n'
+output += '        compiler:                 ' + cc.get_id() + '\n'
+output += '        cflags:                   ' + ' '.join(compiler_flags) + '\n\n'
+if enable_man
+  output += '        xsltproc:                 ' + xsltproc.path() + '\n'
+endif
+output += '        introspection:            ' + enable_introspection.to_string() + '\n'
+output += '        Distribution/OS:          ' + os_type + '\n'
+output += '        Authentication framework: ' + auth_fw + '\n'
+output += '        Session tracking:         ' + session_tracking + '\n'
+if enable_logind
+  output += '        systemdsystemunitdir:     ' + systemd_systemdsystemunitdir + '\n'
+endif
+output += '        polkitd user:             ' + polkitd_user + ' \n'
+output += '        PAM support:              ' + enable_pam.to_string() + '\n\n'
+if enable_pam
+  output += '        PAM file auth:            ' + pam_conf['PAM_FILE_INCLUDE_AUTH'] + '\n'
+  output += '        PAM file acount:          ' + pam_conf['PAM_FILE_INCLUDE_ACCOUNT'] + '\n'
+  output += '        PAM file password:        ' + pam_conf['PAM_FILE_INCLUDE_PASSWORD'] + '\n'
+  output += '        PAM file session:         ' + pam_conf['PAM_FILE_INCLUDE_SESSION'] + '\n\n'
+endif
+output += '        Building api docs:        ' + enable_gtk_doc.to_string() + '\n'
+output += '        Building man pages:       ' + enable_man.to_string() + '\n'
+output += '        Building examples:        ' + enable_examples.to_string() + '\n'
+output += '        Building tests:           ' + enable_tests.to_string()
+message(output)
diff --git a/meson_options.txt b/meson_options.txt
new file mode 100644
index 00000000..25e3e779
--- /dev/null
+++ b/meson_options.txt
@@ -0,0 +1,18 @@
+option('session_tracking', type: 'combo', choices: ['libsystemd-login', 'libelogind', 'ConsoleKit'], value: 'ConsoleKit', description: 'session tracking (libsystemd-login/libelogind/ConsoleKit)')
+option('systemdsystemunitdir', type: 'string', value: '', description: 'custom directory for systemd system units')
+
+option('polkitd_user', type: 'string', value: 'polkitd', description: 'User for running polkitd (polkitd)')
+
+option('authfw', type: 'combo', choices: ['pam', 'shadow', 'bsdauth'], value: 'pam', description: 'Authentication framework (pam/shadow)')
+option('os_type', type: 'combo', choices: ['redhat', 'suse', 'gentoo', 'pardus', 'solaris', 'netbsd', ''], value: '', description: 'distribution or OS')
+
+option('pam_include', type: 'string', value: '', description: 'pam file to include')
+option('pam_module_dir', type: 'string', value: '', description: 'directory to install PAM security module')
+option('pam_prefix', type: 'string', value: '', description: 'specify where pam files go')
+
+option('examples', type: 'boolean', value: false, description: 'Build example programs')
+option('tests', type: 'boolean', value: false, description: 'Build tests')
+option('introspection', type: 'boolean', value: true, description: 'Enable introspection for this build')
+
+option('gtk_doc', type: 'boolean', value: false, description: 'use gtk-doc to build documentation')
+option('man', type: 'boolean', value: false, description: 'build manual pages')
diff --git a/meson_post_install.py b/meson_post_install.py
new file mode 100644
index 00000000..784d4916
--- /dev/null
+++ b/meson_post_install.py
@@ -0,0 +1,37 @@
+#!/usr/bin/env python3
+
+import getpass
+import os
+import subprocess
+import sys
+
+prefix = os.environ['MESON_INSTALL_DESTDIR_PREFIX']
+
+bindir = os.path.join(prefix, sys.argv[1])
+pkgdatadir = os.path.join(prefix, sys.argv[2])
+pkglibdir = os.path.join(prefix, sys.argv[3])
+pkgsysconfdir = os.path.join(prefix, sys.argv[4])
+
+polkitd_user = sys.argv[5]
+
+subprocess.check_call(['chmod', '4755', os.path.join(bindir, 'pkexec')])
+
+dst_dirs = [
+    os.path.join(pkgsysconfdir, 'rules.d'),
+    os.path.join(pkgdatadir, 'rules.d')
+]
+
+for dst in dst_dirs:
+    if not os.path.exists(dst):
+        os.makedirs(dst)
+        subprocess.check_call(['chmod', '700', dst])
+        if getpass.getuser() == "root":
+            subprocess.check_call(['chown', polkitd_user, dst])
+
+# polkit-agent-helper-1 need to be setuid root because it's used to
+# authenticate not only the invoking user, but possibly also root
+# and/or other users.
+dst = os.path.join(pkglibdir, 'polkit-agent-helper-1')
+subprocess.check_call(['chmod', '4755', dst])
+if getpass.getuser() == "root":
+    subprocess.check_call(['chown', 'root', dst])
diff --git a/po/meson.build b/po/meson.build
new file mode 100644
index 00000000..4d9ab58b
--- /dev/null
+++ b/po/meson.build
@@ -0,0 +1 @@
+i18n.gettext(pk_api_name, preset: 'glib')
diff --git a/src/Makefile.am b/src/Makefile.am
index 09fc7b34..b3138264 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -5,6 +5,11 @@ if BUILD_EXAMPLES
 SUBDIRS += examples
 endif
 
+EXTRA_DIST =		\
+	meson.build	\
+	symbol.map	\
+	$(NULL)
+
 clean-local :
 	rm -f *~
 
diff --git a/src/examples/Makefile.am b/src/examples/Makefile.am
index 9b885f33..3ee373fd 100644
--- a/src/examples/Makefile.am
+++ b/src/examples/Makefile.am
@@ -59,7 +59,10 @@ dist_polkit_action_DATA = org.freedesktop.policykit.examples.pkexec.policy
 
 DISTCLEANFILES = org.freedesktop.policykit.examples.pkexec.policy
 
-EXTRA_DIST = org.freedesktop.policykit.examples.pkexec.policy.in
+EXTRA_DIST =							\
+	org.freedesktop.policykit.examples.pkexec.policy.in	\
+	meson.build						\
+	$(NULL)
 
 # ----------------------------------------------------------------------------------------------------
 
diff --git a/src/examples/meson.build b/src/examples/meson.build
new file mode 100644
index 00000000..5f33afc3
--- /dev/null
+++ b/src/examples/meson.build
@@ -0,0 +1,27 @@
+policy = 'org.freedesktop.policykit.examples.pkexec.policy'
+
+custom_target(
+  policy,
+  input: policy + '.in',
+  output: '@BASENAME@',
+  command: intltool_xml_cmd,
+  install: true,
+  install_dir: pk_pkgactiondir,
+)
+
+program = 'cancel'
+
+executable(
+  program,
+  program + '.c',
+  include_directories: top_inc,
+  dependencies: libpolkit_gobject_dep,
+)
+
+executable(
+  'pk-example-frobnicate',
+  'frobnicate.c',
+  include_directories: top_inc,
+  dependencies: glib_dep,
+  install: true,
+)
diff --git a/src/meson.build b/src/meson.build
new file mode 100644
index 00000000..4073333b
--- /dev/null
+++ b/src/meson.build
@@ -0,0 +1,14 @@
+src_inc = include_directories('.')
+
+symbol_map = meson.current_source_dir() / 'symbol.map'
+ldflags = cc.get_supported_link_arguments('-Wl,--version-script,@0@'.format(symbol_map))
+
+subdir('polkit')
+subdir('polkitbackend')
+subdir('polkitagent')
+subdir('programs')
+
+enable_examples = get_option('examples')
+if enable_examples
+  subdir('examples')
+endif
diff --git a/src/polkit/Makefile.am b/src/polkit/Makefile.am
index ca363554..2fb56162 100644
--- a/src/polkit/Makefile.am
+++ b/src/polkit/Makefile.am
@@ -129,7 +129,12 @@ include $(INTROSPECTION_MAKEFILE)
 
 endif # HAVE_INTROSPECTION
 
-EXTRA_DIST = polkitenumtypes.h.template polkitenumtypes.c.template
+EXTRA_DIST =				\
+	polkitenumtypes.h.template	\
+	polkitenumtypes.c.template	\
+	meson.build			\
+	$(NULL)
+
 CLEANFILES = $(gir_DATA) $(typelibs_DATA)
 
 dist-hook :
diff --git a/src/polkit/meson.build b/src/polkit/meson.build
new file mode 100644
index 00000000..63dc1e85
--- /dev/null
+++ b/src/polkit/meson.build
@@ -0,0 +1,135 @@
+name = '@0@-gobject-@1@'.format(meson.project_name(), pk_api_version)
+
+enum_headers = files(
+  'polkitauthorityfeatures.h',
+  'polkitcheckauthorizationflags.h',
+  'polkiterror.h',
+  'polkitimplicitauthorization.h',
+)
+
+headers = enum_headers + files(
+  'polkitactiondescription.h',
+  'polkitauthority.h',
+  'polkitauthorizationresult.h',
+  'polkitdetails.h',
+  'polkit.h',
+  'polkitidentity.h',
+  'polkitpermission.h',
+  'polkitsubject.h',
+  'polkitsystembusname.h',
+  'polkittemporaryauthorization.h',
+  'polkitunixgroup.h',
+  'polkitunixnetgroup.h',
+  'polkitunixprocess.h',
+  'polkitunixsession.h',
+  'polkitunixuser.h',
+)
+
+private_headers = files(
+  'polkitprivate.h',
+  'polkittypes.h',
+)
+
+install_headers(
+  headers + private_headers,
+  install_dir: pk_pkgincludedir / 'polkit',
+)
+
+common_deps = [
+  gio_dep,
+  glib_dep,
+]
+
+enum_sources = gnome.mkenums_simple(
+  'polkitenumtypes',
+  sources: enum_headers,
+  install_header: true,
+  install_dir: pk_pkgincludedir / 'polkit',
+)
+
+sources = enum_sources + files(
+  'polkitactiondescription.c',
+  'polkitauthority.c',
+  'polkitauthorityfeatures.c',
+  'polkitauthorizationresult.c',
+  'polkitcheckauthorizationflags.c',
+  'polkitdetails.c',
+  'polkiterror.c',
+  'polkitidentity.c',
+  'polkitimplicitauthorization.c',
+  'polkitpermission.c',
+  'polkitsubject.c',
+  'polkitsystembusname.c',
+  'polkittemporaryauthorization.c',
+  'polkitunixgroup.c',
+  'polkitunixnetgroup.c',
+  'polkitunixprocess.c',
+  'polkitunixuser.c',
+)
+
+incs = [
+  top_inc,
+  src_inc,
+]
+
+deps = common_deps
+
+c_flags = '-D_POLKIT_COMPILATION'
+
+if enable_logind
+  sources += 'polkitunixsession-systemd.c'
+
+  deps += logind_dep
+else
+  sources += 'polkitunixsession.c'
+endif
+
+libpolkit_gobject = shared_library(
+  name,
+  sources: sources,
+  version: libversion,
+  include_directories: incs,
+  dependencies: deps,
+  c_args: c_flags,
+  link_args: ldflags,
+  link_depends: symbol_map,
+  install: true,
+)
+
+libpolkit_gobject_dep = declare_dependency(
+  sources: enum_sources[1],
+  include_directories: src_inc,
+  dependencies: common_deps,
+  link_with: libpolkit_gobject,
+)
+
+pkg.generate(
+  libraries: libpolkit_gobject,
+  version: pk_version,
+  name: name,
+  description: 'PolicyKit Authorization API',
+  filebase: name,
+  subdirs: pk_api_name,
+  requires: common_deps,
+  variables: [
+    'exec_prefix=${prefix}',
+    'datadir=' + ('${prefix}' / pk_datadir),
+    'policydir=' + ('${datadir}' / pk_actiondir),
+    'actiondir=' + ('${datadir}' / pk_actiondir),
+    'pkcheck_supports_uid=true',
+  ],
+)
+
+if enable_introspection
+  libpolkit_gobject_gir = gnome.generate_gir(
+    libpolkit_gobject,
+    sources: sources + headers,
+    extra_args: c_flags,
+    nsversion: pk_gir_version,
+    namespace: pk_gir_ns,
+    export_packages: name,
+    includes: 'Gio-2.0',
+    header: 'polkit/polkit.h',
+    install: true,
+  )
+endif
diff --git a/src/polkitagent/Makefile.am b/src/polkitagent/Makefile.am
index 49720db3..c98f29de 100644
--- a/src/polkitagent/Makefile.am
+++ b/src/polkitagent/Makefile.am
@@ -150,7 +150,13 @@ install-data-hook:
 	-chown root $(DESTDIR)$(libprivdir)/polkit-agent-helper-1
 	-chmod 4755 $(DESTDIR)$(libprivdir)/polkit-agent-helper-1
 
-EXTRA_DIST = polkitagentmarshal.list polkitagentenumtypes.h.template polkitagentenumtypes.c.template
+EXTRA_DIST =				\
+	polkitagentmarshal.list		\
+	polkitagentenumtypes.h.template	\
+	polkitagentenumtypes.c.template	\
+	meson.build			\
+	$(NULL)
+
 CLEANFILES = $(gir_DATA) $(typelibs_DATA)
 
 dist-hook :
diff --git a/src/polkitagent/meson.build b/src/polkitagent/meson.build
new file mode 100644
index 00000000..84aa260f
--- /dev/null
+++ b/src/polkitagent/meson.build
@@ -0,0 +1,119 @@
+name = '@0@-agent-@1@'.format(meson.project_name(), pk_api_version)
+
+enum_headers = files('polkitagentlistener.h')
+
+headers = enum_headers + files(
+  'polkitagent.h',
+  'polkitagentsession.h',
+  'polkitagenttextlistener.h',
+  'polkitagenttypes.h',
+)
+
+install_headers(
+  headers,
+  install_dir: pk_pkgincludedir / 'polkitagent',
+)
+
+enum_sources = gnome.mkenums_simple(
+  'polkitagentenumtypes',
+  sources: enum_headers,
+  install_header: true,
+  install_dir: pk_pkgincludedir / 'polkitagent',
+)
+
+marshal = 'polkitagentmarshal'
+
+marshal_sources = gnome.genmarshal(
+  marshal,
+  sources: marshal + '.list',
+  prefix: '_polkit_agent_marshal',
+)
+
+sources = enum_sources + marshal_sources + files(
+  'polkitagentlistener.c',
+  'polkitagentsession.c',
+  'polkitagenttextlistener.c',
+)
+
+deps = [
+  expat_dep,
+  gio_unix_dep,
+  libpolkit_gobject_dep,
+]
+
+c_flags = [
+  '-D_POLKIT_COMPILATION',
+  '-D_POLKIT_AGENT_COMPILATION',
+  '-DPACKAGE_PREFIX="@0@"'.format(pk_prefix),
+]
+
+libpolkit_agent = shared_library(
+  name,
+  sources: sources,
+  version: libversion,
+  include_directories: top_inc,
+  dependencies: deps,
+  c_args: c_flags,
+  link_args: ldflags,
+  link_depends: symbol_map,
+  install: true,
+)
+
+libpolkit_agent_dep = declare_dependency(
+  sources: enum_sources[1],
+  include_directories: '.',
+  dependencies: libpolkit_gobject_dep,
+  link_with: libpolkit_agent,
+)
+
+pkg.generate(
+  libraries: libpolkit_agent,
+  version: pk_version,
+  name: name,
+  description: 'PolicyKit Authentication Agent API',
+  filebase: name,
+  subdirs: pk_api_name,
+  requires: 'polkit-gobject-1',
+  variables: 'exec_prefix=${prefix}',
+)
+
+if enable_introspection
+  incs = [
+    'Gio-2.0',
+    libpolkit_gobject_gir[0],
+  ]
+
+  c_flags = [
+    '-D_POLKIT_AGENT_COMPILATION',
+    '-D_POLKIT_COMPILATION',
+  ]
+
+  gnome.generate_gir(
+    libpolkit_agent,
+    sources: sources + headers,
+    includes: incs,
+    extra_args: c_flags,
+    nsversion: pk_gir_version,
+    namespace: 'PolkitAgent',
+    export_packages: name,
+    header: 'polkitagent/polkitagent.h',
+    install: true,
+  )
+endif
+
+sources = files(
+  'polkitagenthelperprivate.c',
+  'polkitagenthelper-@0@.c'.format(auth_fw),
+)
+
+deps = auth_deps + [libpolkit_gobject_dep]
+
+executable(
+  '@0@-agent-helper-@1@'.format(meson.project_name(), pk_api_version),
+  sources,
+  include_directories: top_inc,
+  dependencies: deps,
+  c_args: '-D_POLKIT_COMPILATION',
+  install: true,
+  install_dir: pk_pkglibdir,
+)
diff --git a/src/polkitbackend/Makefile.am b/src/polkitbackend/Makefile.am
index e48b739c..7e3c0809 100644
--- a/src/polkitbackend/Makefile.am
+++ b/src/polkitbackend/Makefile.am
@@ -99,6 +99,7 @@ CLEANFILES = $(BUILT_SOURCES)
 EXTRA_DIST =								\
 	init.js								\
 	toarray.pl							\
+	meson.build							\
 	$(rules_DATA)							\
 	$(NULL)
 
diff --git a/src/polkitbackend/meson.build b/src/polkitbackend/meson.build
new file mode 100644
index 00000000..93c3c345
--- /dev/null
+++ b/src/polkitbackend/meson.build
@@ -0,0 +1,72 @@
+name = '@0@-backend-@1@'.format(meson.project_name(), pk_api_version)
+
+sources = files(
+  'polkitbackendactionlookup.c',
+  'polkitbackendactionpool.c',
+  'polkitbackendauthority.c',
+  'polkitbackendinteractiveauthority.c',
+  'polkitbackendjsauthority.cpp',
+)
+
+output = 'initjs.h'
+
+sources += custom_target(
+  output,
+  input: 'init.js',
+  output: output,
+  capture: true,
+  command: [find_program('perl'), meson.current_source_dir() / 'toarray.pl', '@INPUT@', 'init_js'],
+)
+
+deps = [
+  expat_dep,
+  libpolkit_gobject_dep,
+  mozjs_dep,
+]
+
+c_flags = [
+  '-D_POLKIT_COMPILATION',
+  '-D_POLKIT_BACKEND_COMPILATION',
+  '-DPACKAGE_DATA_DIR="@0@"'.format(pk_prefix / pk_datadir),
+  '-DPACKAGE_SYSCONF_DIR="@0@"'.format(pk_prefix / pk_sysconfdir),
+]
+
+if enable_logind
+  sources += files('polkitbackendsessionmonitor-systemd.c')
+
+  deps += logind_dep
+else
+  sources += files('polkitbackendsessionmonitor.c')
+endif
+
+libpolkit_backend = static_library(
+  name,
+  sources: sources,
+  include_directories: top_inc,
+  dependencies: deps,
+  c_args: c_flags,
+  cpp_args: c_flags,
+)
+
+install_data(
+  '50-default.rules',
+  install_dir: pk_pkgsysconfdir / 'rules.d',
+)
+
+program = 'polkitd'
+
+c_flags = [
+  '-DG_LOG_DOMAIN="@0@-@1@"'.format(program, pk_api_version),
+  '-DPOLKIT_BACKEND_I_KNOW_API_IS_SUBJECT_TO_CHANGE',
+]
+
+executable(
+  program,
+  program + '.c',
+  include_directories: top_inc,
+  dependencies: libpolkit_gobject_dep,
+  c_args: c_flags,
+  link_with: libpolkit_backend,
+  install: true,
+  install_dir: pk_pkglibdir,
+)
diff --git a/src/programs/Makefile.am b/src/programs/Makefile.am
index d69853c8..f19a7c8e 100644
--- a/src/programs/Makefile.am
+++ b/src/programs/Makefile.am
@@ -84,6 +84,8 @@ pkaction_LDADD =  	                      				\
 
 # ----------------------------------------------------------------------------------------------------
 
+EXTRA_DIST = meson.build
+
 clean-local :
 	rm -f *~
 
diff --git a/src/programs/meson.build b/src/programs/meson.build
new file mode 100644
index 00000000..03794be6
--- /dev/null
+++ b/src/programs/meson.build
@@ -0,0 +1,16 @@
+programs = [
+  ['pkexec', auth_deps + [libpolkit_agent_dep]],
+  ['pkcheck', [libpolkit_agent_dep]],
+  ['pkaction', [libpolkit_gobject_dep]],
+  ['pkttyagent', [libpolkit_agent_dep]],
+]
+
+foreach program: programs
+  executable(
+    program[0],
+    program[0] + '.c',
+    include_directories: top_inc,
+    dependencies: program[1],
+    install: true,
+  )
+endforeach
diff --git a/src/symbol.map b/src/symbol.map
new file mode 100644
index 00000000..2d38225a
--- /dev/null
+++ b/src/symbol.map
@@ -0,0 +1,6 @@
+{
+global:
+  polkit_*;
+local:
+  *;
+};
diff --git a/test/Makefile.am b/test/Makefile.am
index 59d06800..aacc892a 100644
--- a/test/Makefile.am
+++ b/test/Makefile.am
@@ -6,7 +6,10 @@ noinst_LTLIBRARIES = libpolkit-test-helper.la
 libpolkit_test_helper_la_SOURCES = polkittesthelper.c polkittesthelper.h
 libpolkit_test_helper_la_LIBADD = $(GLIB_LIBS)
 
-EXTRA_DIST = data
+EXTRA_DIST =		\
+	data		\
+	meson.build	\
+	$(NULL)
 
 # Use mocklibc to override NSS services for tests
 export MOCK_PASSWD   := $(abs_top_srcdir)/test/data/etc/passwd
diff --git a/test/meson.build b/test/meson.build
new file mode 100644
index 00000000..0a9aed6d
--- /dev/null
+++ b/test/meson.build
@@ -0,0 +1,28 @@
+libpolkit_test_helper = static_library(
+  'polkit-test-helper',
+  sources: 'polkittesthelper.c',
+  dependencies: glib_dep,
+)
+
+libpolkit_test_helper_dep = declare_dependency(
+  include_directories: '.',
+  dependencies: glib_dep,
+  link_with: libpolkit_test_helper,
+)
+
+subdir('polkit')
+subdir('polkitbackend')
+
+# FIXME: All mocklibc side is missing
+'''
+SUBDIRS = mocklibc
+
+# Use mocklibc to override NSS services for tests
+export MOCK_PASSWD   := $(abs_top_srcdir)/test/data/etc/passwd
+export MOCK_GROUP    := $(abs_top_srcdir)/test/data/etc/group
+export MOCK_NETGROUP := $(abs_top_srcdir)/test/data/etc/netgroup
+export TESTS_ENVIRONMENT := $(abs_top_builddir)/test/mocklibc/bin/mocklibc
+
+# Include path to mock config files
+export POLKIT_TEST_DATA := $(abs_top_srcdir)/test/data
+'''
diff --git a/test/polkit/Makefile.am b/test/polkit/Makefile.am
index 1e0a23fb..261d1d5b 100644
--- a/test/polkit/Makefile.am
+++ b/test/polkit/Makefile.am
@@ -48,6 +48,8 @@ polkitidentitytest_SOURCES = polkitidentitytest.c
 check_PROGRAMS = $(TEST_PROGS)
 TESTS = $(TEST_PROGS)
 
+EXTRA_DIST = meson.build
+
 clean-local :
 	rm -f *~
 
diff --git a/test/polkit/meson.build b/test/polkit/meson.build
new file mode 100644
index 00000000..89508707
--- /dev/null
+++ b/test/polkit/meson.build
@@ -0,0 +1,22 @@
+test_units = [
+  'polkitunixusertest',
+  'polkitunixgrouptest',
+  'polkitunixnetgrouptest',
+  'polkitidentitytest',
+]
+
+c_flags = [
+  '-D_POLKIT_COMPILATION',
+  '-D_POLKIT_BACKEND_COMPILATION',
+]
+
+foreach test_unit: test_units
+  exe = executable(
+    test_unit,
+    test_unit + '.c',
+    dependencies: libpolkit_gobject_dep,
+    c_args: c_flags,
+  )
+
+  test(test_unit, exe, is_parallel: false)
+endforeach
diff --git a/test/polkitbackend/Makefile.am b/test/polkitbackend/Makefile.am
index 4b13256f..282c5c9d 100644
--- a/test/polkitbackend/Makefile.am
+++ b/test/polkitbackend/Makefile.am
@@ -45,6 +45,8 @@ TEST_PROGS += polkitbackendjsauthoritytest-wrapper.py
 noinst_PROGRAMS = polkitbackendjsauthoritytest
 TESTS = $(TEST_PROGS)
 
+EXTRA_DIST = meson.build
+
 clean-local :
 	rm -f *~
 
diff --git a/test/polkitbackend/meson.build b/test/polkitbackend/meson.build
new file mode 100644
index 00000000..1dc206a3
--- /dev/null
+++ b/test/polkitbackend/meson.build
@@ -0,0 +1,22 @@
+test_unit = 'test-polkitbackendjsauthority'
+
+deps = [
+  libpolkit_gobject_dep,
+  libpolkit_test_helper_dep,
+]
+
+c_flags = [
+  '-D_POLKIT_COMPILATION',
+  '-D_POLKIT_BACKEND_COMPILATION',
+]
+
+exe = executable(
+  test_unit,
+  test_unit + '.c',
+  include_directories: top_inc,
+  dependencies: deps,
+  c_args: c_flags,
+  link_with: libpolkit_backend,
+)
+
+test(test_unit, exe)
-- 
GitLab


From 89b95808edfae2284d73a30e0544ae66951cb576 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?I=C3=B1igo=20Mart=C3=ADnez?= <inigomartinez@gmail.com>
Date: Sun, 20 Jan 2019 22:24:27 +0100
Subject: [PATCH 2/3] build: Fix meson test support

polkit's meson port was unable to execute unit test properly because
`mocklibc` support was missing.

This support has been added by using meson's wrap dependency system
feature, which is able to download `mocklibc` and the patch that
adds meson support to it. Thanks to this `polkit` is able to execute
unit tests properly. A new wrap file has also been merged[0].

This improvement has also hit an issue in the way meson handles every
project properties because they are inherited for every used
subproject[1]. In this case, `mocklibc` is not able to build properly
when some C standards and compiler options are used. To avoid this,
the C99 standaed flag and compiler options are used only in a project
scope, so `mocklibc` is able to build properly.

[0] https://github.com/mesonbuild/mocklibc/pull/1
[1] https://github.com/mesonbuild/meson/issues/1889
---
 meson.build                                   |  12 +++++----
 subprojects/mocklibc.wrap                     |  10 ++++++++
 .../packagecache/mocklibc-1.0-2-wrap.zip      | Bin 0 -> 3989 bytes
 subprojects/packagecache/mocklibc-1.0.tar.gz  | Bin 0 -> 294222 bytes
 test/meson.build                              |  24 ++++++++----------
 test/polkit/meson.build                       |   7 ++++-
 test/polkitbackend/meson.build                |   7 ++++-
 7 files changed, 40 insertions(+), 20 deletions(-)
 create mode 100644 subprojects/mocklibc.wrap
 create mode 100644 subprojects/packagecache/mocklibc-1.0-2-wrap.zip
 create mode 100644 subprojects/packagecache/mocklibc-1.0.tar.gz

diff --git a/meson.build b/meson.build
index f52c248f..598f344b 100644
--- a/meson.build
+++ b/meson.build
@@ -2,10 +2,7 @@ project(
   'polkit', ['c', 'cpp'],
   version: '0.116',
   license: 'LGPL2+',
-  default_options: [
-    'buildtype=debugoptimized',
-    'c_std=c99',
-  ],
+  default_options: 'buildtype=debugoptimized',
   meson_version: '>= 0.50.0',
 )
 
@@ -88,7 +85,12 @@ foreach func: check_functions
 endforeach
 
 # compiler flags
-common_flags = ['-DHAVE_CONFIG_H']
+common_flags = [
+  # FIXME: this should go as 'c_std=c99' in project's default_options.
+  #        https://github.com/mesonbuild/meson/issues/1889
+  '-std=c99',
+  '-DHAVE_CONFIG_H',
+]
 compiler_flags = []
 
 if get_option('buildtype').contains('debug')
diff --git a/subprojects/mocklibc.wrap b/subprojects/mocklibc.wrap
new file mode 100644
index 00000000..af82298c
--- /dev/null
+++ b/subprojects/mocklibc.wrap
@@ -0,0 +1,10 @@
+[wrap-file]
+directory = mocklibc-1.0
+
+source_url = https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/mocklibc/mocklibc-1.0.tar.gz
+source_filename = mocklibc-1.0.tar.gz
+source_hash = b2236a6af1028414783e9734a46ea051916ec226479d6a55a3bb823bff68f120
+
+patch_url = https://wrapdb.mesonbuild.com/v1/projects/mocklibc/1.0/2/get_zip
+patch_filename = mocklibc-1.0-2-wrap.zip
+patch_hash = 0280f96a2eeb3c023e5acf4e00cef03d362868218d4a85347ea45137c0ef6c56
diff --git a/subprojects/packagecache/mocklibc-1.0-2-wrap.zip b/subprojects/packagecache/mocklibc-1.0-2-wrap.zip
new file mode 100644
index 0000000000000000000000000000000000000000..656ebaf9f1fb34e1ef3d6b1cd404421cbba13a1f
GIT binary patch
literal 3989
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
Xax%~+CHw0%+1cB1Cc$3nzjpruOm)UZ

literal 0
HcmV?d00001

diff --git a/subprojects/packagecache/mocklibc-1.0.tar.gz b/subprojects/packagecache/mocklibc-1.0.tar.gz
new file mode 100644
index 0000000000000000000000000000000000000000..568a05337fa216429ec0659ff91179da13eaeb17
GIT binary patch
literal 294222
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

literal 0
HcmV?d00001

diff --git a/test/meson.build b/test/meson.build
index 0a9aed6d..3f02d357 100644
--- a/test/meson.build
+++ b/test/meson.build
@@ -10,19 +10,17 @@ libpolkit_test_helper_dep = declare_dependency(
   link_with: libpolkit_test_helper,
 )
 
-subdir('polkit')
-subdir('polkitbackend')
+libmocklibc = subproject('mocklibc').get_variable('libmocklibc')
 
-# FIXME: All mocklibc side is missing
-'''
-SUBDIRS = mocklibc
+test_data_dir = meson.current_source_dir() / 'data'
+test_etc_dir = test_data_dir / 'etc'
 
-# Use mocklibc to override NSS services for tests
-export MOCK_PASSWD   := $(abs_top_srcdir)/test/data/etc/passwd
-export MOCK_GROUP    := $(abs_top_srcdir)/test/data/etc/group
-export MOCK_NETGROUP := $(abs_top_srcdir)/test/data/etc/netgroup
-export TESTS_ENVIRONMENT := $(abs_top_builddir)/test/mocklibc/bin/mocklibc
+test_env = environment()
+test_env.set('LD_PRELOAD', libmocklibc.full_path())
+test_env.set('MOCK_PASSWD', test_etc_dir / 'passwd')
+test_env.set('MOCK_GROUP', test_etc_dir / 'group')
+test_env.set('MOCK_NETGROUP', test_etc_dir / 'netgroup')
+test_env.set('POLKIT_TEST_DATA', test_data_dir)
 
-# Include path to mock config files
-export POLKIT_TEST_DATA := $(abs_top_srcdir)/test/data
-'''
+subdir('polkit')
+subdir('polkitbackend')
diff --git a/test/polkit/meson.build b/test/polkit/meson.build
index 89508707..9c5254f6 100644
--- a/test/polkit/meson.build
+++ b/test/polkit/meson.build
@@ -18,5 +18,10 @@ foreach test_unit: test_units
     c_args: c_flags,
   )
 
-  test(test_unit, exe, is_parallel: false)
+  test(
+    test_unit,
+    exe,
+    env: test_env,
+    is_parallel: false,
+  )
 endforeach
diff --git a/test/polkitbackend/meson.build b/test/polkitbackend/meson.build
index 1dc206a3..facf7d29 100644
--- a/test/polkitbackend/meson.build
+++ b/test/polkitbackend/meson.build
@@ -19,4 +19,9 @@ exe = executable(
   link_with: libpolkit_backend,
 )
 
-test(test_unit, exe)
+test(
+  test_unit,
+  exe,
+  env: test_env,
+  is_parallel: false,
+)
-- 
GitLab


From 03d98fb047aabbe4ef0263f1d646cd23eefb1723 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?I=C3=B1igo=20Mart=C3=ADnez?= <inigomartinez@gmail.com>
Date: Mon, 21 Jan 2019 09:47:45 +0100
Subject: [PATCH 3/3] build: Remove autotools

To avoid the burden of maintaining multiple build systems
autotools support is removed.
---
 Makefile.am                                   |  42 --
 actions/Makefile.am                           |  21 -
 autogen.sh                                    | 123 ----
 buildutil/attributes.m4                       | 292 ---------
 configure.ac                                  | 613 ------------------
 data/Makefile.am                              |  70 --
 docs/Makefile.am                              |   9 -
 docs/man/Makefile.am                          |  33 -
 docs/polkit/Makefile.am                       | 109 ----
 git.mk                                        | 333 ----------
 po/POTFILES.skip                              |   1 -
 src/Makefile.am                               |  16 -
 src/examples/Makefile.am                      |  72 --
 src/polkit/Makefile.am                        | 147 -----
 src/polkit/polkitenumtypes.c.template         |  39 --
 src/polkit/polkitenumtypes.h.template         |  24 -
 src/polkitagent/Makefile.am                   | 168 -----
 .../polkitagentenumtypes.c.template           |  39 --
 .../polkitagentenumtypes.h.template           |  24 -
 src/polkitbackend/Makefile.am                 | 120 ----
 src/programs/Makefile.am                      |  95 ---
 test/Makefile.am                              |  34 -
 test/mocklibc/AUTHORS                         |   1 -
 test/mocklibc/COPYING                         | 202 ------
 test/mocklibc/ChangeLog                       |  10 -
 test/mocklibc/INSTALL                         | 365 -----------
 test/mocklibc/Makefile.am                     |   5 -
 test/mocklibc/NEWS                            |   0
 test/mocklibc/README                          | 121 ----
 test/mocklibc/bin/Makefile.am                 |  27 -
 test/mocklibc/bin/mocklibc-test.in            | 136 ----
 test/mocklibc/bin/mocklibc.in                 |  34 -
 test/mocklibc/configure.ac                    |  38 --
 test/mocklibc/example/group                   |   4 -
 test/mocklibc/example/netgroup                |   5 -
 test/mocklibc/example/passwd                  |   3 -
 test/mocklibc/src/Makefile.am                 |  10 -
 test/mocklibc/src/grp.c                       | 156 -----
 test/mocklibc/src/netdb.c                     | 100 ---
 test/mocklibc/src/netgroup-debug.c            |  84 ---
 test/mocklibc/src/netgroup-debug.h            |  58 --
 test/mocklibc/src/netgroup.c                  | 345 ----------
 test/mocklibc/src/netgroup.h                  | 144 ----
 test/mocklibc/src/pwd.c                       |  99 ---
 test/polkit/Makefile.am                       |  56 --
 test/polkitbackend/Makefile.am                |  53 --
 46 files changed, 4480 deletions(-)
 delete mode 100644 Makefile.am
 delete mode 100644 actions/Makefile.am
 delete mode 100755 autogen.sh
 delete mode 100644 buildutil/attributes.m4
 delete mode 100644 configure.ac
 delete mode 100644 data/Makefile.am
 delete mode 100644 docs/Makefile.am
 delete mode 100644 docs/man/Makefile.am
 delete mode 100644 docs/polkit/Makefile.am
 delete mode 100644 git.mk
 delete mode 100644 po/POTFILES.skip
 delete mode 100644 src/Makefile.am
 delete mode 100644 src/examples/Makefile.am
 delete mode 100644 src/polkit/Makefile.am
 delete mode 100644 src/polkit/polkitenumtypes.c.template
 delete mode 100644 src/polkit/polkitenumtypes.h.template
 delete mode 100644 src/polkitagent/Makefile.am
 delete mode 100644 src/polkitagent/polkitagentenumtypes.c.template
 delete mode 100644 src/polkitagent/polkitagentenumtypes.h.template
 delete mode 100644 src/polkitbackend/Makefile.am
 delete mode 100644 src/programs/Makefile.am
 delete mode 100644 test/Makefile.am
 delete mode 100644 test/mocklibc/AUTHORS
 delete mode 100644 test/mocklibc/COPYING
 delete mode 100644 test/mocklibc/ChangeLog
 delete mode 100644 test/mocklibc/INSTALL
 delete mode 100644 test/mocklibc/Makefile.am
 delete mode 100644 test/mocklibc/NEWS
 delete mode 100644 test/mocklibc/README
 delete mode 100644 test/mocklibc/bin/Makefile.am
 delete mode 100644 test/mocklibc/bin/mocklibc-test.in
 delete mode 100644 test/mocklibc/bin/mocklibc.in
 delete mode 100644 test/mocklibc/configure.ac
 delete mode 100644 test/mocklibc/example/group
 delete mode 100644 test/mocklibc/example/netgroup
 delete mode 100644 test/mocklibc/example/passwd
 delete mode 100644 test/mocklibc/src/Makefile.am
 delete mode 100644 test/mocklibc/src/grp.c
 delete mode 100644 test/mocklibc/src/netdb.c
 delete mode 100644 test/mocklibc/src/netgroup-debug.c
 delete mode 100644 test/mocklibc/src/netgroup-debug.h
 delete mode 100644 test/mocklibc/src/netgroup.c
 delete mode 100644 test/mocklibc/src/netgroup.h
 delete mode 100644 test/mocklibc/src/pwd.c
 delete mode 100644 test/polkit/Makefile.am
 delete mode 100644 test/polkitbackend/Makefile.am

diff --git a/Makefile.am b/Makefile.am
deleted file mode 100644
index e3ac5fac..00000000
--- a/Makefile.am
+++ /dev/null
@@ -1,42 +0,0 @@
-## Process this file with automake to produce Makefile.in
-
-SUBDIRS = actions data src docs po
-
-if BUILD_TEST
-SUBDIRS += test
-endif
-
-NULL =
-
-EXTRA_DIST = 			\
-	HACKING 		\
-	meson.build		\
-	meson_options.txt	\
-	meson_post_install.py	\
-	po/meson.build		\
-	$(NULL)
-
-# xsltproc barfs on 'make distcheck'; disable for now
-DISTCHECK_CONFIGURE_FLAGS=							\
-	--disable-man-pages 							\
-	--disable-gtk-doc 							\
-	--disable-introspection							\
-	--with-systemdsystemunitdir=$$dc_install_base/$(systemdsystemunitdir)	\
-	$(NULL)
-
-sign : dist
-	gpg --armor --detach-sign --output polkit-$(VERSION).tar.gz.sign polkit-$(VERSION).tar.gz
-
-publish : sign
-	scp polkit-$(VERSION).tar.gz polkit-$(VERSION).tar.gz.sign "david@people.freedesktop.org:/srv/www.freedesktop.org/www/software/polkit/releases/"
-
-publish-docs :
-	gtkdoc-rebase --html-dir docs/polkit/html --online
-	ssh "david@people.freedesktop.org" "mkdir -p /srv/www.freedesktop.org/www/software/polkit/docs/$(VERSION)"
-	scp docs/polkit/html/* "david@people.freedesktop.org:/srv/www.freedesktop.org/www/software/polkit/docs/$(VERSION)"
-	ssh "david@people.freedesktop.org" "rm -f /srv/www.freedesktop.org/www/software/polkit/docs/latest; ln -s $(VERSION) /srv/www.freedesktop.org/www/software/polkit/docs/latest"
-
-clean-local :
-	rm -f *~
-
--include $(top_srcdir)/git.mk
diff --git a/actions/Makefile.am b/actions/Makefile.am
deleted file mode 100644
index 17099923..00000000
--- a/actions/Makefile.am
+++ /dev/null
@@ -1,21 +0,0 @@
-
-polkit_actiondir = $(datadir)/polkit-1/actions
-
-dist_polkit_action_DATA = org.freedesktop.policykit.policy
-
-@INTLTOOL_POLICY_RULE@
-
-#check:
-#	$(top_builddir)/tools/polkit-policy-file-validate-1 $(top_srcdir)/policy/$(dist_polkit_action_DATA)
-
-clean-local :
-	rm -f *~
-
-DISTCLEANFILES = org.freedesktop.policykit.policy
-
-EXTRA_DIST =					\
-	org.freedesktop.policykit.policy.in	\
-	meson.build				\
-	$(NULL)
-
--include $(top_srcdir)/git.mk
diff --git a/autogen.sh b/autogen.sh
deleted file mode 100755
index 3407ae08..00000000
--- a/autogen.sh
+++ /dev/null
@@ -1,123 +0,0 @@
-#!/bin/sh
-# Run this to generate all the initial makefiles, etc.
-
-srcdir=`dirname $0`
-test -z "$srcdir" && srcdir=.
-
-DIE=0
-
-(test -f $srcdir/configure.ac) || {
-    echo -n "**Error**: Directory $srcdir does not look like the"
-    echo " top-level package directory"
-    exit 1
-}
-
-olddir=`pwd`
-cd "$srcdir"
-
-touch ChangeLog
-
-(autoconf --version) < /dev/null > /dev/null 2>&1 || {
-  echo
-  echo "**Error**: You must have autoconf installed."
-  echo "Download the appropriate package for your distribution,"
-  echo "or get the source tarball at ftp://ftp.gnu.org/pub/gnu/"
-  DIE=1
-}
-
-(grep "^AM_PROG_LIBTOOL" configure.ac >/dev/null) && {
-  (libtoolize --version) < /dev/null > /dev/null 2>&1 || {
-    echo
-    echo "**Error**: You must have libtool installed."
-    echo "You can get it from: ftp://ftp.gnu.org/pub/gnu/"
-    DIE=1
-  }
-}
-
-(gtkdocize --flavour no-tmpl) < /dev/null > /dev/null 2>&1 || {
-	echo
-	echo "You must have gtk-doc installed to compile $PROJECT."
-	echo "Install the appropriate package for your distribution,"
-	echo "or get the source tarball at http://ftp.gnome.org/pub/GNOME/sources/gtk-doc/"
-	DIE=1
-}
-
-(automake --version) < /dev/null > /dev/null 2>&1 || {
-  echo
-  echo "**Error**: You must have automake installed."
-  echo "You can get it from: ftp://ftp.gnu.org/pub/gnu/"
-  DIE=1
-  NO_AUTOMAKE=yes
-}
-
-
-# if no automake, don't bother testing for aclocal
-test -n "$NO_AUTOMAKE" || (aclocal --version) < /dev/null > /dev/null 2>&1 || {
-  echo
-  echo "**Error**: Missing aclocal.  The version of automake"
-  echo "installed doesn't appear recent enough."
-  echo "You can get automake from ftp://ftp.gnu.org/pub/gnu/"
-  DIE=1
-}
-
-
-# if no automake, don't bother testing for autoreconf
-test -n "$NO_AUTOMAKE" || (autoreconf --version) < /dev/null > /dev/null 2>&1 || {
-  echo
-  echo "**Error**: You must have autoreconf installed."
-  echo "You can get autoreconf from ..."
-  DIE=1
-}
-
-
-if test "$DIE" -eq 1; then
-  exit 1
-fi
-
-if test -z "$*"; then
-  echo "**Warning**: I am going to run configure with no arguments."
-  echo "If you wish to pass any to it, please specify them on the"
-  echo $0 " command line."
-  echo
-fi
-
-case $CC in
-xlc )
-  am_opt=--include-deps;;
-esac
-
-      aclocalinclude="$ACLOCAL_FLAGS"
-
-      echo "Running autoreconf on test/mocklibc ..."
-      (cd "test/mocklibc"; autoreconf --install)
-
-      if grep "^AM_PROG_LIBTOOL" configure.ac >/dev/null; then
-	if test -z "$NO_LIBTOOLIZE" ; then 
-	  echo "Running libtoolize..."
-	  libtoolize --force --copy
-	fi
-      fi
-      echo "Running aclocal $aclocalinclude ..."
-      aclocal $aclocalinclude
-      if grep "^AC_CONFIG_HEADERS" configure.ac >/dev/null; then
-	echo "Running autoheader..."
-	autoheader
-      fi
-      echo "Running automake --gnu -Wno-portability $am_opt ..."
-      automake --add-missing --gnu -Wno-portability $am_opt
-      echo "Running autoconf ..."
-      autoconf
-
-intltoolize --copy --force --automake                  || exit 1
-
-cd "$olddir"
-
-conf_flags="--enable-maintainer-mode --enable-gtk-doc"
-
-if test x$NOCONFIGURE = x; then
-  echo "Running $srcdir/configure $conf_flags $@ ..."
-  $srcdir/configure $conf_flags "$@" \
-  && echo "Now type make to compile." || exit 1
-else
-  echo "Skipping configure process."
-fi
diff --git a/buildutil/attributes.m4 b/buildutil/attributes.m4
deleted file mode 100644
index 51ac88be..00000000
--- a/buildutil/attributes.m4
+++ /dev/null
@@ -1,292 +0,0 @@
-dnl Macros to check the presence of generic (non-typed) symbols.
-dnl Copyright (c) 2006-2008 Diego Pettenò <flameeyes@gmail.com>
-dnl Copyright (c) 2006-2008 xine project
-dnl Copyright (c) 2012 Lucas De Marchi <lucas.de.marchi@gmail.com>
-dnl
-dnl This program is free software; you can redistribute it and/or modify
-dnl it under the terms of the GNU General Public License as published by
-dnl the Free Software Foundation; either version 2, or (at your option)
-dnl any later version.
-dnl
-dnl This program is distributed in the hope that it will be useful,
-dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
-dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-dnl GNU General Public License for more details.
-dnl
-dnl You should have received a copy of the GNU General Public License
-dnl along with this program; if not, write to the Free Software
-dnl Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
-dnl 02110-1301, USA.
-dnl
-dnl As a special exception, the copyright owners of the
-dnl macro gives unlimited permission to copy, distribute and modify the
-dnl configure scripts that are the output of Autoconf when processing the
-dnl Macro. You need not follow the terms of the GNU General Public
-dnl License when using or distributing such scripts, even though portions
-dnl of the text of the Macro appear in them. The GNU General Public
-dnl License (GPL) does govern all other use of the material that
-dnl constitutes the Autoconf Macro.
-dnl
-dnl This special exception to the GPL applies to versions of the
-dnl Autoconf Macro released by this project. When you make and
-dnl distribute a modified version of the Autoconf Macro, you may extend
-dnl this special exception to the GPL to apply to your modified version as
-dnl well.
-
-dnl Check if FLAG in ENV-VAR is supported by compiler and append it
-dnl to WHERE-TO-APPEND variable. Note that we invert -Wno-* checks to
-dnl -W* as gcc cannot test for negated warnings. If a C snippet is passed,
-dnl use it, otherwise use a simple main() definition that just returns 0.
-dnl CC_CHECK_FLAG_APPEND([WHERE-TO-APPEND], [ENV-VAR], [FLAG], [C-SNIPPET])
-
-AC_DEFUN([CC_CHECK_FLAG_APPEND], [
-  AC_CACHE_CHECK([if $CC supports flag $3 in envvar $2],
-                 AS_TR_SH([cc_cv_$2_$3]),
-          [eval "AS_TR_SH([cc_save_$2])='${$2}'"
-           eval "AS_TR_SH([$2])='${cc_save_$2} -Werror `echo "$3" | sed 's/^-Wno-/-W/'`'"
-           AC_LINK_IFELSE([AC_LANG_SOURCE(ifelse([$4], [],
-                                                 [int main(void) { return 0; } ],
-                                                 [$4]))],
-                          [eval "AS_TR_SH([cc_cv_$2_$3])='yes'"],
-                          [eval "AS_TR_SH([cc_cv_$2_$3])='no'"])
-           eval "AS_TR_SH([$2])='$cc_save_$2'"])
-
-  AS_IF([eval test x$]AS_TR_SH([cc_cv_$2_$3])[ = xyes],
-        [eval "$1='${$1} $3'"])
-])
-
-dnl CC_CHECK_FLAGS_APPEND([WHERE-TO-APPEND], [ENV-VAR], [FLAG1 FLAG2], [C-SNIPPET])
-AC_DEFUN([CC_CHECK_FLAGS_APPEND], [
-  for flag in [$3]; do
-    CC_CHECK_FLAG_APPEND([$1], [$2], $flag, [$4])
-  done
-])
-
-dnl Check if the flag is supported by linker (cacheable)
-dnl CC_CHECK_LDFLAGS([FLAG], [ACTION-IF-FOUND],[ACTION-IF-NOT-FOUND])
-
-AC_DEFUN([CC_CHECK_LDFLAGS], [
-  AC_CACHE_CHECK([if $CC supports $1 flag],
-    AS_TR_SH([cc_cv_ldflags_$1]),
-    [ac_save_LDFLAGS="$LDFLAGS"
-     LDFLAGS="$LDFLAGS $1"
-     AC_LINK_IFELSE([int main() { return 1; }],
-       [eval "AS_TR_SH([cc_cv_ldflags_$1])='yes'"],
-       [eval "AS_TR_SH([cc_cv_ldflags_$1])="])
-     LDFLAGS="$ac_save_LDFLAGS"
-    ])
-
-  AS_IF([eval test x$]AS_TR_SH([cc_cv_ldflags_$1])[ = xyes],
-    [$2], [$3])
-])
-
-dnl define the LDFLAGS_NOUNDEFINED variable with the correct value for
-dnl the current linker to avoid undefined references in a shared object.
-AC_DEFUN([CC_NOUNDEFINED], [
-  dnl We check $host for which systems to enable this for.
-  AC_REQUIRE([AC_CANONICAL_HOST])
-
-  case $host in
-     dnl FreeBSD (et al.) does not complete linking for shared objects when pthreads
-     dnl are requested, as different implementations are present; to avoid problems
-     dnl use -Wl,-z,defs only for those platform not behaving this way.
-     *-freebsd* | *-openbsd*) ;;
-     *)
-        dnl First of all check for the --no-undefined variant of GNU ld. This allows
-        dnl for a much more readable command line, so that people can understand what
-        dnl it does without going to look for what the heck -z defs does.
-        for possible_flags in "-Wl,--no-undefined" "-Wl,-z,defs"; do
-           CC_CHECK_LDFLAGS([$possible_flags], [LDFLAGS_NOUNDEFINED="$possible_flags"])
-           break
-        done
-     ;;
-  esac
-
-  AC_SUBST([LDFLAGS_NOUNDEFINED])
-])
-
-dnl Check for a -Werror flag or equivalent. -Werror is the GCC
-dnl and ICC flag that tells the compiler to treat all the warnings
-dnl as fatal. We usually need this option to make sure that some
-dnl constructs (like attributes) are not simply ignored.
-dnl
-dnl Other compilers don't support -Werror per se, but they support
-dnl an equivalent flag:
-dnl  - Sun Studio compiler supports -errwarn=%all
-AC_DEFUN([CC_CHECK_WERROR], [
-  AC_CACHE_CHECK(
-    [for $CC way to treat warnings as errors],
-    [cc_cv_werror],
-    [CC_CHECK_CFLAGS_SILENT([-Werror], [cc_cv_werror=-Werror],
-      [CC_CHECK_CFLAGS_SILENT([-errwarn=%all], [cc_cv_werror=-errwarn=%all])])
-    ])
-])
-
-AC_DEFUN([CC_CHECK_ATTRIBUTE], [
-  AC_REQUIRE([CC_CHECK_WERROR])
-  AC_CACHE_CHECK([if $CC supports __attribute__(( ifelse([$2], , [$1], [$2]) ))],
-    AS_TR_SH([cc_cv_attribute_$1]),
-    [ac_save_CFLAGS="$CFLAGS"
-     CFLAGS="$CFLAGS $cc_cv_werror"
-     AC_COMPILE_IFELSE([AC_LANG_SOURCE([$3])],
-       [eval "AS_TR_SH([cc_cv_attribute_$1])='yes'"],
-       [eval "AS_TR_SH([cc_cv_attribute_$1])='no'"])
-     CFLAGS="$ac_save_CFLAGS"
-    ])
-
-  AS_IF([eval test x$]AS_TR_SH([cc_cv_attribute_$1])[ = xyes],
-    [AC_DEFINE(
-       AS_TR_CPP([SUPPORT_ATTRIBUTE_$1]), 1,
-         [Define this if the compiler supports __attribute__(( ifelse([$2], , [$1], [$2]) ))]
-         )
-     $4],
-    [$5])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_CONSTRUCTOR], [
-  CC_CHECK_ATTRIBUTE(
-    [constructor],,
-    [void __attribute__((constructor)) ctor() { int a; }],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_FORMAT], [
-  CC_CHECK_ATTRIBUTE(
-    [format], [format(printf, n, n)],
-    [void __attribute__((format(printf, 1, 2))) printflike(const char *fmt, ...) { fmt = (void *)0; }],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_FORMAT_ARG], [
-  CC_CHECK_ATTRIBUTE(
-    [format_arg], [format_arg(printf)],
-    [char *__attribute__((format_arg(1))) gettextlike(const char *fmt) { fmt = (void *)0; }],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_VISIBILITY], [
-  CC_CHECK_ATTRIBUTE(
-    [visibility_$1], [visibility("$1")],
-    [void __attribute__((visibility("$1"))) $1_function() { }],
-    [$2], [$3])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_NONNULL], [
-  CC_CHECK_ATTRIBUTE(
-    [nonnull], [nonnull()],
-    [void __attribute__((nonnull())) some_function(void *foo, void *bar) { foo = (void*)0; bar = (void*)0; }],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_UNUSED], [
-  CC_CHECK_ATTRIBUTE(
-    [unused], ,
-    [void some_function(void *foo, __attribute__((unused)) void *bar);],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_SENTINEL], [
-  CC_CHECK_ATTRIBUTE(
-    [sentinel], ,
-    [void some_function(void *foo, ...) __attribute__((sentinel));],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_DEPRECATED], [
-  CC_CHECK_ATTRIBUTE(
-    [deprecated], ,
-    [void some_function(void *foo, ...) __attribute__((deprecated));],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_ALIAS], [
-  CC_CHECK_ATTRIBUTE(
-    [alias], [weak, alias],
-    [void other_function(void *foo) { }
-     void some_function(void *foo) __attribute__((weak, alias("other_function")));],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_MALLOC], [
-  CC_CHECK_ATTRIBUTE(
-    [malloc], ,
-    [void * __attribute__((malloc)) my_alloc(int n);],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_PACKED], [
-  CC_CHECK_ATTRIBUTE(
-    [packed], ,
-    [struct astructure { char a; int b; long c; void *d; } __attribute__((packed));],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_CONST], [
-  CC_CHECK_ATTRIBUTE(
-    [const], ,
-    [int __attribute__((const)) twopow(int n) { return 1 << n; } ],
-    [$1], [$2])
-])
-
-AC_DEFUN([CC_FLAG_VISIBILITY], [
-  AC_REQUIRE([CC_CHECK_WERROR])
-  AC_CACHE_CHECK([if $CC supports -fvisibility=hidden],
-    [cc_cv_flag_visibility],
-    [cc_flag_visibility_save_CFLAGS="$CFLAGS"
-     CFLAGS="$CFLAGS $cc_cv_werror"
-     CC_CHECK_CFLAGS_SILENT([-fvisibility=hidden],
-     cc_cv_flag_visibility='yes',
-     cc_cv_flag_visibility='no')
-     CFLAGS="$cc_flag_visibility_save_CFLAGS"])
-
-  AS_IF([test "x$cc_cv_flag_visibility" = "xyes"],
-    [AC_DEFINE([SUPPORT_FLAG_VISIBILITY], 1,
-       [Define this if the compiler supports the -fvisibility flag])
-     $1],
-    [$2])
-])
-
-AC_DEFUN([CC_FUNC_EXPECT], [
-  AC_REQUIRE([CC_CHECK_WERROR])
-  AC_CACHE_CHECK([if compiler has __builtin_expect function],
-    [cc_cv_func_expect],
-    [ac_save_CFLAGS="$CFLAGS"
-     CFLAGS="$CFLAGS $cc_cv_werror"
-     AC_COMPILE_IFELSE([AC_LANG_SOURCE(
-       [int some_function() {
-        int a = 3;
-        return (int)__builtin_expect(a, 3);
-     }])],
-       [cc_cv_func_expect=yes],
-       [cc_cv_func_expect=no])
-     CFLAGS="$ac_save_CFLAGS"
-    ])
-
-  AS_IF([test "x$cc_cv_func_expect" = "xyes"],
-    [AC_DEFINE([SUPPORT__BUILTIN_EXPECT], 1,
-     [Define this if the compiler supports __builtin_expect() function])
-     $1],
-    [$2])
-])
-
-AC_DEFUN([CC_ATTRIBUTE_ALIGNED], [
-  AC_REQUIRE([CC_CHECK_WERROR])
-  AC_CACHE_CHECK([highest __attribute__ ((aligned ())) supported],
-    [cc_cv_attribute_aligned],
-    [ac_save_CFLAGS="$CFLAGS"
-     CFLAGS="$CFLAGS $cc_cv_werror"
-     for cc_attribute_align_try in 64 32 16 8 4 2; do
-        AC_COMPILE_IFELSE([AC_LANG_SOURCE([
-          int main() {
-            static char c __attribute__ ((aligned($cc_attribute_align_try))) = 0;
-            return c;
-          }])], [cc_cv_attribute_aligned=$cc_attribute_align_try; break])
-     done
-     CFLAGS="$ac_save_CFLAGS"
-  ])
-
-  if test "x$cc_cv_attribute_aligned" != "x"; then
-     AC_DEFINE_UNQUOTED([ATTRIBUTE_ALIGNED_MAX], [$cc_cv_attribute_aligned],
-       [Define the highest alignment supported])
-  fi
-])
diff --git a/configure.ac b/configure.ac
deleted file mode 100644
index 5cedb4ec..00000000
--- a/configure.ac
+++ /dev/null
@@ -1,613 +0,0 @@
-dnl Process this file with autoconf to produce a configure script.
-
-AC_PREREQ(2.59c)
-AC_INIT([polkit], [0.116], [http://lists.freedesktop.org/mailman/listinfo/polkit-devel], , [http://www.freedesktop.org/wiki/Software/polkit])
-AM_INIT_AUTOMAKE([])
-AC_CONFIG_HEADERS(config.h)
-AC_CONFIG_MACRO_DIR([buildutil])
-AM_MAINTAINER_MODE
-
-m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])
-
-# Include external mocklibc tool for unit testing
-AC_CONFIG_SUBDIRS([test/mocklibc])
-
-# libtool versioning - this applies to all libraries in this package
-#
-# See http://sources.redhat.com/autobook/autobook/autobook_91.html#SEC91 for details
-#
-LT_CURRENT=0
-LT_REVISION=0
-LT_AGE=0
-AC_SUBST(LT_CURRENT)
-AC_SUBST(LT_REVISION)
-AC_SUBST(LT_AGE)
-
-AC_USE_SYSTEM_EXTENSIONS
-AC_ISC_POSIX
-AC_PROG_CC
-AC_HEADER_STDC
-AM_PROG_LIBTOOL
-AC_PROG_MAKE_SET
-AC_PROG_LN_S
-AC_SYS_LARGEFILE
-AM_PROG_CC_C_O
-AC_PROG_CXX
-AX_CXX_COMPILE_STDCXX_11()
-
-# Taken from dbus
-AC_ARG_ENABLE(ansi,             [  --enable-ansi           enable -ansi -pedantic gcc flags],enable_ansi=$enableval,enable_ansi=no)
-AC_ARG_ENABLE(man-pages,        [  --enable-man-pages      build manual pages],enable_man_pages=$enableval,enable_man_pages=yes)
-
-if test "${enable_man_page}" != no; then
-dnl
-dnl Check for xsltproc
-dnl
-AC_PATH_PROG([XSLTPROC], [xsltproc])
-  if test -z "$XSLTPROC"; then
-    enable_man_pages=no
-  fi
-fi
-AM_CONDITIONAL(MAN_PAGES_ENABLED, test x$enable_man_pages = xyes)
-
-GTK_DOC_CHECK([1.3])
-
-#### gcc warning flags
-
-CC_CHECK_FLAGS_APPEND([WARN_CFLAGS], [CFLAGS], [\
-        -pipe \
-        -Wall \
-	-Werror=empty-body \
-	-Werror=strict-prototypes \
-	-Werror=missing-prototypes \
-	-Werror=implicit-function-declaration \
-        "-Werror=format=2 -Werror=format-security -Werror=format-nonliteral" \
-	-Werror=pointer-arith -Werror=init-self \
-        -Werror=missing-declarations \
-        -Werror=return-type \
-        -Werror=overflow \
-        -Werror=int-conversion \
-        -Werror=parenthesis \
-        -Werror=incompatible-pointer-types \
-        -Werror=misleading-indentation \
-	-Werror=missing-include-dirs -Werror=aggregate-return \
-	-Werror=declaration-after-statement \
-])
-AC_SUBST(WARN_CFLAGS)
-
-PKG_CHECK_MODULES(GLIB, [gmodule-2.0 gio-unix-2.0 >= 2.30.0])
-AC_SUBST(GLIB_CFLAGS)
-AC_SUBST(GLIB_LIBS)
-
-PKG_CHECK_MODULES(LIBJS, [mozjs-60])
-
-AC_SUBST(LIBJS_CFLAGS)
-AC_SUBST(LIBJS_CXXFLAGS)
-AC_SUBST(LIBJS_LIBS)
-
-EXPAT_LIB=""
-AC_ARG_WITH(expat, [  --with-expat=<dir>      Use expat from here],
-                      [
-                      expat=$withval
-                      CPPFLAGS="$CPPFLAGS -I$withval/include"
-                      LDFLAGS="$LDFLAGS -L$withval/lib"
-                      ]
-                      )
-AC_CHECK_HEADERS(expat.h, [AC_DEFINE(HAVE_EXPAT_H)], 
-		 [AC_MSG_ERROR([Can't find expat.h. Please install expat.])])
-AC_CHECK_LIB(expat,XML_ParserCreate,[EXPAT_LIBS="-lexpat"],
-	     [AC_MSG_ERROR([Can't find expat library. Please install expat.])])
-AC_SUBST(EXPAT_LIBS)
-
-AC_CHECK_FUNCS(clearenv fdatasync)
-
-if test "x$GCC" = "xyes"; then
-  LDFLAGS="-Wl,--as-needed $LDFLAGS"
-fi
-
-dnl ---------------------------------------------------------------------------
-dnl - Check whether setnetgrent has a return value
-dnl ---------------------------------------------------------------------------
-AC_CHECK_HEADERS([netgroup.h])
-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-    #include <stddef.h>
-    #ifdef HAVE_NETGROUP_H
-    #include <netgroup.h>
-    #else
-    #include <netdb.h>
-    #endif
-]], [[int r = setnetgrent (NULL);]])],
-[AC_DEFINE([HAVE_SETNETGRENT_RETURN], 1, [Define to 1 if setnetgrent has return value])])
-
-dnl ---------------------------------------------------------------------------
-dnl - Check whether we want to build test
-dnl ---------------------------------------------------------------------------
-AC_ARG_ENABLE([test],
-              [AS_HELP_STRING([--disable-test], [Do not build tests])],
-              [enable_test=$enableval], [enable_test=yes])
-
-AM_CONDITIONAL(BUILD_TEST, [test "x$enable_test" = "xyes"])
-
-dnl ---------------------------------------------------------------------------
-dnl - Select wether to use libsystemd-login, libelogind or ConsoleKit for session tracking
-dnl ---------------------------------------------------------------------------
-
-have_libsystemd=no
-have_libelogind=no
-SESSION_TRACKING=ConsoleKit
-
-AC_ARG_ENABLE([libsystemd-login],
-              [AS_HELP_STRING([--enable-libsystemd-login[=@<:@auto/yes/no@:>@]], [Use libsystemd (auto/yes/no)])],
-              [enable_libsystemd_login=$enableval],
-              [enable_libsystemd_login=auto])
-if test "$enable_libsystemd_login" != "no"; then
-  PKG_CHECK_MODULES([LIBSYSTEMD],
-    [libsystemd],
-    [have_libsystemd=yes],
-    dnl if libsystemd is not available, fall back to the older libsystemd-login
-    [PKG_CHECK_MODULES([LIBSYSTEMD_LOGIN],
-      [libsystemd-login],
-      [
-        have_libsystemd=yes
-        LIBSYSTEMD_CFLAGS="$LIBSYSTEMD_LOGIN_CFLAGS"
-        LIBSYSTEMD_LIBS="$LIBSYSTEMD_LOGIN_LIBS"
-      ],
-      [have_libsystemd=no])])
-  if test "$have_libsystemd" = "yes"; then
-      SESSION_TRACKING=libsystemd-login
-  fi
-fi
-
-AC_ARG_ENABLE([libelogind],
-              [AS_HELP_STRING([--enable-libelogind[=@<:@auto/yes/no@:>@]], [Use libelogind (auto/yes/no)])],
-              [enable_libelogind=$enableval],
-              [enable_libelogind=auto])
-dnl Using libelogind makes no sense when libsystemd-login is already in use
-if test "$have_libsystemd" = "yes"; then
-  enable_libelogind=no
-fi
-if test "$enable_libelogind" != "no"; then
-  PKG_CHECK_MODULES([LIBELOGIND],
-    [libelogind],
-    [have_libelogind=yes])
-  if test "$have_libelogind" = "yes"; then
-      SESSION_TRACKING=libelogind
-  fi
-fi
-
-dnl libelogind is a drop-in replacement for libsystemd-login, so using it does
-dnl not need any different actions than using libsystemd-login.
-if test "$SESSION_TRACKING" != "ConsoleKit"; then
-  AC_DEFINE([HAVE_LIBSYSTEMD], 1, [Define to 1 if libsystemd or libelogind is available])
-  save_LIBS=$LIBS
-  if test "$have_libelogind" = "yes"; then
-    LIBS=$LIBELOGIND_LIBS
-    dnl We have to act like this was libsystemd-login
-    LIBSYSTEMD_CFLAGS=$LIBELOGIND_CFLAGS
-    LIBSYSTEMD_LIBS=$LIBELOGIND_LIBS
-  else
-    LIBS=$LIBSYSTEMD_LIBS
-  fi
-  AC_CHECK_FUNCS(sd_uid_get_display)
-  LIBS=$save_LIBS
-else
-  if test "$enable_libsystemd_login" = "yes"; then
-    AC_MSG_ERROR([libsystemd support requested but libsystemd or libsystemd-login library not found])
-  fi
-  if test "$enable_libelogind" = "yes"; then
-    AC_MSG_ERROR([libelogind support requested but libelogind library not found])
-  fi
-fi
-
-AS_IF([test "x$cross_compiling" != "xyes" ], [
-  AS_IF([test "$have_libsystemd" = "yes"], [
-    AS_IF([test ! -d /sys/fs/cgroup/systemd/ -a ! -d /sys/fs/cgroup/init.scope ], [
-      AS_IF([test "$enable_libsystemd_login" = "yes"], [
-        AC_MSG_WARN([libsystemd requested but system does not appear to be using systemd])
-      ], [
-        AC_MSG_ERROR([libsystemd autoconfigured, but system does not appear to use systemd])
-      ])
-    ])
-  ], [
-    AS_IF([test -d /sys/fs/cgroup/systemd/ ], [
-      AS_IF([test "$enable_libsystemd_login" = "no" ], [
-        AC_MSG_WARN([ConsoleKit requested but system appears to use systemd])
-      ], [
-        AC_MSG_ERROR([ConsoleKit autoconfigured, but systemd is in use (missing libsystemd or libsystemd-login pkg-config?)])
-      ])
-    ])
-  ])
-])
-
-AC_SUBST(LIBSYSTEMD_CFLAGS)
-AC_SUBST(LIBSYSTEMD_LIBS)
-AM_CONDITIONAL(HAVE_LIBSYSTEMD, [test "$have_libsystemd" = "yes"], [Using libsystemd])
-
-dnl ---------------------------------------------------------------------------
-dnl - systemd unit / service files
-dnl ---------------------------------------------------------------------------
-
-AC_ARG_WITH([systemdsystemunitdir],
-            AS_HELP_STRING([--with-systemdsystemunitdir=DIR], [Directory for systemd service files]),
-            [],
-            [with_systemdsystemunitdir=$($PKG_CONFIG --variable=systemdsystemunitdir systemd)])
-if test "x$with_systemdsystemunitdir" != "xno"; then
-  AC_SUBST([systemdsystemunitdir], [$with_systemdsystemunitdir])
-fi
-AM_CONDITIONAL(HAVE_SYSTEMD, [test -n "$systemdsystemunitdir"])
-
-dnl ---------------------------------------------------------------------------
-dnl - User for running polkitd
-dnl ---------------------------------------------------------------------------
-
-AC_ARG_WITH(polkitd_user, AS_HELP_STRING([--with-polkitd-user=<user>],[User for running polkitd (polkitd)]))
-
-if test -z "$with_polkitd_user" ; then
-    POLKITD_USER=polkitd
-else
-    POLKITD_USER=$with_polkitd_user
-fi
-AC_SUBST(POLKITD_USER)
-AC_DEFINE_UNQUOTED(POLKITD_USER,"$POLKITD_USER", [User for running polkitd])
-
-dnl ---------------------------------------------------------------------------
-dnl - Select which authentication framework to use
-dnl ---------------------------------------------------------------------------
-
-AC_ARG_WITH([authfw],
-	    AS_HELP_STRING([--with-authfw=<name>], 
-                           [Authentication framework (none/pam/shadow)]))
-if ! test -z "$with_authfw" ; then
-  if test x$with_authdb = xdummy ; then
-    if ! test x$with_authfw = xnone ; then
-      AC_MSG_ERROR([Only 'none' is a valid authentication framework for the dummy authorization database])
-    fi
-  else
-      if test x$with_authfw = xnone ; then
-        AC_MSG_ERROR(['none' is only a valid authentication framework for the dummy authorization database])
-      fi
-  fi
-  POLKIT_AUTHFW=$with_authfw
-else
-  if test x$with_authdb = xdummy ; then
-    POLKIT_AUTHFW=none
-  else
-    POLKIT_AUTHFW=pam
-  fi
-fi
-
-AC_SUBST(POLKIT_AUTHFW)
-AC_DEFINE_UNQUOTED(POLKIT_AUTHFW,"$POLKIT_AUTHFW", [Authentication Framework to use])
-
-case $POLKIT_AUTHFW in
-  none)
-    need_pam=no
-    AC_DEFINE(POLKIT_AUTHFW_NONE, 1, [If using no authentication framework])
-    ;;
-
-  pam)
-    need_pam=yes
-    AC_DEFINE(POLKIT_AUTHFW_PAM, 1, [If using the PAM authentication framework])
-    ;;
-
-  shadow)
-    need_pam=no
-    AUTH_LIBS="${AUTH_LIBS} -lcrypt"
-    AC_DEFINE(POLKIT_AUTHFW_SHADOW, 1, [If using the Shadow authentication framework])
-    ;;
-
-  bsdauth)
-    need_pam=no
-    AC_DEFINE(POLKIT_AUTHFW_BSDAUTH, 1, [If using the bsd_auth(3) authentication framework])
-    ;;
-
-  *)
-    AC_MSG_ERROR([Unknown Authentication Framework: $POLKIT_AUTHFW])
-    ;;
-esac
-
-AM_CONDITIONAL(POLKIT_AUTHFW_NONE, [test x$POLKIT_AUTHFW = xnone], [Using no authfw])
-AM_CONDITIONAL(POLKIT_AUTHFW_PAM, [test x$POLKIT_AUTHFW = xpam], [Using PAM authfw])
-AM_CONDITIONAL(POLKIT_AUTHFW_SHADOW, [test x$POLKIT_AUTHFW = xshadow], [Using Shadow authfw])
-AM_CONDITIONAL(POLKIT_AUTHFW_BSDAUTH, [test x$POLKIT_AUTHFW = xbsdauth], [Using bsd_auth(3) authfw])
-
-
-dnl ---------------------------------------------------------------------------
-dnl - Check for PAM
-dnl ---------------------------------------------------------------------------
-
-withval=""
-AC_ARG_WITH(pam-prefix,
-[  --with-pam-prefix=<prefix> specify where pam files go],[
-if test x$withval != x; then
-   AC_MSG_RESULT("PAM files will be installed in prefix ${withval}.")
-fi])
-if test x$withval != x; then
-	PAM_PREFIX_UNEXPANDED="$withval"
-else
-	PAM_PREFIX_UNEXPANDED="$sysconfdir"
-fi
-PAM_PREFIX=`eval echo $PAM_PREFIX_UNEXPANDED`
-AC_SUBST(PAM_PREFIX)
-
-have_pam=no
-if test "$need_pam" = yes ; then
-  AC_CHECK_LIB(pam, pam_start, have_pam=yes)
-fi
-
-if test x$have_pam = xno; then
-    if test "$need_pam" = yes ; then
-      AC_ERROR([Could not find pam/pam-devel, please install the needed packages.])
-    fi
-else
-    AUTH_LIBS="${AUTH_LIBS} -lpam"
-    AC_DEFINE(HAVE_PAM, 1, [Define if PAM support is included])
-
-    # On Linux, sigtimedwait() is in libc; on Solaris, it's in librt.
-    have_timedwait=no
-    AC_CHECK_LIB(c, sigtimedwait, [have_timedwait=yes])
-    if test "$have_timedwait" = no ; then
-      AC_CHECK_LIB(rt, sigtimedwait, [AUTH_LIBS="${AUTH_LIBS} -lrt"])
-    fi
-
-    AC_MSG_CHECKING(how to call pam_strerror)
-    AC_CACHE_VAL(ac_cv_pam_strerror_args,
-     [AC_TRY_COMPILE([#include <stdio.h>
-                      #include <stdlib.h>
-                      #include <security/pam_appl.h>],
-                     [pam_handle_t *pamh = 0;
-                      char *s = pam_strerror(pamh, PAM_SUCCESS);],
-                     [ac_pam_strerror_args=2],
-                     [AC_TRY_COMPILE([#include <stdio.h>
-                                      #include <stdlib.h>
-                                      #include <security/pam_appl.h>],
-                                     [char *s =
-                                       pam_strerror(PAM_SUCCESS);],
-                                     [ac_pam_strerror_args=1],
-                                     [ac_pam_strerror_args=0])])
-      ac_cv_pam_strerror_args=$ac_pam_strerror_args])
-    ac_pam_strerror_args=$ac_cv_pam_strerror_args
-    if test "$ac_pam_strerror_args" = 1 ; then
-      AC_MSG_RESULT(one argument)
-    elif test "$ac_pam_strerror_args" = 2 ; then
-      AC_DEFINE(PAM_STRERROR_TWO_ARGS, 1, [Define if pam_strerror takes two arguments])
-      AC_MSG_RESULT(two arguments)
-    else
-      AC_MSG_RESULT(unknown)
-    fi
- 
-fi
-
-AM_CONDITIONAL(HAVE_PAM, test x$have_pam = xyes)
-AC_SUBST(HAVE_PAM)
-AC_SUBST(AUTH_LIBS)
-
-AC_CHECK_HEADER(security/pam_modutil.h, [AC_DEFINE(HAVE_PAM_MODUTIL_H, [], "Have pam_modutil.h")])
-AC_CHECK_HEADER(security/pam_ext.h, [AC_DEFINE(HAVE_PAM_EXT_H, [], "Have pam_ext.h")])
-AC_CHECK_LIB(pam, pam_vsyslog, [AC_DEFINE(HAVE_PAM_VSYSLOG, [], "Have pam_vsyslog")])
-
-AC_ARG_WITH(pam-module-dir, [  --with-pam-module-dir=[dirname]  directory to install PAM security module])
-if ! test -z "$with_pam_module_dir"; then
-    PAM_MODULE_DIR=$with_pam_module_dir
-else
-    PAM_MODULE_DIR="/lib/security"
-fi
-
-AC_SUBST(PAM_MODULE_DIR)
-
-AC_ARG_WITH(os-type,     [  --with-os-type=<os>        distribution or OS (redhat/suse/gentoo/pardus/solaris/netbsd)])
-
-#### Check our operating system (distro-tweaks required)
-if test "z$with_os_type" = "z"; then
-	AC_CHECK_FILE(/etc/redhat-release,distro_type="redhat")
-	AC_CHECK_FILE(/etc/SuSE-release,distro_type="suse")
-	AC_CHECK_FILE(/etc/gentoo-release,distro_type="gentoo")
-	AC_CHECK_FILE(/etc/pardus-release,distro_type="pardus")
-	if test "z$distro_type" = "z"; then
-		echo "Linux distribution autodetection failed, specify the distribution to target using --with-os-type="
-	else
-		operating_system=`echo ${distro_type} | tr '[[:upper:]]' '[[:lower:]]' `
-	fi
-fi
-
-#### Sort out OS (distro-tweaks required)
-if test x$with_os_type = x; then
-    if test x$operating_system = xredhat ; then
-        with_os_type=redhat
-    elif test x$operating_system = xsuse ; then
-        with_os_type=suse
-    elif test x$operating_system = xgentoo ; then
-        with_os_type=gentoo
-    elif test x$operating_system = xpardus ; then
-        with_os_type=pardus
-    elif test x$operating_system = xsolaris ; then
-	with_os_type=solaris
-    elif test x$operating_system = xfreebsd ; then
-	with_os_type=freebsd
-    elif test x$operating_system = xnetbsd ; then
-	with_os_type=netbsd
-    else
-	case "$host_os" in
-	  *netbsd*)
-		with_os_type=netbsd
-		;;
-	  *)
-		with_os_type=unknown
-		::
-	esac
-    fi
-fi
-
-# (distro-tweaks required)
-AM_CONDITIONAL(OS_TYPE_UNKNOWN, test x$with_os_type = xunknown, [Running on unknown OS])
-AM_CONDITIONAL(OS_TYPE_RED_HAT, test x$with_os_type = xredhat, [Running on Red Hat OS'es])
-AM_CONDITIONAL(OS_TYPE_SUSE, test x$with_os_type = xsuse, [Running on SUSE OS'es])
-AM_CONDITIONAL(OS_TYPE_GENTOO, test x$with_os_type = xgentoo, [Running on Gentoo OS'es])
-AM_CONDITIONAL(OS_TYPE_PARDUS, test x$with_os_type = xpardus, [Running on Pardus OS'es])
-AM_CONDITIONAL(OS_TYPE_SOLARIS, test x$with_os_type = xsolaris, [Running os Solaris OS'es])
-AM_CONDITIONAL(OS_TYPE_FREEBSD, test x$with_os_type = xfreebsd, [Running on FreeBSD OS'es])
-
-AC_ARG_WITH(pam-include, [  --with-pam-include=<file>  pam file to include])
-
-#### Set up pam file to include (distro-tweaks required)
-if ! test -z "$with_pam_include"; then
-   PAM_FILE_INCLUDE_AUTH=$with_pam_include
-   PAM_FILE_INCLUDE_ACCOUNT=$with_pam_include
-   PAM_FILE_INCLUDE_PASSWORD=$with_pam_include
-   PAM_FILE_INCLUDE_SESSION=$with_pam_include
-elif test x$with_os_type = xredhat -o x$with_os_type = xgentoo -o x$with_os_type = xpardus ; then
-   PAM_FILE_INCLUDE_AUTH=system-auth
-   PAM_FILE_INCLUDE_ACCOUNT=system-auth
-   PAM_FILE_INCLUDE_PASSWORD=system-auth
-   PAM_FILE_INCLUDE_SESSION=system-auth
-elif test x$with_os_type = xsuse -o x$with_os_type = xsolaris ; then
-   PAM_FILE_INCLUDE_AUTH=common-auth
-   PAM_FILE_INCLUDE_ACCOUNT=common-account
-   PAM_FILE_INCLUDE_PASSWORD=common-password
-   PAM_FILE_INCLUDE_SESSION=common-session
-elif test x$with_os_type = xfreebsd -o x$with_os_type = xnetbsd; then
-    PAM_FILE_INCLUDE_AUTH=system
-    PAM_FILE_INCLUDE_ACCOUNT=system
-    PAM_FILE_INCLUDE_PASSWORD=system
-    PAM_FILE_INCLUDE_SESSION=system
-else
-   PAM_FILE_INCLUDE_AUTH=system-auth
-   PAM_FILE_INCLUDE_ACCOUNT=system-auth
-   PAM_FILE_INCLUDE_PASSWORD=system-auth
-   PAM_FILE_INCLUDE_SESSION=system-auth
-fi
-
-AC_SUBST(PAM_FILE_INCLUDE_AUTH)
-AC_SUBST(PAM_FILE_INCLUDE_ACCOUNT)
-AC_SUBST(PAM_FILE_INCLUDE_PASSWORD)
-AC_SUBST(PAM_FILE_INCLUDE_SESSION)
-AC_DEFINE_UNQUOTED(PAM_FILE_INCLUDE_AUTH, "$PAM_FILE_INCLUDE_AUTH", [pam file auth])
-AC_DEFINE_UNQUOTED(PAM_FILE_INCLUDE_ACCOUNT, "$PAM_FILE_INCLUDE_ACCOUNT", [pam file account])
-AC_DEFINE_UNQUOTED(PAM_FILE_INCLUDE_PASSWORD, "$PAM_FILE_INCLUDE_PASSWORD", [pam file password])
-AC_DEFINE_UNQUOTED(PAM_FILE_INCLUDE_SESSION, "$PAM_FILE_INCLUDE_SESSION", [pam file session])
-
-dnl ---------------------------------------------------------------------------
-dnl - check OS
-dnl ---------------------------------------------------------------------------
-case "$host_os" in
-  *linux*)
-	;;
-  *solaris*)
-	AC_DEFINE([HAVE_SOLARIS], 1, [Is this a Solaris system?])
-	;;
-  *freebsd*)
-  	AC_DEFINE([HAVE_FREEBSD], 1, [Is this a FreeBSD system?])
-	;;
-  *netbsd*)
-	AC_DEFINE([HAVE_NETBSD], 1, [Is this an NetBSD system?])
-	;;
-  *openbsd*)
-	AC_DEFINE([HAVE_OPENBSD], 1, [Is this an OpenBSD system?])
-	;;
-esac
-
-GOBJECT_INTROSPECTION_CHECK([0.6.2])
-
-AC_ARG_ENABLE([examples],
-              AS_HELP_STRING([--enable-examples], [Build the example programs]),,
-              [enable_examples=yes])
-
-AM_CONDITIONAL(BUILD_EXAMPLES, test "x$enable_examples" = "xyes")
-
-# ********************
-# Internationalization
-# ********************
-
-IT_PROG_INTLTOOL([0.40.0])
-GETTEXT_PACKAGE=polkit-1
-AC_SUBST([GETTEXT_PACKAGE])
-AM_GLIB_GNU_GETTEXT
-AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE],["$GETTEXT_PACKAGE"],[gettext domain])
-
-AC_ARG_VAR([SUID_CFLAGS],
-           [CFLAGS used for binaries which are usually with the suid bit])
-AC_ARG_VAR([SUID_LDFLAGS],
-           [LDFLAGS used for binaries which are usually with the suid bit])
-
-AC_OUTPUT([
-Makefile
-actions/Makefile
-data/Makefile
-data/polkit-1
-data/polkit-gobject-1.pc
-data/polkit-agent-1.pc
-src/Makefile
-src/polkit/Makefile
-src/polkitbackend/Makefile
-src/polkitagent/Makefile
-src/programs/Makefile
-src/examples/Makefile
-docs/version.xml
-docs/extensiondir.xml
-docs/Makefile
-docs/polkit/Makefile
-docs/man/Makefile
-po/Makefile.in
-test/Makefile
-test/polkit/Makefile
-test/polkitbackend/Makefile
-])
-
-dnl ==========================================================================
-echo "
-                  polkit $VERSION
-                =================
-
-        prefix:                     ${prefix}
-        libdir:                     ${libdir}
-        libexecdir:                 ${libexecdir}
-        bindir:                     ${bindir}
-        sbindir:                    ${sbindir}
-        datadir:                    ${datadir}
-        sysconfdir:                 ${sysconfdir}
-        localstatedir:              ${localstatedir}
-        docdir:                     ${docdir}
-
-        compiler:                   ${CC}
-        cflags:                     ${CFLAGS}
-        cppflags:                   ${CPPFLAGS}
-        xsltproc:                   ${XSLTPROC}
-	introspection:		    ${found_introspection}
-
-        Distribution/OS:            ${with_os_type}
-        Authentication framework:   ${POLKIT_AUTHFW}
-        Session tracking:           ${SESSION_TRACKING}
-        PAM support:                ${have_pam}
-        systemdsystemunitdir:       ${systemdsystemunitdir}
-        polkitd user:               ${POLKITD_USER}"
-
-if test "$have_pam" = yes ; then
-echo "
-        PAM file auth:              ${PAM_FILE_INCLUDE_AUTH}
-        PAM file account:           ${PAM_FILE_INCLUDE_ACCOUNT}
-        PAM file password:          ${PAM_FILE_INCLUDE_PASSWORD}
-        PAM file session:           ${PAM_FILE_INCLUDE_SESSION}"
-fi
-echo "
-        Maintainer mode:            ${USE_MAINTAINER_MODE}
-        Building api docs:          ${enable_gtk_doc}
-        Building man pages:         ${enable_man_pages}
-        Building examples:          ${enable_examples}
-
-"
-
-echo "NOTE: The file ${prefix}/lib/polkit-1/polkit-agent-helper-1 must be owned"
-echo "      by root and have mode 4755 (setuid root binary)"
-echo
-
-echo "NOTE: The file ${bindir}/pkexec must be owned by root and"
-echo "      have mode 4755 (setuid root binary)"
-echo
-
-echo "NOTE: The directory ${sysconfdir}/polkit-1/rules.d must be owned"
-echo "      by user '$POLKITD_USER' and have mode 700"
-echo
-
-echo "NOTE: The directory ${datadir}/polkit-1/rules.d must be owned"
-echo "      by user '$POLKITD_USER' and have mode 700"
-echo
diff --git a/data/Makefile.am b/data/Makefile.am
deleted file mode 100644
index f5ee4bac..00000000
--- a/data/Makefile.am
+++ /dev/null
@@ -1,70 +0,0 @@
-## Process this file with automake to produce Makefile.in
-
-NULL =
-
-libprivdir = $(prefix)/lib/polkit-1
-
-# ----------------------------------------------------------------------------------------------------
-
-servicedir       = $(datadir)/dbus-1/system-services
-service_in_files = org.freedesktop.PolicyKit1.service.in
-service_DATA     = $(service_in_files:.service.in=.service)
-
-$(service_DATA): $(service_in_files) Makefile
-	@sed -e "s|\@libprivdir\@|$(libprivdir)|" $< > $@
-
-# ----------------------------------------------------------------------------------------------------
-
-dbusconfdir = $(sysconfdir)/dbus-1/system.d
-dbusconf_in_files = org.freedesktop.PolicyKit1.conf.in
-dbusconf_DATA = $(dbusconf_in_files:.conf.in=.conf)
-
-$(dbusconf_DATA): $(dbusconf_in_files) Makefile
-	@sed -e "s|\@polkitd_user\@|$(POLKITD_USER)|" $< > $@
-
-# ----------------------------------------------------------------------------------------------------
-
-if POLKIT_AUTHFW_PAM
-pamdir = $(sysconfdir)/pam.d
-pam_DATA = polkit-1
-endif
-
-# ----------------------------------------------------------------------------------------------------
-
-pkgconfigdir = $(libdir)/pkgconfig
-pkgconfig_DATA = polkit-gobject-1.pc polkit-agent-1.pc
-
-# ----------------------------------------------------------------------------------------------------
-
-itsdir = $(datadir)/gettext/its
-dist_its_DATA = polkit.loc polkit.its
-
-# ----------------------------------------------------------------------------------------------------
-
-systemdservice_in_files = polkit.service.in
-
-if HAVE_SYSTEMD
-systemdservicedir       = $(systemdsystemunitdir)
-systemdservice_DATA     = $(systemdservice_in_files:.service.in=.service)
-$(systemdservice_DATA): $(systemdservice_in_files) Makefile
-	@sed -e "s|\@libprivdir\@|$(libprivdir)|" $< > $@
-endif
-
-# ----------------------------------------------------------------------------------------------------
-
-CLEANFILES = $(BUILT_SOURCES)
-
-EXTRA_DIST = 							\
-	org.freedesktop.PolicyKit1.Authority.xml 		\
-	org.freedesktop.PolicyKit1.AuthenticationAgent.xml 	\
-	meson.build						\
-	$(service_in_files) 					\
-	$(dbusconf_in_files) 					\
-	$(systemdservice_in_files) 				\
-	$(NULL)
-
-
-clean-local :
-	rm -f *~ $(service_DATA) $(dbusconf_DATA) $(systemdservice_DATA)
-
--include $(top_srcdir)/git.mk
diff --git a/docs/Makefile.am b/docs/Makefile.am
deleted file mode 100644
index 3c285e4b..00000000
--- a/docs/Makefile.am
+++ /dev/null
@@ -1,9 +0,0 @@
-
-SUBDIRS = man polkit
-
-EXTRA_DIST =		\
-	version.xml.in	\
-	meson.build	\
-	$(NULL)
-
--include $(top_srcdir)/git.mk
diff --git a/docs/man/Makefile.am b/docs/man/Makefile.am
deleted file mode 100644
index 38e037ef..00000000
--- a/docs/man/Makefile.am
+++ /dev/null
@@ -1,33 +0,0 @@
-
-NULL =
-
-if MAN_PAGES_ENABLED
-
-man_MANS = 				\
-	polkit.8			\
-	polkitd.8			\
-	pkexec.1			\
-	pkcheck.1			\
-	pkaction.1			\
-	pkttyagent.1			\
-	$(NULL)
-
-%.8 %.1 : %.xml
-	$(XSLTPROC) -nonet --stringparam man.base.url.for.relative.links $(datadir)/gtk-doc/html/polkit-1/ --xinclude http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<
-
-endif # MAN_PAGES_ENABLED
-
-EXTRA_DIST = 				\
-	polkit.xml                 	\
-	polkitd.xml			\
-	pkexec.xml			\
-	pkcheck.xml			\
-	pkaction.xml			\
-	pkttyagent.xml			\
-	meson.build			\
-	$(NULL)
-
-clean-local:
-	rm -f *~ *.1 *.8
-
--include $(top_srcdir)/git.mk
diff --git a/docs/polkit/Makefile.am b/docs/polkit/Makefile.am
deleted file mode 100644
index 2da0192f..00000000
--- a/docs/polkit/Makefile.am
+++ /dev/null
@@ -1,109 +0,0 @@
-
-NULL =
-
-AUTOMAKE_OPTIONS = 1.7
-
-# The name of the module.
-DOC_MODULE=polkit-1
-
-# The top-level SGML file.
-DOC_MAIN_SGML_FILE=polkit-1-docs.xml
-
-# Extra options to supply to gtkdoc-scan
-SCAN_OPTIONS=
-
-# Directories containing the source code.
-# gtk-doc will search all .c and .h files beneath these paths
-# for inline comments documenting functions and macros.
-# e.g. DOC_SOURCE_DIR=$(top_srcdir)/gtk $(top_srcdir)/gdk
-DOC_SOURCE_DIR=$(top_srcdir)/src/polkit $(top_srcdir)/src/polkitagent
-
-# Used for dependencies
-HFILE_GLOB=$(top_srcdir)/src/polkit*/*.h
-CFILE_GLOB=$(top_srcdir)/src/polkit*/*.c
-
-# Headers to ignore
-IGNORE_HFILES= \
-	polkitprivate.h \
-	polkitagenthelperprivate.h \
-	$(NULL)
-
-# CFLAGS and LDFLAGS for compiling scan program. Only needed
-# if $(DOC_MODULE).types is non-empty.
-AM_CPPFLAGS = \
-	$(GLIB_CFLAGS)						\
-	-I$(top_srcdir)/src/polkit 				\
-	-I$(top_builddir)/src/polkit				\
-	-I$(top_srcdir)/src/polkitagent 			\
-	-I$(top_builddir)/src/polkitagent			\
-	$(NULL)
-
-GTKDOC_LIBS = \
-	$(GLIB_LIBS)						\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la	\
-	$(top_builddir)/src/polkitagent/libpolkit-agent-1.la	\
-	$(NULL)
-
-# Extra options to supply to gtkdoc-mkdb
-MKDB_OPTIONS=--sgml-mode --output-format=xml --name-space=polkit
-
-# Extra options to supply to gtkdoc-mktmpl
-MKTMPL_OPTIONS=
-
-# Extra options to supply to gtkdoc-mkhtml - workaround for incorrect check
-# in gtk-doc-1.18
-MKHTML_OPTIONS=--path=$(srcdir)
-
-# Non-autogenerated SGML files to be included in $(DOC_MAIN_SGML_FILE)
-content_files =  			    								\
-	overview.xml											\
-	../extensiondir.xml			    							\
-	../version.xml			    								\
-	docbook-interface-org.freedesktop.PolicyKit1.Authority.xml					\
-	docbook-interface-org.freedesktop.PolicyKit1.AuthenticationAgent.xml				\
-	../man/polkit.xml										\
-	../man/polkitd.xml										\
-	../man/pkcheck.xml										\
-	../man/pkaction.xml										\
-	../man/pkexec.xml										\
-	../man/pkttyagent.xml										\
-	../../COPYING											\
-	$(NULL)
-
-# Images to copy into HTML directory
-HTML_IMAGES = 						\
-	../polkit-architecture.png			\
-	../polkit-authentication-agent-example.png	\
-	../polkit-authentication-agent-example-wheel.png \
-	$(NULL)
-
-# Extra options to supply to gtkdoc-fixref
-FIXXREF_OPTIONS=
-
-if ENABLE_GTK_DOC
-include $(top_srcdir)/gtk-doc.make
-else
-CLEANFILES =
-endif
-
-EXTRA_DIST = meson.build
-
-CLEANFILES +=   *~				\
-		polkit-1-scan.*			\
-		polkit-1.args			\
-		polkit-1.hierarchy		\
-		polkit-1.interfaces		\
-		polkit-1.prerequisites		\
-		polkit-1.signals		\
-		*.bak				\
-		polkit-1-decl-list.txt		\
-		polkit-1-decl.txt		\
-		polkit-1-overrides.txt		\
-		polkit-1-undeclared.txt		\
-		polkit-1-undocumented.txt	\
-		*.stamp				\
-		-rf html xml			\
-		$(NULL)
-
-
--include $(top_srcdir)/git.mk
diff --git a/git.mk b/git.mk
deleted file mode 100644
index 9d4bf251..00000000
--- a/git.mk
+++ /dev/null
@@ -1,333 +0,0 @@
-# git.mk, a small Makefile to autogenerate .gitignore files
-# for autotools-based projects.
-#
-# Copyright 2009, Red Hat, Inc.
-# Copyright 2010,2011,2012,2013 Behdad Esfahbod
-# Written by Behdad Esfahbod
-#
-# Copying and distribution of this file, with or without modification,
-# is permitted in any medium without royalty provided the copyright
-# notice and this notice are preserved.
-#
-# The latest version of this file can be downloaded from:
-GIT_MK_URL = https://raw.githubusercontent.com/behdad/git.mk/master/git.mk
-#
-# Bugs, etc, should be reported upstream at:
-#   https://github.com/behdad/git.mk
-#
-# To use in your project, import this file in your git repo's toplevel,
-# then do "make -f git.mk".  This modifies all Makefile.am files in
-# your project to -include git.mk.  Remember to add that line to new
-# Makefile.am files you create in your project, or just rerun the
-# "make -f git.mk".
-#
-# This enables automatic .gitignore generation.  If you need to ignore
-# more files, add them to the GITIGNOREFILES variable in your Makefile.am.
-# But think twice before doing that.  If a file has to be in .gitignore,
-# chances are very high that it's a generated file and should be in one
-# of MOSTLYCLEANFILES, CLEANFILES, DISTCLEANFILES, or MAINTAINERCLEANFILES.
-#
-# The only case that you need to manually add a file to GITIGNOREFILES is
-# when remove files in one of mostlyclean-local, clean-local, distclean-local,
-# or maintainer-clean-local make targets.
-#
-# Note that for files like editor backup, etc, there are better places to
-# ignore them.  See "man gitignore".
-#
-# If "make maintainer-clean" removes the files but they are not recognized
-# by this script (that is, if "git status" shows untracked files still), send
-# me the output of "git status" as well as your Makefile.am and Makefile for
-# the directories involved and I'll diagnose.
-#
-# For a list of toplevel files that should be in MAINTAINERCLEANFILES, see
-# Makefile.am.sample in the git.mk git repo.
-#
-# Don't EXTRA_DIST this file.  It is supposed to only live in git clones,
-# not tarballs.  It serves no useful purpose in tarballs and clutters the
-# build dir.
-#
-# This file knows how to handle autoconf, automake, libtool, gtk-doc,
-# gnome-doc-utils, yelp.m4, mallard, intltool, gsettings, dejagnu, appdata,
-# appstream.
-#
-# This makefile provides the following targets:
-#
-# - all: "make all" will build all gitignore files.
-# - gitignore: makes all gitignore files in the current dir and subdirs.
-# - .gitignore: make gitignore file for the current dir.
-# - gitignore-recurse: makes all gitignore files in the subdirs.
-#
-# KNOWN ISSUES:
-#
-# - Recursive configure doesn't work as $(top_srcdir)/git.mk inside the
-#   submodule doesn't find us.  If you have configure.{in,ac} files in
-#   subdirs, add a proxy git.mk file in those dirs that simply does:
-#   "include $(top_srcdir)/../git.mk".  Add more ..'s to your taste.
-#   And add those files to git.  See vte/gnome-pty-helper/git.mk for
-#   example.
-#
-
-
-
-###############################################################################
-# Variables user modules may want to add to toplevel MAINTAINERCLEANFILES:
-###############################################################################
-
-#
-# Most autotools-using modules should be fine including this variable in their
-# toplevel MAINTAINERCLEANFILES:
-GITIGNORE_MAINTAINERCLEANFILES_TOPLEVEL = \
-	$(srcdir)/aclocal.m4 \
-	$(srcdir)/autoscan.log \
-	$(srcdir)/configure.scan \
-	`AUX_DIR=$(srcdir)/$$(cd $(top_srcdir); $(AUTOCONF) --trace 'AC_CONFIG_AUX_DIR:$$1' ./configure.ac); \
-	 test "x$$AUX_DIR" = "x$(srcdir)/" && AUX_DIR=$(srcdir); \
-	 for x in \
-		ar-lib \
-		compile \
-		config.guess \
-		config.sub \
-		depcomp \
-		install-sh \
-		ltmain.sh \
-		missing \
-		mkinstalldirs \
-		test-driver \
-		ylwrap \
-	 ; do echo "$$AUX_DIR/$$x"; done` \
-	`cd $(top_srcdir); $(AUTOCONF) --trace 'AC_CONFIG_HEADERS:$$1' ./configure.ac | \
-	head -n 1 | while read f; do echo "$(srcdir)/$$f.in"; done`
-#
-# All modules should also be fine including the following variable, which
-# removes automake-generated Makefile.in files:
-GITIGNORE_MAINTAINERCLEANFILES_MAKEFILE_IN = \
-	`cd $(top_srcdir); $(AUTOCONF) --trace 'AC_CONFIG_FILES:$$1' ./configure.ac | \
-	while read f; do \
-	  case $$f in Makefile|*/Makefile) \
-	    test -f "$(srcdir)/$$f.am" && echo "$(srcdir)/$$f.in";; esac; \
-	done`
-#
-# Modules that use libtool and use  AC_CONFIG_MACRO_DIR() may also include this,
-# though it's harmless to include regardless.
-GITIGNORE_MAINTAINERCLEANFILES_M4_LIBTOOL = \
-	`MACRO_DIR=$(srcdir)/$$(cd $(top_srcdir); $(AUTOCONF) --trace 'AC_CONFIG_MACRO_DIR:$$1' ./configure.ac); \
-	 if test "x$$MACRO_DIR" != "x$(srcdir)/"; then \
-		for x in \
-			libtool.m4 \
-			ltoptions.m4 \
-			ltsugar.m4 \
-			ltversion.m4 \
-			lt~obsolete.m4 \
-		; do echo "$$MACRO_DIR/$$x"; done; \
-	 fi`
-
-
-
-###############################################################################
-# Default rule is to install ourselves in all Makefile.am files:
-###############################################################################
-
-git-all: git-mk-install
-
-git-mk-install:
-	@echo "Installing git makefile"
-	@any_failed=; \
-		find "`test -z "$(top_srcdir)" && echo . || echo "$(top_srcdir)"`" -name Makefile.am | while read x; do \
-		if grep 'include .*/git.mk' $$x >/dev/null; then \
-			echo "$$x already includes git.mk"; \
-		else \
-			failed=; \
-			echo "Updating $$x"; \
-			{ cat $$x; \
-			  echo ''; \
-			  echo '-include $$(top_srcdir)/git.mk'; \
-			} > $$x.tmp || failed=1; \
-			if test x$$failed = x; then \
-				mv $$x.tmp $$x || failed=1; \
-			fi; \
-			if test x$$failed = x; then : else \
-				echo "Failed updating $$x"; >&2 \
-				any_failed=1; \
-			fi; \
-	fi; done; test -z "$$any_failed"
-
-git-mk-update:
-	wget $(GIT_MK_URL) -O $(top_srcdir)/git.mk
-
-.PHONY: git-all git-mk-install git-mk-update
-
-
-
-###############################################################################
-# Actual .gitignore generation:
-###############################################################################
-
-$(srcdir)/.gitignore: Makefile.am $(top_srcdir)/git.mk
-	@echo "git.mk: Generating $@"
-	@{ \
-		if test "x$(DOC_MODULE)" = x -o "x$(DOC_MAIN_SGML_FILE)" = x; then :; else \
-			for x in \
-				$(DOC_MODULE)-decl-list.txt \
-				$(DOC_MODULE)-decl.txt \
-				tmpl/$(DOC_MODULE)-unused.sgml \
-				"tmpl/*.bak" \
-				xml html \
-			; do echo "/$$x"; done; \
-			FLAVOR=$$(cd $(top_srcdir); $(AUTOCONF) --trace 'GTK_DOC_CHECK:$$2' ./configure.ac); \
-			case $$FLAVOR in *no-tmpl*) echo /tmpl;; esac; \
-		fi; \
-		if test "x$(DOC_MODULE)$(DOC_ID)" = x -o "x$(DOC_LINGUAS)" = x; then :; else \
-			for lc in $(DOC_LINGUAS); do \
-				for x in \
-					$(if $(DOC_MODULE),$(DOC_MODULE).xml) \
-					$(DOC_PAGES) \
-					$(DOC_INCLUDES) \
-				; do echo "/$$lc/$$x"; done; \
-			done; \
-			for x in \
-				$(_DOC_OMF_ALL) \
-				$(_DOC_DSK_ALL) \
-				$(_DOC_HTML_ALL) \
-				$(_DOC_MOFILES) \
-				$(DOC_H_FILE) \
-				"*/.xml2po.mo" \
-				"*/*.omf.out" \
-			; do echo /$$x; done; \
-		fi; \
-		if test "x$(HELP_ID)" = x -o "x$(HELP_LINGUAS)" = x; then :; else \
-			for lc in $(HELP_LINGUAS); do \
-				for x in \
-					$(HELP_FILES) \
-					"$$lc.stamp" \
-					"$$lc.mo" \
-				; do echo "/$$lc/$$x"; done; \
-			done; \
-		fi; \
-		if test "x$(gsettings_SCHEMAS)" = x; then :; else \
-			for x in \
-				$(gsettings_SCHEMAS:.xml=.valid) \
-				$(gsettings__enum_file) \
-			; do echo "/$$x"; done; \
-		fi; \
-		if test "x$(appdata_XML)" = x; then :; else \
-			for x in \
-				$(appdata_XML:.xml=.valid) \
-			; do echo "/$$x"; done; \
-		fi; \
-		if test "x$(appstream_XML)" = x; then :; else \
-			for x in \
-				$(appstream_XML:.xml=.valid) \
-			; do echo "/$$x"; done; \
-		fi; \
-		if test -f $(srcdir)/po/Makefile.in.in; then \
-			for x in \
-				po/Makefile.in.in \
-				po/Makefile.in.in~ \
-				po/Makefile.in \
-				po/Makefile \
-				po/Makevars.template \
-				po/POTFILES \
-				po/Rules-quot \
-				po/stamp-it \
-				po/.intltool-merge-cache \
-				"po/*.gmo" \
-				"po/*.header" \
-				"po/*.mo" \
-				"po/*.sed" \
-				"po/*.sin" \
-				po/$(GETTEXT_PACKAGE).pot \
-				intltool-extract.in \
-				intltool-merge.in \
-				intltool-update.in \
-			; do echo "/$$x"; done; \
-		fi; \
-		if test -f $(srcdir)/configure; then \
-			for x in \
-				autom4te.cache \
-				configure \
-				config.h \
-				stamp-h1 \
-				libtool \
-				config.lt \
-			; do echo "/$$x"; done; \
-		fi; \
-		if test "x$(DEJATOOL)" = x; then :; else \
-			for x in \
-				$(DEJATOOL) \
-			; do echo "/$$x.sum"; echo "/$$x.log"; done; \
-			echo /site.exp; \
-		fi; \
-		if test "x$(am__dirstamp)" = x; then :; else \
-			echo "$(am__dirstamp)"; \
-		fi; \
-		if test "x$(LTCOMPILE)" = x -a "x$(LTCXXCOMPILE)" = x -a "x$(GTKDOC_RUN)" = x; then :; else \
-			for x in \
-				"*.lo" \
-				".libs" "_libs" \
-			; do echo "$$x"; done; \
-		fi; \
-		for x in \
-			.gitignore \
-			$(GITIGNOREFILES) \
-			$(CLEANFILES) \
-			$(PROGRAMS) $(check_PROGRAMS) $(EXTRA_PROGRAMS) \
-			$(LIBRARIES) $(check_LIBRARIES) $(EXTRA_LIBRARIES) \
-			$(LTLIBRARIES) $(check_LTLIBRARIES) $(EXTRA_LTLIBRARIES) \
-			so_locations \
-			$(MOSTLYCLEANFILES) \
-			$(TEST_LOGS) \
-			$(TEST_LOGS:.log=.trs) \
-			$(TEST_SUITE_LOG) \
-			$(TESTS:=.test) \
-			"*.gcda" \
-			"*.gcno" \
-			$(DISTCLEANFILES) \
-			$(am__CONFIG_DISTCLEAN_FILES) \
-			$(CONFIG_CLEAN_FILES) \
-			TAGS ID GTAGS GRTAGS GSYMS GPATH tags \
-			"*.tab.c" \
-			$(MAINTAINERCLEANFILES) \
-			$(BUILT_SOURCES) \
-			$(patsubst %.vala,%.c,$(filter %.vala,$(SOURCES))) \
-			$(filter %_vala.stamp,$(DIST_COMMON)) \
-			$(filter %.vapi,$(DIST_COMMON)) \
-			$(filter $(addprefix %,$(notdir $(patsubst %.vapi,%.h,$(filter %.vapi,$(DIST_COMMON))))),$(DIST_COMMON)) \
-			Makefile \
-			Makefile.in \
-			"*.orig" \
-			"*.rej" \
-			"*.bak" \
-			"*~" \
-			".*.sw[nop]" \
-			".dirstamp" \
-		; do echo "/$$x"; done; \
-		for x in \
-			"*.$(OBJEXT)" \
-			$(DEPDIR) \
-		; do echo "$$x"; done; \
-	} | \
-	sed "s@^/`echo "$(srcdir)" | sed 's/\(.\)/[\1]/g'`/@/@" | \
-	sed 's@/[.]/@/@g' | \
-	LC_ALL=C sort | uniq > $@.tmp && \
-	mv $@.tmp $@;
-
-all: $(srcdir)/.gitignore gitignore-recurse-maybe
-gitignore: $(srcdir)/.gitignore gitignore-recurse
-
-gitignore-recurse-maybe:
-	@for subdir in $(DIST_SUBDIRS); do \
-	  case " $(SUBDIRS) " in \
-	    *" $$subdir "*) :;; \
-	    *) test "$$subdir" = . -o -e "$$subdir/.git" || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) gitignore || echo "Skipping $$subdir");; \
-	  esac; \
-	done
-gitignore-recurse:
-	@for subdir in $(DIST_SUBDIRS); do \
-	    test "$$subdir" = . -o -e "$$subdir/.git" || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) gitignore || echo "Skipping $$subdir"); \
-	done
-
-maintainer-clean: gitignore-clean
-gitignore-clean:
-	-rm -f $(srcdir)/.gitignore
-
-.PHONY: gitignore-clean gitignore gitignore-recurse gitignore-recurse-maybe
diff --git a/po/POTFILES.skip b/po/POTFILES.skip
deleted file mode 100644
index 845ca067..00000000
--- a/po/POTFILES.skip
+++ /dev/null
@@ -1 +0,0 @@
-.pc
diff --git a/src/Makefile.am b/src/Makefile.am
deleted file mode 100644
index b3138264..00000000
--- a/src/Makefile.am
+++ /dev/null
@@ -1,16 +0,0 @@
-
-SUBDIRS = polkit polkitbackend polkitagent programs
-
-if BUILD_EXAMPLES
-SUBDIRS += examples
-endif
-
-EXTRA_DIST =		\
-	meson.build	\
-	symbol.map	\
-	$(NULL)
-
-clean-local :
-	rm -f *~
-
--include $(top_srcdir)/git.mk
diff --git a/src/examples/Makefile.am b/src/examples/Makefile.am
deleted file mode 100644
index 3ee373fd..00000000
--- a/src/examples/Makefile.am
+++ /dev/null
@@ -1,72 +0,0 @@
-
-NULL =
-AM_CFLAGS = -std=gnu99 $(WARN_CFLAGS)
-
-AM_CPPFLAGS =                                              	\
-	-I$(top_builddir)/src                           	\
-	-I$(top_srcdir)/src                             	\
-	-DPACKAGE_LIBEXEC_DIR=\""$(libexecdir)"\"       	\
-	-DPACKAGE_SYSCONF_DIR=\""$(sysconfdir)"\"       	\
-	-DPACKAGE_DATA_DIR=\""$(datadir)"\"             	\
-	-DPACKAGE_BIN_DIR=\""$(bindir)"\"               	\
-	-DPACKAGE_LOCALSTATE_DIR=\""$(localstatedir)"\" 	\
-	-DPACKAGE_LOCALE_DIR=\""$(localedir)"\"         	\
-	-DPACKAGE_LIB_DIR=\""$(libdir)"\"               	\
-	-D_POSIX_PTHREAD_SEMANTICS                      	\
-	-D_REENTRANT	                                	\
-	$(NULL)
-
-bin_PROGRAMS =
-noinst_PROGRAMS =
-
-# ----------------------------------------------------------------------------------------------------
-
-noinst_PROGRAMS += cancel
-
-cancel_SOURCES = cancel.c
-
-cancel_CFLAGS =                             			\
-	$(GLIB_CFLAGS)						\
-	$(NULL)
-
-cancel_LDADD =  	                      			\
-	$(GLIB_LIBS)						\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la	\
-	$(NULL)
-
-# ----------------------------------------------------------------------------------------------------
-
-bin_PROGRAMS += pk-example-frobnicate
-
-pk_example_frobnicate_SOURCES = frobnicate.c
-
-pk_example_frobnicate_CFLAGS =                             	\
-	$(GLIB_CFLAGS)						\
-	$(NULL)
-
-pk_example_frobnicate_LDADD =  	                      		\
-	$(GLIB_LIBS)						\
-	$(NULL)
-
-polkit_actiondir = $(datadir)/polkit-1/actions
-
-dist_polkit_action_DATA = org.freedesktop.policykit.examples.pkexec.policy
-
-@INTLTOOL_POLICY_RULE@
-
-#check:
-#       $(top_builddir)/tools/polkit-policy-file-validate-1 $(top_srcdir)/policy/$(dist_polkit_action_DATA)
-
-DISTCLEANFILES = org.freedesktop.policykit.examples.pkexec.policy
-
-EXTRA_DIST =							\
-	org.freedesktop.policykit.examples.pkexec.policy.in	\
-	meson.build						\
-	$(NULL)
-
-# ----------------------------------------------------------------------------------------------------
-
-clean-local :
-	rm -f *~
-
--include $(top_srcdir)/git.mk
diff --git a/src/polkit/Makefile.am b/src/polkit/Makefile.am
deleted file mode 100644
index 2fb56162..00000000
--- a/src/polkit/Makefile.am
+++ /dev/null
@@ -1,147 +0,0 @@
-NULL =
-
-AM_CFLAGS = -std=gnu99 $(WARN_CFLAGS)
-AM_CPPFLAGS =                                                   \
-        -I$(top_builddir)/src                                   \
-        -I$(top_srcdir)/src                                     \
-        -DPACKAGE_LIBEXEC_DIR=\""$(libexecdir)"\"               \
-        -DPACKAGE_SYSCONF_DIR=\""$(sysconfdir)"\"               \
-        -DPACKAGE_DATA_DIR=\""$(datadir)"\"                     \
-        -DPACKAGE_BIN_DIR=\""$(bindir)"\"                       \
-        -DPACKAGE_LOCALSTATE_DIR=\""$(localstatedir)"\"         \
-        -DPACKAGE_LOCALE_DIR=\""$(localedir)"\"                 \
-        -DPACKAGE_LIB_DIR=\""$(libdir)"\"                       \
-        -D_POSIX_PTHREAD_SEMANTICS                              \
-        -D_REENTRANT                                            \
-        $(NULL)
-
-BUILT_SOURCES = 						\
-	polkitenumtypes.c		polkitenumtypes.h	\
-	$(NULL)
-
-enum_headers = polkitcheckauthorizationflags.h polkiterror.h polkitimplicitauthorization.h polkitauthorityfeatures.h
-
-polkitenumtypes.h: $(enum_headers) polkitenumtypes.h.template
-	( top_builddir=`cd $(top_builddir) && pwd`; \
-	 cd $(srcdir) && glib-mkenums --template polkitenumtypes.h.template $(enum_headers)) > \
-	   polkitenumtypes.h.tmp && mv polkitenumtypes.h.tmp polkitenumtypes.h
-
-polkitenumtypes.c: $(enum_headers) polkitenumtypes.c.template
-	( top_builddir=`cd $(top_builddir) && pwd`; \
-	 cd $(srcdir) && glib-mkenums --template polkitenumtypes.c.template $(enum_headers)) > \
-	   polkitenumtypes.c.tmp && mv polkitenumtypes.c.tmp polkitenumtypes.c
-
-lib_LTLIBRARIES=libpolkit-gobject-1.la
-
-libpolkit_gobject_1includedir=$(includedir)/polkit-1/polkit
-
-libpolkit_gobject_1include_HEADERS =                        				\
-        polkit.h									\
-        polkitprivate.h									\
-        polkittypes.h									\
-	polkitenumtypes.h								\
-	polkitactiondescription.h							\
-	polkitauthorityfeatures.h							\
-	polkitdetails.h									\
-	polkitauthority.h								\
-	polkiterror.h									\
-	polkitsubject.h									\
-	polkitunixprocess.h								\
-	polkitunixsession.h								\
-	polkitsystembusname.h								\
-	polkitidentity.h								\
-	polkitunixuser.h								\
-	polkitunixgroup.h								\
-	polkitunixnetgroup.h								\
-	polkitauthorizationresult.h							\
-	polkitcheckauthorizationflags.h							\
-	polkitimplicitauthorization.h							\
-	polkittemporaryauthorization.h							\
-	polkitpermission.h								\
-        $(NULL)
-
-libpolkit_gobject_1_la_SOURCES =                                   			\
-	$(BUILT_SOURCES)								\
-        polkit.h									\
-	polkitactiondescription.c		polkitactiondescription.h		\
-	polkitauthorityfeatures.h		polkitauthorityfeatures.c		\
-	polkitdetails.c				polkitdetails.h				\
-	polkitauthority.c			polkitauthority.h			\
-	polkiterror.c				polkiterror.h				\
-	polkitsubject.c				polkitsubject.h				\
-	polkitunixprocess.c			polkitunixprocess.h			\
-	polkitsystembusname.c			polkitsystembusname.h			\
-	polkitidentity.c			polkitidentity.h			\
-	polkitunixuser.c			polkitunixuser.h			\
-	polkitunixgroup.c			polkitunixgroup.h			\
-	polkitunixnetgroup.c			polkitunixnetgroup.h			\
-	polkitauthorizationresult.c		polkitauthorizationresult.h		\
-	polkitcheckauthorizationflags.c		polkitcheckauthorizationflags.h		\
-	polkitimplicitauthorization.c		polkitimplicitauthorization.h		\
-	polkittemporaryauthorization.c		polkittemporaryauthorization.h		\
-	polkitpermission.c			polkitpermission.h			\
-        $(NULL)
-
-if HAVE_LIBSYSTEMD
-libpolkit_gobject_1_la_SOURCES += \
-	polkitunixsession-systemd.c		polkitunixsession.h
-else
-libpolkit_gobject_1_la_SOURCES += \
-	polkitunixsession.c			polkitunixsession.h
-endif
-
-libpolkit_gobject_1_la_CFLAGS =                                        	\
-        -D_POLKIT_COMPILATION                                  		\
-        $(GLIB_CFLAGS)							\
-	$(LIBSYSTEMD_CFLAGS)						\
-        $(NULL)
-
-libpolkit_gobject_1_la_LIBADD =                               		\
-        $(GLIB_LIBS)							\
-	$(LIBSYSTEMD_LIBS)						\
-        $(NULL)
-
-libpolkit_gobject_1_la_LDFLAGS = -export-symbols-regex '(^polkit_.*)'
-
-if HAVE_INTROSPECTION
-
-INTROSPECTION_GIRS = Polkit-1.0.gir
-
-Polkit-1.0.gir: libpolkit-gobject-1.la
-
-girdir = $(INTROSPECTION_GIRDIR)
-gir_DATA = Polkit-1.0.gir
-
-typelibsdir = $(INTROSPECTION_TYPELIBDIR)
-typelibs_DATA = Polkit-1.0.typelib
-
-Polkit_1_0_gir_INCLUDES = Gio-2.0
-Polkit_1_0_gir_SCANNERFLAGS = --c-include='polkit/polkit.h'
-Polkit_1_0_gir_CFLAGS = \
-	$(libpolkit_gobject_1_la_CFLAGS)	\
-	-D_POLKIT_COMPILATION			\
-	-I.. -I$(top_srcdir)/src
-Polkit_1_0_gir_LIBS = libpolkit-gobject-1.la
-Polkit_1_0_gir_FILES = $(libpolkit_gobject_1_la_SOURCES)
-Polkit_1_0_gir_EXPORT_PACKAGES = polkit-gobject-1
-
-include $(INTROSPECTION_MAKEFILE)
-
-endif # HAVE_INTROSPECTION
-
-EXTRA_DIST =				\
-	polkitenumtypes.h.template	\
-	polkitenumtypes.c.template	\
-	meson.build			\
-	$(NULL)
-
-CLEANFILES = $(gir_DATA) $(typelibs_DATA)
-
-dist-hook :
-	(for i in $(polkit_built_sources) $(BUILT_SOURCES) ; do rm -f $(distdir)/$$i ; done)
-
-clean-local :
-	rm -f *~ $(polkit_built_sources) $(BUILT_SOURCES)
-
-
--include $(top_srcdir)/git.mk
diff --git a/src/polkit/polkitenumtypes.c.template b/src/polkit/polkitenumtypes.c.template
deleted file mode 100644
index 7704ccad..00000000
--- a/src/polkit/polkitenumtypes.c.template
+++ /dev/null
@@ -1,39 +0,0 @@
-/*** BEGIN file-header ***/
-#include <polkit/polkit.h>
-
-/*** END file-header ***/
-
-/*** BEGIN file-production ***/
-/* enumerations from "@filename@" */
-/*** END file-production ***/
-
-/*** BEGIN value-header ***/
-GType
-@enum_name@_get_type (void)
-{
-  static volatile gsize g_define_type_id__volatile = 0;
-
-  if (g_once_init_enter (&g_define_type_id__volatile))
-    {
-      static const G@Type@Value values[] = {
-/*** END value-header ***/
-
-/*** BEGIN value-production ***/
-        { @VALUENAME@, "@VALUENAME@", "@valuenick@" },
-/*** END value-production ***/
-
-/*** BEGIN value-tail ***/
-        { 0, NULL, NULL }
-      };
-      GType g_define_type_id =
-        g_@type@_register_static (g_intern_static_string ("@EnumName@"), values);
-      g_once_init_leave (&g_define_type_id__volatile, g_define_type_id);
-    }
-
-  return g_define_type_id__volatile;
-}
-
-/*** END value-tail ***/
-
-/*** BEGIN file-tail ***/
-/*** END file-tail ***/
diff --git a/src/polkit/polkitenumtypes.h.template b/src/polkit/polkitenumtypes.h.template
deleted file mode 100644
index 2ce48a65..00000000
--- a/src/polkit/polkitenumtypes.h.template
+++ /dev/null
@@ -1,24 +0,0 @@
-/*** BEGIN file-header ***/
-#ifndef __POLKIT_ENUM_TYPES_H__
-#define __POLKIT_ENUM_TYPES_H__
-
-#include <glib-object.h>
-
-G_BEGIN_DECLS
-/*** END file-header ***/
-
-/*** BEGIN file-production ***/
-
-/* enumerations from "@filename@" */
-/*** END file-production ***/
-
-/*** BEGIN value-header ***/
-GType @enum_name@_get_type (void) G_GNUC_CONST;
-#define @ENUMPREFIX@_TYPE_@ENUMSHORT@ (@enum_name@_get_type ())
-/*** END value-header ***/
-
-/*** BEGIN file-tail ***/
-G_END_DECLS
-
-#endif /* __POLKIT_ENUM_TYPES_H__ */
-/*** END file-tail ***/
diff --git a/src/polkitagent/Makefile.am b/src/polkitagent/Makefile.am
deleted file mode 100644
index c98f29de..00000000
--- a/src/polkitagent/Makefile.am
+++ /dev/null
@@ -1,168 +0,0 @@
-NULL =
-
-AM_CFLAGS = -std=gnu99 $(WARN_CFLAGS)
-AM_CPPFLAGS =                                                   \
-        -I$(top_builddir)/src                                   \
-        -I$(top_srcdir)/src                                     \
-        -I$(top_builddir)/src/polkit                            \
-        -I$(top_srcdir)/src/polkit                              \
-        -DPACKAGE_PREFIX=\""$(prefix)"\"                    	\
-        -DPACKAGE_LIBEXEC_DIR=\""$(libexecdir)"\"               \
-        -DPACKAGE_SYSCONF_DIR=\""$(sysconfdir)"\"               \
-        -DPACKAGE_DATA_DIR=\""$(datadir)"\"                     \
-        -DPACKAGE_BIN_DIR=\""$(bindir)"\"                       \
-        -DPACKAGE_LOCALSTATE_DIR=\""$(localstatedir)"\"         \
-        -DPACKAGE_LOCALE_DIR=\""$(localedir)"\"                 \
-        -DPACKAGE_LIB_DIR=\""$(libdir)"\"                       \
-        -D_POSIX_PTHREAD_SEMANTICS                              \
-        -D_REENTRANT                                            \
-        $(NULL)
-
-BUILT_SOURCES = 						\
-	marshal.stamp						\
-	polkitagentenumtypes.c		polkitagentenumtypes.h	\
-	$(NULL)
-
-enum_headers = polkitagentlistener.h
-
-polkitagentenumtypes.h: $(enum_headers) polkitagentenumtypes.h.template
-	( top_builddir=`cd $(top_builddir) && pwd`; \
-	 cd $(srcdir) && glib-mkenums --template polkitagentenumtypes.h.template $(enum_headers)) > \
-	   polkitagentenumtypes.h.tmp && mv polkitagentenumtypes.h.tmp polkitagentenumtypes.h
-
-polkitagentenumtypes.c: $(enum_headers) polkitagentenumtypes.c.template
-	( top_builddir=`cd $(top_builddir) && pwd`; \
-	 cd $(srcdir) && glib-mkenums --template polkitagentenumtypes.c.template $(enum_headers)) > \
-	   polkitagentenumtypes.c.tmp && mv polkitagentenumtypes.c.tmp polkitagentenumtypes.c
-
-marshal.stamp : Makefile.am $(srcdir)/polkitagentmarshal.list
-	glib-genmarshal --prefix=_polkit_agent_marshal $(srcdir)/polkitagentmarshal.list --header > polkitagentmarshal.h.tmp && mv polkitagentmarshal.h.tmp polkitagentmarshal.h
-	(echo "#include \"polkitagentmarshal.h\""; glib-genmarshal --prefix=_polkit_agent_marshal $(srcdir)/polkitagentmarshal.list --body) > polkitagentmarshal.c.tmp && mv polkitagentmarshal.c.tmp polkitagentmarshal.c
-	touch marshal.stamp
-
-marshal_built_sources = polkitagentmarshal.h polkitagentmarshal.c
-
-lib_LTLIBRARIES=libpolkit-agent-1.la
-
-libpolkit_agent_1includedir=$(includedir)/polkit-1/polkitagent
-
-libpolkit_agent_1include_HEADERS =                        				\
-	polkitagent.h									\
-	polkitagentenumtypes.h								\
-	polkitagenttypes.h								\
-	polkitagentsession.h								\
-	polkitagentlistener.h								\
-	polkitagenttextlistener.h							\
-        $(NULL)
-
-libpolkit_agent_1_la_SOURCES =                                   			\
-	$(BUILT_SOURCES)								\
-	$(marshal_built_sources)							\
-        polkitagent.h									\
-	polkitagenttypes.h								\
-	polkitagentsession.h			polkitagentsession.c			\
-	polkitagentlistener.h			polkitagentlistener.c			\
-	polkitagenttextlistener.h		polkitagenttextlistener.c		\
-        $(NULL)
-
-libpolkit_agent_1_la_CFLAGS =                                        	\
-        -D_POLKIT_COMPILATION                                  		\
-	-D_POLKIT_AGENT_COMPILATION					\
-        $(GLIB_CFLAGS)							\
-        $(NULL)
-
-libpolkit_agent_1_la_LIBADD =                               		\
-        $(GLIB_LIBS)							\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la		\
-	$(EXPAT_LIBS)							\
-        $(NULL)
-
-libpolkit_agent_1_la_LDFLAGS = -export-symbols-regex '(^polkit_.*)'
-
-libprivdir = $(prefix)/lib/polkit-1
-libpriv_PROGRAMS = polkit-agent-helper-1
-
-polkit_agent_helper_1_SOURCES = 					\
-	polkitagenthelperprivate.c polkitagenthelperprivate.h		\
-	$(NULL)
-
-if POLKIT_AUTHFW_PAM
-polkit_agent_helper_1_SOURCES += polkitagenthelper-pam.c
-endif
-if POLKIT_AUTHFW_SHADOW
-polkit_agent_helper_1_SOURCES += polkitagenthelper-shadow.c
-endif
-if POLKIT_AUTHFW_BSDAUTH
-polkit_agent_helper_1_SOURCES += polkitagenthelper-bsdauth.c
-endif
-
-polkit_agent_helper_1_CFLAGS  = 					\
-        -D_POLKIT_COMPILATION                                  		\
-	$(SUID_CFLAGS)							\
-	$(GLIB_CFLAGS)							\
-	$(NULL)
-
-polkit_agent_helper_1_LDADD = 						\
-	$(AUTH_LIBS)							\
-	$(GLIB_LIBS)							\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la		\
-	$(NULL)
-
-polkit_agent_helper_1_LDFLAGS = 					\
-	$(SUID_LDFLAGS)							\
-	$(AM_LDFLAGS)							\
-	$(NULL)
-
-if HAVE_INTROSPECTION
-
-girdir = $(INTROSPECTION_GIRDIR)
-gir_DATA = PolkitAgent-1.0.gir
-
-PolkitAgent-1.0.gir: libpolkit-agent-1.la
-
-typelibsdir = $(INTROSPECTION_TYPELIBDIR)
-typelibs_DATA = PolkitAgent-1.0.typelib
-
-INTROSPECTION_COMPILER_ARGS = --includedir=../../src/polkit
-INTROSPECTION_GIRS = PolkitAgent-1.0.gir
-PolkitAgent_1_0_gir_INCLUDES = Gio-2.0
-PolkitAgent_1_0_gir_SCANNERFLAGS = \
-	--include-uninstalled=../../src/polkit/Polkit-1.0.gir	\
-	--c-include='polkitagent/polkitagent.h'
-PolkitAgent_1_0_gir_CFLAGS = \
-        $(libpolkit_agent_1_la_CFLAGS)		\
-        -D_POLKIT_COMPILATION			\
-        -D_POLKIT_AGENT_COMPILATION		\
-        -I.. -I$(top_srcdir)/src
-PolkitAgent_1_0_gir_LIBS = libpolkit-agent-1.la
-PolkitAgent_1_0_gir_FILES = $(libpolkit_agent_1_la_SOURCES)
-PolkitAgent_1_0_gir_EXPORT_PACKAGES = polkit-agent-1
-
-include $(INTROSPECTION_MAKEFILE)
-
-endif # HAVE_INTROSPECTION
-
-# polkit-agent-helper-1 need to be setuid root because it's used to
-# authenticate not only the invoking user, but possibly also root
-# and/or other users.
-#
-install-data-hook:
-	-chown root $(DESTDIR)$(libprivdir)/polkit-agent-helper-1
-	-chmod 4755 $(DESTDIR)$(libprivdir)/polkit-agent-helper-1
-
-EXTRA_DIST =				\
-	polkitagentmarshal.list		\
-	polkitagentenumtypes.h.template	\
-	polkitagentenumtypes.c.template	\
-	meson.build			\
-	$(NULL)
-
-CLEANFILES = $(gir_DATA) $(typelibs_DATA)
-
-dist-hook :
-	(for i in $(marshal_built_sources) $(BUILT_SOURCES) ; do rm -f $(distdir)/$$i ; done)
-
-clean-local :
-	rm -f *~ $(marshal_built_sources) $(BUILT_SOURCES)
-
--include $(top_srcdir)/git.mk
diff --git a/src/polkitagent/polkitagentenumtypes.c.template b/src/polkitagent/polkitagentenumtypes.c.template
deleted file mode 100644
index e6cb139b..00000000
--- a/src/polkitagent/polkitagentenumtypes.c.template
+++ /dev/null
@@ -1,39 +0,0 @@
-/*** BEGIN file-header ***/
-#include <polkitagent/polkitagent.h>
-
-/*** END file-header ***/
-
-/*** BEGIN file-production ***/
-/* enumerations from "@filename@" */
-/*** END file-production ***/
-
-/*** BEGIN value-header ***/
-GType
-@enum_name@_get_type (void)
-{
-  static volatile gsize g_define_type_id__volatile = 0;
-
-  if (g_once_init_enter (&g_define_type_id__volatile))
-    {
-      static const G@Type@Value values[] = {
-/*** END value-header ***/
-
-/*** BEGIN value-production ***/
-        { @VALUENAME@, "@VALUENAME@", "@valuenick@" },
-/*** END value-production ***/
-
-/*** BEGIN value-tail ***/
-        { 0, NULL, NULL }
-      };
-      GType g_define_type_id =
-        g_@type@_register_static (g_intern_static_string ("@EnumName@"), values);
-      g_once_init_leave (&g_define_type_id__volatile, g_define_type_id);
-    }
-
-  return g_define_type_id__volatile;
-}
-
-/*** END value-tail ***/
-
-/*** BEGIN file-tail ***/
-/*** END file-tail ***/
diff --git a/src/polkitagent/polkitagentenumtypes.h.template b/src/polkitagent/polkitagentenumtypes.h.template
deleted file mode 100644
index 24d6f902..00000000
--- a/src/polkitagent/polkitagentenumtypes.h.template
+++ /dev/null
@@ -1,24 +0,0 @@
-/*** BEGIN file-header ***/
-#ifndef __POLKIT_AGENT_ENUM_TYPES_H__
-#define __POLKIT_AGENT_ENUM_TYPES_H__
-
-#include <glib-object.h>
-
-G_BEGIN_DECLS
-/*** END file-header ***/
-
-/*** BEGIN file-production ***/
-
-/* enumerations from "@filename@" */
-/*** END file-production ***/
-
-/*** BEGIN value-header ***/
-GType @enum_name@_get_type (void) G_GNUC_CONST;
-#define @ENUMPREFIX@_TYPE_@ENUMSHORT@ (@enum_name@_get_type ())
-/*** END value-header ***/
-
-/*** BEGIN file-tail ***/
-G_END_DECLS
-
-#endif /* __POLKIT_AGENT_ENUM_TYPES_H__ */
-/*** END file-tail ***/
diff --git a/src/polkitbackend/Makefile.am b/src/polkitbackend/Makefile.am
deleted file mode 100644
index 7e3c0809..00000000
--- a/src/polkitbackend/Makefile.am
+++ /dev/null
@@ -1,120 +0,0 @@
-NULL =
-
-BUILT_SOURCES =
-
-AM_CFLAGS = -std=gnu99 $(WARN_CFLAGS)
-AM_CPPFLAGS =                                                   \
-        -I$(top_builddir)/src                                   \
-        -I$(top_srcdir)/src                                     \
-        -I$(top_builddir)/src/polkit                            \
-        -I$(top_srcdir)/src/polkit                              \
-        -DPACKAGE_LIBEXEC_DIR=\""$(libexecdir)"\"               \
-        -DPACKAGE_SYSCONF_DIR=\""$(sysconfdir)"\"               \
-        -DPACKAGE_DATA_DIR=\""$(datadir)"\"                     \
-        -DPACKAGE_BIN_DIR=\""$(bindir)"\"                       \
-        -DPACKAGE_LOCALSTATE_DIR=\""$(localstatedir)"\"         \
-        -DPACKAGE_LOCALE_DIR=\""$(localedir)"\"                 \
-        -DPACKAGE_LIB_DIR=\""$(libdir)"\"                       \
-        -D_POSIX_PTHREAD_SEMANTICS                              \
-        -D_REENTRANT                                            \
-        $(NULL)
-
-noinst_LTLIBRARIES=libpolkit-backend-1.la
-
-initjs.h : init.js
-	$(PERL) $(srcdir)/toarray.pl $(srcdir)/init.js init_js > $@
-
-BUILT_SOURCES += initjs.h
-
-libpolkit_backend_1_la_SOURCES =                                   			\
-	$(BUILT_SOURCES)								\
-        polkitbackend.h									\
-	polkitbackendtypes.h								\
-	polkitbackendprivate.h								\
-	polkitbackendauthority.h		polkitbackendauthority.c		\
-	polkitbackendinteractiveauthority.h	polkitbackendinteractiveauthority.c	\
-	polkitbackendjsauthority.h		polkitbackendjsauthority.cpp		\
-	polkitbackendactionpool.h		polkitbackendactionpool.c		\
-	polkitbackendactionlookup.h		polkitbackendactionlookup.c		\
-        $(NULL)
-
-if HAVE_LIBSYSTEMD
-libpolkit_backend_1_la_SOURCES += \
-	polkitbackendsessionmonitor.h		polkitbackendsessionmonitor-systemd.c
-else
-libpolkit_backend_1_la_SOURCES += \
-	polkitbackendsessionmonitor.h		polkitbackendsessionmonitor.c
-endif
-
-libpolkit_backend_1_la_CFLAGS =                                        	\
-        -D_POLKIT_COMPILATION                                  		\
-        -D_POLKIT_BACKEND_COMPILATION                                  	\
-        $(GLIB_CFLAGS)							\
-	$(LIBSYSTEMD_CFLAGS)						\
-	$(LIBJS_CFLAGS)							\
-        $(NULL)
-
-libpolkit_backend_1_la_CXXFLAGS = $(libpolkit_backend_1_la_CFLAGS)
-
-libpolkit_backend_1_la_LIBADD =                               		\
-        $(GLIB_LIBS)							\
-	$(LIBSYSTEMD_LIBS)						\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la		\
-	$(EXPAT_LIBS)							\
-	$(LIBJS_LIBS)							\
-        $(NULL)
-
-rulesdir = $(sysconfdir)/polkit-1/rules.d
-rules_DATA = 50-default.rules
-
-# ----------------------------------------------------------------------------------------------------
-
-libprivdir = $(prefix)/lib/polkit-1
-libpriv_PROGRAMS = polkitd
-
-polkitd_SOURCES = 							\
-					polkitd.c			\
-	$(NULL)
-
-# force C++ link via dummy C++ file, (see GNU automake manual section 8.3.5)
-nodist_EXTRA_polkitd_SOURCES = dummy-force-cpp-link.cxx
-
-polkitd_CFLAGS = 							\
-	-DPOLKIT_BACKEND_I_KNOW_API_IS_SUBJECT_TO_CHANGE		\
-	-DG_LOG_DOMAIN=\"polkitd-1\"					\
-	$(GLIB_CFLAGS)							\
-	$(NULL)
-
-polkitd_LDADD = 				        		\
-	$(GLIB_LIBS)							\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la		\
-	libpolkit-backend-1.la						\
-	$(NULL)
-
-# ----------------------------------------------------------------------------------------------------
-
-
-CLEANFILES = $(BUILT_SOURCES)
-
-EXTRA_DIST =								\
-	init.js								\
-	toarray.pl							\
-	meson.build							\
-	$(rules_DATA)							\
-	$(NULL)
-
-dist-hook :
-	(for i in $(BUILT_SOURCES) ; do rm -f $(distdir)/$$i ; done)
-
-clean-local :
-	rm -f *~ $(BUILT_SOURCES)
-
-install-data-hook:
-	mkdir -p $(DESTDIR)$(sysconfdir)/polkit-1/rules.d
-	-chmod 700 $(DESTDIR)$(sysconfdir)/polkit-1/rules.d
-	-chown $(POLKITD_USER) $(DESTDIR)$(sysconfdir)/polkit-1/rules.d
-	mkdir -p $(DESTDIR)$(datadir)/polkit-1/rules.d
-	-chmod 700 $(DESTDIR)$(datadir)/polkit-1/rules.d
-	-chown $(POLKITD_USER) $(DESTDIR)$(datadir)/polkit-1/rules.d
-
--include $(top_srcdir)/git.mk
diff --git a/src/programs/Makefile.am b/src/programs/Makefile.am
deleted file mode 100644
index f19a7c8e..00000000
--- a/src/programs/Makefile.am
+++ /dev/null
@@ -1,95 +0,0 @@
-
-NULL =
-
-AM_CFLAGS = -std=gnu99 $(WARN_CFLAGS)
-AM_CPPFLAGS =                                              	\
-	-I$(top_builddir)/src                           	\
-	-I$(top_srcdir)/src                             	\
-	-DPACKAGE_LIBEXEC_DIR=\""$(libexecdir)"\"       	\
-	-DPACKAGE_SYSCONF_DIR=\""$(sysconfdir)"\"       	\
-	-DPACKAGE_DATA_DIR=\""$(datadir)"\"             	\
-	-DPACKAGE_BIN_DIR=\""$(bindir)"\"               	\
-	-DPACKAGE_LOCALSTATE_DIR=\""$(localstatedir)"\" 	\
-	-DPACKAGE_LOCALE_DIR=\""$(localedir)"\"         	\
-	-DPACKAGE_LIB_DIR=\""$(libdir)"\"               	\
-	-D_POSIX_PTHREAD_SEMANTICS                      	\
-	-D_REENTRANT	                                	\
-	$(NULL)
-
-# ----------------------------------------------------------------------------------------------------
-
-bin_PROGRAMS = pkexec pkcheck pkaction pkttyagent
-
-# ----------------------------------------------------------------------------------------------------
-
-pkexec_SOURCES = pkexec.c
-
-pkexec_CFLAGS =                             				\
-	$(SUID_CFLAGS)							\
-	$(GLIB_CFLAGS)							\
-	$(AUTH_LIBS)							\
-	$(NULL)
-
-pkexec_LDADD =  	                      				\
-	$(GLIB_LIBS)							\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la		\
-	$(top_builddir)/src/polkitagent/libpolkit-agent-1.la		\
-	$(NULL)
-
-pkexec_LDFLAGS =  	                      				\
-	$(SUID_LDFLAGS)							\
-	$(AM_LDFLAGS)							\
-	$(NULL)
-
-# ----------------------------------------------------------------------------------------------------
-
-pkcheck_SOURCES = pkcheck.c
-
-pkcheck_CFLAGS =                             				\
-	$(GLIB_CFLAGS)							\
-	$(NULL)
-
-pkcheck_LDADD =  	                      				\
-	$(GLIB_LIBS)							\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la		\
-	$(top_builddir)/src/polkitagent/libpolkit-agent-1.la		\
-	$(NULL)
-
-# ----------------------------------------------------------------------------------------------------
-
-pkttyagent_SOURCES = pkttyagent.c
-
-pkttyagent_CFLAGS =                             			\
-	$(GLIB_CFLAGS)							\
-	$(NULL)
-
-pkttyagent_LDADD =  	                      				\
-	$(GLIB_LIBS)							\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la		\
-	$(top_builddir)/src/polkitagent/libpolkit-agent-1.la		\
-	$(NULL)
-
-# ----------------------------------------------------------------------------------------------------
-
-pkaction_SOURCES = pkaction.c
-
-pkaction_CFLAGS =                             				\
-	$(GLIB_CFLAGS)							\
-	$(NULL)
-
-pkaction_LDADD =  	                      				\
-	$(GLIB_LIBS)							\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la		\
-	$(NULL)
-
-# ----------------------------------------------------------------------------------------------------
-
-EXTRA_DIST = meson.build
-
-clean-local :
-	rm -f *~
-
-install-exec-hook :
-	-chmod 4755 $(DESTDIR)$(bindir)/pkexec
-
--include $(top_srcdir)/git.mk
diff --git a/test/Makefile.am b/test/Makefile.am
deleted file mode 100644
index aacc892a..00000000
--- a/test/Makefile.am
+++ /dev/null
@@ -1,34 +0,0 @@
-
-SUBDIRS = mocklibc . polkit polkitbackend
-AM_CFLAGS = $(GLIB_CFLAGS)
-
-noinst_LTLIBRARIES = libpolkit-test-helper.la
-libpolkit_test_helper_la_SOURCES = polkittesthelper.c polkittesthelper.h
-libpolkit_test_helper_la_LIBADD = $(GLIB_LIBS)
-
-EXTRA_DIST =		\
-	data		\
-	meson.build	\
-	$(NULL)
-
-# Use mocklibc to override NSS services for tests
-export MOCK_PASSWD   := $(abs_top_srcdir)/test/data/etc/passwd
-export MOCK_GROUP    := $(abs_top_srcdir)/test/data/etc/group
-export MOCK_NETGROUP := $(abs_top_srcdir)/test/data/etc/netgroup
-export TESTS_ENVIRONMENT := $(abs_top_builddir)/test/mocklibc/bin/mocklibc
-
-# Include path to mock config files
-export POLKIT_TEST_DATA := $(abs_top_srcdir)/test/data
-
-clean-local :
-	rm -f *~
-
-
-# Never install anything in this dir (specifically MockLibc)
-install:; @:
-install-exec:; @:
-install-data:; @:
-uninstall:; @:
-
-
--include $(top_srcdir)/git.mk
diff --git a/test/mocklibc/AUTHORS b/test/mocklibc/AUTHORS
deleted file mode 100644
index c2347f6f..00000000
--- a/test/mocklibc/AUTHORS
+++ /dev/null
@@ -1 +0,0 @@
-Nikki VonHollen <vonhollen@google.com>
diff --git a/test/mocklibc/COPYING b/test/mocklibc/COPYING
deleted file mode 100644
index d6456956..00000000
--- a/test/mocklibc/COPYING
+++ /dev/null
@@ -1,202 +0,0 @@
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
diff --git a/test/mocklibc/ChangeLog b/test/mocklibc/ChangeLog
deleted file mode 100644
index 00dd245b..00000000
--- a/test/mocklibc/ChangeLog
+++ /dev/null
@@ -1,10 +0,0 @@
-2011-12-19 Nikki VonHollen <vonhollen@google.com>
-
-* Added check for 'id' and 'innetgr' commands before running tests that depend
-  on them. 'make check' now passes without them, without running tests.
-
-
-2011-12-14 Nikki VonHollen <vonhollen@google.com>
-
-* Released version 1.0 with basic NSS passwd, group, and netgroup mocks.
-
diff --git a/test/mocklibc/INSTALL b/test/mocklibc/INSTALL
deleted file mode 100644
index 7d1c323b..00000000
--- a/test/mocklibc/INSTALL
+++ /dev/null
@@ -1,365 +0,0 @@
-Installation Instructions
-*************************
-
-Copyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002, 2004, 2005,
-2006, 2007, 2008, 2009 Free Software Foundation, Inc.
-
-   Copying and distribution of this file, with or without modification,
-are permitted in any medium without royalty provided the copyright
-notice and this notice are preserved.  This file is offered as-is,
-without warranty of any kind.
-
-Basic Installation
-==================
-
-   Briefly, the shell commands `./configure; make; make install' should
-configure, build, and install this package.  The following
-more-detailed instructions are generic; see the `README' file for
-instructions specific to this package.  Some packages provide this
-`INSTALL' file but do not implement all of the features documented
-below.  The lack of an optional feature in a given package is not
-necessarily a bug.  More recommendations for GNU packages can be found
-in *note Makefile Conventions: (standards)Makefile Conventions.
-
-   The `configure' shell script attempts to guess correct values for
-various system-dependent variables used during compilation.  It uses
-those values to create a `Makefile' in each directory of the package.
-It may also create one or more `.h' files containing system-dependent
-definitions.  Finally, it creates a shell script `config.status' that
-you can run in the future to recreate the current configuration, and a
-file `config.log' containing compiler output (useful mainly for
-debugging `configure').
-
-   It can also use an optional file (typically called `config.cache'
-and enabled with `--cache-file=config.cache' or simply `-C') that saves
-the results of its tests to speed up reconfiguring.  Caching is
-disabled by default to prevent problems with accidental use of stale
-cache files.
-
-   If you need to do unusual things to compile the package, please try
-to figure out how `configure' could check whether to do them, and mail
-diffs or instructions to the address given in the `README' so they can
-be considered for the next release.  If you are using the cache, and at
-some point `config.cache' contains results you don't want to keep, you
-may remove or edit it.
-
-   The file `configure.ac' (or `configure.in') is used to create
-`configure' by a program called `autoconf'.  You need `configure.ac' if
-you want to change it or regenerate `configure' using a newer version
-of `autoconf'.
-
-   The simplest way to compile this package is:
-
-  1. `cd' to the directory containing the package's source code and type
-     `./configure' to configure the package for your system.
-
-     Running `configure' might take a while.  While running, it prints
-     some messages telling which features it is checking for.
-
-  2. Type `make' to compile the package.
-
-  3. Optionally, type `make check' to run any self-tests that come with
-     the package, generally using the just-built uninstalled binaries.
-
-  4. Type `make install' to install the programs and any data files and
-     documentation.  When installing into a prefix owned by root, it is
-     recommended that the package be configured and built as a regular
-     user, and only the `make install' phase executed with root
-     privileges.
-
-  5. Optionally, type `make installcheck' to repeat any self-tests, but
-     this time using the binaries in their final installed location.
-     This target does not install anything.  Running this target as a
-     regular user, particularly if the prior `make install' required
-     root privileges, verifies that the installation completed
-     correctly.
-
-  6. You can remove the program binaries and object files from the
-     source code directory by typing `make clean'.  To also remove the
-     files that `configure' created (so you can compile the package for
-     a different kind of computer), type `make distclean'.  There is
-     also a `make maintainer-clean' target, but that is intended mainly
-     for the package's developers.  If you use it, you may have to get
-     all sorts of other programs in order to regenerate files that came
-     with the distribution.
-
-  7. Often, you can also type `make uninstall' to remove the installed
-     files again.  In practice, not all packages have tested that
-     uninstallation works correctly, even though it is required by the
-     GNU Coding Standards.
-
-  8. Some packages, particularly those that use Automake, provide `make
-     distcheck', which can by used by developers to test that all other
-     targets like `make install' and `make uninstall' work correctly.
-     This target is generally not run by end users.
-
-Compilers and Options
-=====================
-
-   Some systems require unusual options for compilation or linking that
-the `configure' script does not know about.  Run `./configure --help'
-for details on some of the pertinent environment variables.
-
-   You can give `configure' initial values for configuration parameters
-by setting variables in the command line or in the environment.  Here
-is an example:
-
-     ./configure CC=c99 CFLAGS=-g LIBS=-lposix
-
-   *Note Defining Variables::, for more details.
-
-Compiling For Multiple Architectures
-====================================
-
-   You can compile the package for more than one kind of computer at the
-same time, by placing the object files for each architecture in their
-own directory.  To do this, you can use GNU `make'.  `cd' to the
-directory where you want the object files and executables to go and run
-the `configure' script.  `configure' automatically checks for the
-source code in the directory that `configure' is in and in `..'.  This
-is known as a "VPATH" build.
-
-   With a non-GNU `make', it is safer to compile the package for one
-architecture at a time in the source code directory.  After you have
-installed the package for one architecture, use `make distclean' before
-reconfiguring for another architecture.
-
-   On MacOS X 10.5 and later systems, you can create libraries and
-executables that work on multiple system types--known as "fat" or
-"universal" binaries--by specifying multiple `-arch' options to the
-compiler but only a single `-arch' option to the preprocessor.  Like
-this:
-
-     ./configure CC="gcc -arch i386 -arch x86_64 -arch ppc -arch ppc64" \
-                 CXX="g++ -arch i386 -arch x86_64 -arch ppc -arch ppc64" \
-                 CPP="gcc -E" CXXCPP="g++ -E"
-
-   This is not guaranteed to produce working output in all cases, you
-may have to build one architecture at a time and combine the results
-using the `lipo' tool if you have problems.
-
-Installation Names
-==================
-
-   By default, `make install' installs the package's commands under
-`/usr/local/bin', include files under `/usr/local/include', etc.  You
-can specify an installation prefix other than `/usr/local' by giving
-`configure' the option `--prefix=PREFIX', where PREFIX must be an
-absolute file name.
-
-   You can specify separate installation prefixes for
-architecture-specific files and architecture-independent files.  If you
-pass the option `--exec-prefix=PREFIX' to `configure', the package uses
-PREFIX as the prefix for installing programs and libraries.
-Documentation and other data files still use the regular prefix.
-
-   In addition, if you use an unusual directory layout you can give
-options like `--bindir=DIR' to specify different values for particular
-kinds of files.  Run `configure --help' for a list of the directories
-you can set and what kinds of files go in them.  In general, the
-default for these options is expressed in terms of `${prefix}', so that
-specifying just `--prefix' will affect all of the other directory
-specifications that were not explicitly provided.
-
-   The most portable way to affect installation locations is to pass the
-correct locations to `configure'; however, many packages provide one or
-both of the following shortcuts of passing variable assignments to the
-`make install' command line to change installation locations without
-having to reconfigure or recompile.
-
-   The first method involves providing an override variable for each
-affected directory.  For example, `make install
-prefix=/alternate/directory' will choose an alternate location for all
-directory configuration variables that were expressed in terms of
-`${prefix}'.  Any directories that were specified during `configure',
-but not in terms of `${prefix}', must each be overridden at install
-time for the entire installation to be relocated.  The approach of
-makefile variable overrides for each directory variable is required by
-the GNU Coding Standards, and ideally causes no recompilation.
-However, some platforms have known limitations with the semantics of
-shared libraries that end up requiring recompilation when using this
-method, particularly noticeable in packages that use GNU Libtool.
-
-   The second method involves providing the `DESTDIR' variable.  For
-example, `make install DESTDIR=/alternate/directory' will prepend
-`/alternate/directory' before all installation names.  The approach of
-`DESTDIR' overrides is not required by the GNU Coding Standards, and
-does not work on platforms that have drive letters.  On the other hand,
-it does better at avoiding recompilation issues, and works well even
-when some directory options were not specified in terms of `${prefix}'
-at `configure' time.
-
-Optional Features
-=================
-
-   If the package supports it, you can cause programs to be installed
-with an extra prefix or suffix on their names by giving `configure' the
-option `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.
-
-   Some packages pay attention to `--enable-FEATURE' options to
-`configure', where FEATURE indicates an optional part of the package.
-They may also pay attention to `--with-PACKAGE' options, where PACKAGE
-is something like `gnu-as' or `x' (for the X Window System).  The
-`README' should mention any `--enable-' and `--with-' options that the
-package recognizes.
-
-   For packages that use the X Window System, `configure' can usually
-find the X include and library files automatically, but if it doesn't,
-you can use the `configure' options `--x-includes=DIR' and
-`--x-libraries=DIR' to specify their locations.
-
-   Some packages offer the ability to configure how verbose the
-execution of `make' will be.  For these packages, running `./configure
---enable-silent-rules' sets the default to minimal output, which can be
-overridden with `make V=1'; while running `./configure
---disable-silent-rules' sets the default to verbose, which can be
-overridden with `make V=0'.
-
-Particular systems
-==================
-
-   On HP-UX, the default C compiler is not ANSI C compatible.  If GNU
-CC is not installed, it is recommended to use the following options in
-order to use an ANSI C compiler:
-
-     ./configure CC="cc -Ae -D_XOPEN_SOURCE=500"
-
-and if that doesn't work, install pre-built binaries of GCC for HP-UX.
-
-   On OSF/1 a.k.a. Tru64, some versions of the default C compiler cannot
-parse its `<wchar.h>' header file.  The option `-nodtk' can be used as
-a workaround.  If GNU CC is not installed, it is therefore recommended
-to try
-
-     ./configure CC="cc"
-
-and if that doesn't work, try
-
-     ./configure CC="cc -nodtk"
-
-   On Solaris, don't put `/usr/ucb' early in your `PATH'.  This
-directory contains several dysfunctional programs; working variants of
-these programs are available in `/usr/bin'.  So, if you need `/usr/ucb'
-in your `PATH', put it _after_ `/usr/bin'.
-
-   On Haiku, software installed for all users goes in `/boot/common',
-not `/usr/local'.  It is recommended to use the following options:
-
-     ./configure --prefix=/boot/common
-
-Specifying the System Type
-==========================
-
-   There may be some features `configure' cannot figure out
-automatically, but needs to determine by the type of machine the package
-will run on.  Usually, assuming the package is built to be run on the
-_same_ architectures, `configure' can figure that out, but if it prints
-a message saying it cannot guess the machine type, give it the
-`--build=TYPE' option.  TYPE can either be a short name for the system
-type, such as `sun4', or a canonical name which has the form:
-
-     CPU-COMPANY-SYSTEM
-
-where SYSTEM can have one of these forms:
-
-     OS
-     KERNEL-OS
-
-   See the file `config.sub' for the possible values of each field.  If
-`config.sub' isn't included in this package, then this package doesn't
-need to know the machine type.
-
-   If you are _building_ compiler tools for cross-compiling, you should
-use the option `--target=TYPE' to select the type of system they will
-produce code for.
-
-   If you want to _use_ a cross compiler, that generates code for a
-platform different from the build platform, you should specify the
-"host" platform (i.e., that on which the generated programs will
-eventually be run) with `--host=TYPE'.
-
-Sharing Defaults
-================
-
-   If you want to set default values for `configure' scripts to share,
-you can create a site shell script called `config.site' that gives
-default values for variables like `CC', `cache_file', and `prefix'.
-`configure' looks for `PREFIX/share/config.site' if it exists, then
-`PREFIX/etc/config.site' if it exists.  Or, you can set the
-`CONFIG_SITE' environment variable to the location of the site script.
-A warning: not all `configure' scripts look for a site script.
-
-Defining Variables
-==================
-
-   Variables not defined in a site shell script can be set in the
-environment passed to `configure'.  However, some packages may run
-configure again during the build, and the customized values of these
-variables may be lost.  In order to avoid this problem, you should set
-them in the `configure' command line, using `VAR=value'.  For example:
-
-     ./configure CC=/usr/local2/bin/gcc
-
-causes the specified `gcc' to be used as the C compiler (unless it is
-overridden in the site shell script).
-
-Unfortunately, this technique does not work for `CONFIG_SHELL' due to
-an Autoconf bug.  Until the bug is fixed you can use this workaround:
-
-     CONFIG_SHELL=/bin/bash /bin/bash ./configure CONFIG_SHELL=/bin/bash
-
-`configure' Invocation
-======================
-
-   `configure' recognizes the following options to control how it
-operates.
-
-`--help'
-`-h'
-     Print a summary of all of the options to `configure', and exit.
-
-`--help=short'
-`--help=recursive'
-     Print a summary of the options unique to this package's
-     `configure', and exit.  The `short' variant lists options used
-     only in the top level, while the `recursive' variant lists options
-     also present in any nested packages.
-
-`--version'
-`-V'
-     Print the version of Autoconf used to generate the `configure'
-     script, and exit.
-
-`--cache-file=FILE'
-     Enable the cache: use and save the results of the tests in FILE,
-     traditionally `config.cache'.  FILE defaults to `/dev/null' to
-     disable caching.
-
-`--config-cache'
-`-C'
-     Alias for `--cache-file=config.cache'.
-
-`--quiet'
-`--silent'
-`-q'
-     Do not print messages saying which checks are being made.  To
-     suppress all normal output, redirect it to `/dev/null' (any error
-     messages will still be shown).
-
-`--srcdir=DIR'
-     Look for the package's source code in directory DIR.  Usually
-     `configure' can determine that directory automatically.
-
-`--prefix=DIR'
-     Use DIR as the installation prefix.  *note Installation Names::
-     for more details, including other options available for fine-tuning
-     the installation locations.
-
-`--no-create'
-`-n'
-     Run the configure checks, but stop before creating any output
-     files.
-
-`configure' also accepts some other, not widely useful, options.  Run
-`configure --help' for more details.
-
diff --git a/test/mocklibc/Makefile.am b/test/mocklibc/Makefile.am
deleted file mode 100644
index ed6e1853..00000000
--- a/test/mocklibc/Makefile.am
+++ /dev/null
@@ -1,5 +0,0 @@
-
-SUBDIRS = src bin
-EXTRA_DIST = example
-
--include $(top_srcdir)/git.mk
diff --git a/test/mocklibc/NEWS b/test/mocklibc/NEWS
deleted file mode 100644
index e69de29b..00000000
diff --git a/test/mocklibc/README b/test/mocklibc/README
deleted file mode 100644
index 2bd44efa..00000000
--- a/test/mocklibc/README
+++ /dev/null
@@ -1,121 +0,0 @@
-= MockLibc 1.1 =
-
-Mocks of common libc functions who have global state. Version 1.1 focuses on
-NSS related methods (user, group, and netgroup queries).
-
-This library is a re-implementation of specific libc methods, not a tool for
-creating mock functions. Use MockLibc to create a consistent environment for
-your unit tests, when they need to query system information.
-
-
-== Requirements ==
-
-* Tests require the 'id' and 'innetgr' commands in the PATH
-
-
-== Build ==
-
-$ cd mocklibc-1.1
-$ ./configure
-$ make
-$ make check
-
-
-== Install ==
-
-$ make install
-
-
-== Example Usage ==
-
-$ id foo
-id: foo: No such user
-$ export MOCK_PASSWD=./testdata/passwd
-$ export MOCK_GROUP=./testdata/group
-$ mkdir ./testdata
-$ echo “foo:x:9000:9000::/home/foo:/bin/bash” > “$MOCK_PASSWD”
-$ echo “mockusers:x:9001:foo” > “$MOCK_GROUP”
-$ mocklibc id foo
-uid=9000(foo) gid=9000(foo) groups=9000(foo),9001(mockusers)
-
-
-== Use without install ==
-
-mocklibc can be used directly from the bin directory, without being installed:
-$ cd mocklibc-1.1
-$ ./configure
-$ make
-$ bin/mocklibc id foo
-
-
-== Hacking ==
-
-If using a git checkout instead of a source tarball, always run
-'autogen --install' before './configure'. Whenever a Makefile.am or
-configure.ac is modified, run 'autogen' again without --install.
-
-
-== Mocked Functions ==
-
-NSS Methods completely disregard /etc/nsswitch.conf, similar to using just
-"files", but with modified paths. DNS is not modified and no *_r methods will
-be implemented in this version.
-
-* pwd.h (NSS users, configured with MOCK_PASSWD)
-  * setpwent
-  * getpwent
-  * endpwent
-  * getpwnam
-  * getpwuid
-* grp.h (NSS groups, configured with MOCK_GROUP)
-  * setpwent
-  * getpwent
-  * endpwent
-  * getpwnam
-  * getpwuid
-* netdb.h (NSS netgroups, no DNS, configured with MOCK_NETGROUP)
-  * setnetgrent
-  * getnetgrent
-  * endnetgrent
-  * innetgr
-
-
-== Configuration ==
-
-All configuration is handled through environment variables, though specific
-mocklibc_* methods may be added in the future for things like time and random
-number generation.
-
-Environment Variables:
-* MOCK_PASSWD - Path to /etc/passwd replacement
-* MOCK_GROUP - Path to /etc/group replacement
-* MOCK_NETGROUP - Path to /etc/netgroup replacement
-
-
-== F.A.Q. ==
-
-* Why not use a chroot? Chroot requires root, and forcing unit tests to run as
-  root is not desirable.
-* Is there something that already does this? There are mock frameworks for C,
-  but this library is an implementation of specific common mocks C developers
-  need. A mock of set/get/endgrent still requires some basic code for iterating
-  group objects. This library provides that.
-
-
-== TODO ==
-
-* Add functions to free unused memory in 'netdb_netgroup.c'. It leaks a ton of
-  memory every call. See TODO comments in code.
-
-
-== Future ==
-
-The following may be supported in the future, and I'm taking requests for other
-functionality at 'vonhollen@gmail.com'.
-
-Features:
-* Redirect syslog messages to file at $MOCK_SYSLOG
-* '*_r' methods in pwd.h, grp.h, and netdb.h
-* netdb.h: gethostbyname, gethostbyaddr, getaddrinfo, get/freeaddrinfo
-* Whitelist apps with $MOCK_ONLY (includes list of argv[0] names)
-
diff --git a/test/mocklibc/bin/Makefile.am b/test/mocklibc/bin/Makefile.am
deleted file mode 100644
index 499c5c78..00000000
--- a/test/mocklibc/bin/Makefile.am
+++ /dev/null
@@ -1,27 +0,0 @@
-
-bin_SCRIPTS = mocklibc
-
-check_SCRIPTS = mocklibc-test
-TESTS = mocklibc-test
-
-EXTRA_DIST = mocklibc.in mocklibc-test.in
-CLEANFILES = mocklibc mocklibc-test
-
-
-# Substitute build variables in shell scripts
-# See section "4.8.2 Installation Directory Variables" in autoconf manual
-
-edit = sed \
-       -e 's|@libdir[@]|$(libdir)|g' \
-       -e 's|@libname[@]|$(libname)|g' \
-       -e 's|@top_srcdir[@]|$(top_srcdir)|g' \
-       -e 's|@top_builddir[@]|$(top_builddir)|g'
-
-mocklibc mocklibc-test: Makefile
-	$(edit) $(srcdir)/$@.in > $@
-	chmod a+x $@
-
-mocklibc: $(srcdir)/mocklibc.in
-mocklibc-test: $(srcdir)/mocklibc-test.in
-
--include $(top_srcdir)/git.mk
diff --git a/test/mocklibc/bin/mocklibc-test.in b/test/mocklibc/bin/mocklibc-test.in
deleted file mode 100644
index 9f00a77d..00000000
--- a/test/mocklibc/bin/mocklibc-test.in
+++ /dev/null
@@ -1,136 +0,0 @@
-#!/bin/bash
-
-#  Copyright 2011 Google Inc. All Rights Reserved.
-#
-#  Licensed under the Apache License, Version 2.0 (the "License");
-#  you may not use this file except in compliance with the License.
-#  You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-#  Unless required by applicable law or agreed to in writing, software
-#  distributed under the License is distributed on an "AS IS" BASIS,
-#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-#  See the License for the specific language governing permissions and
-#  limitations under the License.
-#
-#  Author: Nikki VonHollen <vonhollen@gmail.com>
-
-
-# Figure out where everything is
-
-MOCKLIBC="@top_builddir@/bin/mocklibc"
-ETCDIR="@top_srcdir@/example"
-
-
-# Setup the mock environment
-
-export MOCK_PASSWD="${ETCDIR}/passwd"
-export MOCK_GROUP="${ETCDIR}/group"
-export MOCK_NETGROUP="${ETCDIR}/netgroup"
-
-
-# Test helper definitions
-
-TESTCOUNT=0
-FAILCOUNT=0
-
-fail () {
-  echo "Test Failed:"
-  echo $@ >&2
-  echo
-  FAILCOUNT=$((FAILCOUNT+1))
-}
-
-finish () {
-  if [[ $FAILCOUNT -gt 0 ]]
-  then
-    echo "Failed $FAILCOUNT of $TESTCOUNT tests."
-    exit 1
-  else
-    echo "Passed $TESTCOUNT tests."
-    exit 0
-  fi
-}
-
-assert_true () {
-  $MOCKLIBC $@ || fail "assert true: $@"
-  TESTCOUNT=$((TESTCOUNT+1))
-}
-
-assert_false () {
-  $MOCKLIBC $@ && fail "assert false: $@"
-  TESTCOUNT=$((TESTCOUNT+1))
-}
-
-assert_grep () {
-  $MOCKLIBC ${@:2} | grep -q "^${1}\$" || fail "'$1' doesn't match output of: ${@:2}"
-  TESTCOUNT=$((TESTCOUNT+1))
-}
-
-
-# Test implementations
-
-test_passwd () {
-  # Test user ids
-  assert_grep "0" id -u root
-  assert_grep "500" id -u john
-  assert_grep "501" id -u jane
-
-  # Test primary groups
-  assert_grep "root" id -gn root
-  assert_grep "john" id -gn john
-  assert_grep "jane" id -gn jane
-}
-
-test_group () {
-  # Test group lists for users
-  assert_grep "root" id -Gn root
-  assert_grep "john users" id -Gn john
-  assert_grep "jane users" id -Gn jane
-}
-
-test_netgroup () {
-  # Test whether each user is each netgroup
-  assert_true innetgr foo -u john
-  assert_false innetgr foo -u jane
-
-  assert_true innetgr bar -u jane
-  assert_false innetgr bar -u john
-
-  assert_true innetgr baz -u john
-  assert_true innetgr baz -u jane
-  assert_false innetgr baz -u henry
-
-  assert_true innetgr all -u john
-  assert_true innetgr all -u jane
-  assert_true innetgr all -u henry
-
-  assert_false innetgr none -u john
-  assert_false innetgr none -u jane
-  assert_false innetgr none -u henry
-
-  assert_false innetgr fake -u john
-}
-
-
-# Run the tests and print a report
-
-if (which id >/dev/null 2>&1)
-then
-  test_passwd
-  test_group
-else
-  echo "No 'id' command found, skipping passwd and group tests." >&2
-fi
-
-if (which innetgr >/dev/null 2>&1)
-then
-  test_netgroup
-else
-  echo "No 'innetgr' command found, skipping netgroup tests." >&2
-fi
-
-
-finish
-
diff --git a/test/mocklibc/bin/mocklibc.in b/test/mocklibc/bin/mocklibc.in
deleted file mode 100644
index dc18855a..00000000
--- a/test/mocklibc/bin/mocklibc.in
+++ /dev/null
@@ -1,34 +0,0 @@
-#!/bin/bash
-
-#  Copyright 2011 Google Inc. All Rights Reserved.
-#
-#  Licensed under the Apache License, Version 2.0 (the "License");
-#  you may not use this file except in compliance with the License.
-#  You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-#  Unless required by applicable law or agreed to in writing, software
-#  distributed under the License is distributed on an "AS IS" BASIS,
-#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-#  See the License for the specific language governing permissions and
-#  limitations under the License.
-#
-#  Author: Nikki VonHollen <vonhollen@gmail.com>
-
-
-BASEDIR=`dirname $0`
-LIBDIR="${BASEDIR}/../src/.libs"
-LIBPATH="${LIBDIR}/@libname@"
-
-if [[ -f "$LIBPATH" ]]
-then
-  # Include Mocklibc's project build dir if we can find it
-  export LD_LIBRARY_PATH="${LIBDIR}:${LD_LIBRARY_PATH}"
-else
-  # Use the system version instead, w/o requiring ldconfig
-  export LD_LIBRARY_PATH="@libdir@:${LD_LIBRARY_PATH}"
-fi
-
-# Exec the requested app, replacing this one
-LD_PRELOAD="@libname@" exec $@
diff --git a/test/mocklibc/configure.ac b/test/mocklibc/configure.ac
deleted file mode 100644
index 5bd3243c..00000000
--- a/test/mocklibc/configure.ac
+++ /dev/null
@@ -1,38 +0,0 @@
-#                                               -*- Autoconf -*-
-# Process this file with autoconf to produce a configure script.
-
-AC_PREREQ([2.63])
-AC_INIT([MockLibc], [1.1], [vonhollen@google.com])
-AC_CONFIG_SRCDIR([src])
-AC_CONFIG_HEADERS([config.h])
-AM_INIT_AUTOMAKE
-
-# Checks for programs.
-AC_PROG_CC
-
-# Checks for libraries.
-AC_PROG_LIBTOOL
-
-# Checks for header files.
-AC_CHECK_HEADERS([netdb.h stdlib.h string.h])
-
-# Checks for typedefs, structures, and compiler characteristics.
-AC_TYPE_UID_T
-AC_TYPE_SIZE_T
-AC_TYPE_SSIZE_T
-
-# Checks for library functions.
-AC_FUNC_MALLOC
-AC_CHECK_FUNCS([endgrent endpwent memset regcomp strdup])
-
-# Build wrapper scripts from templates
-AC_SUBST([libname], [libmocklibc.so])
-#AC_CONFIG_FILES([bin/mocklibc], [chmod +x bin/mocklibc], [libname=${libname}])
-#AC_CONFIG_FILES([bin/mocklibc-test], [chmod +x bin/mocklibc-test],
-#                [libname=${libname}]))
-
-AC_OUTPUT([
-Makefile
-src/Makefile
-bin/Makefile
-])
diff --git a/test/mocklibc/example/group b/test/mocklibc/example/group
deleted file mode 100644
index e2253f06..00000000
--- a/test/mocklibc/example/group
+++ /dev/null
@@ -1,4 +0,0 @@
-root:x:0:
-users:x:100:john,jane
-john:x:500:
-jane:x:501:
diff --git a/test/mocklibc/example/netgroup b/test/mocklibc/example/netgroup
deleted file mode 100644
index 21a27f97..00000000
--- a/test/mocklibc/example/netgroup
+++ /dev/null
@@ -1,5 +0,0 @@
-foo (-,john,)
-bar (-,jane,)
-baz foo bar
-all (,,)
-none
diff --git a/test/mocklibc/example/passwd b/test/mocklibc/example/passwd
deleted file mode 100644
index 62aa6f5e..00000000
--- a/test/mocklibc/example/passwd
+++ /dev/null
@@ -1,3 +0,0 @@
-root:x:0:0:root:/root:/bin/bash
-john:x:500:500:John Smith:/home/john:/bin/bash
-jane:x:501:501:Jane Doe:/home/jane:/bin/bash
diff --git a/test/mocklibc/src/Makefile.am b/test/mocklibc/src/Makefile.am
deleted file mode 100644
index 1103b9dc..00000000
--- a/test/mocklibc/src/Makefile.am
+++ /dev/null
@@ -1,10 +0,0 @@
-
-lib_LTLIBRARIES = libmocklibc.la
-libmocklibc_la_SOURCES = pwd.c grp.c netdb.c netgroup.c netgroup.h
-
-bin_PROGRAMS = mocklibc-debug-netgroup
-mocklibc_debug_netgroup_SOURCES = netgroup-debug.c netgroup-debug.h
-mocklibc_debug_netgroup_LDADD = libmocklibc.la
-
-
--include $(top_srcdir)/git.mk
diff --git a/test/mocklibc/src/grp.c b/test/mocklibc/src/grp.c
deleted file mode 100644
index c671e1fc..00000000
--- a/test/mocklibc/src/grp.c
+++ /dev/null
@@ -1,156 +0,0 @@
-/**
- * Copyright 2011 Google Inc. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- * Author: Nikki VonHollen <vonhollen@gmail.com>
- */
-
-#include <grp.h>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <sys/types.h>
-
-#define GROUP_CONFIG_KEY "MOCK_GROUP"
-
-static FILE *global_stream = NULL;
-
-void setgrent(void) {
-  if (global_stream)
-    endgrent();
-
-  const char *path = getenv(GROUP_CONFIG_KEY);
-  if (!path)
-    return;
-
-  global_stream = fopen(path, "r");
-}
-
-struct group *getgrent(void) {
-  if (!global_stream)
-    setgrent();
-
-  if (!global_stream)
-    return NULL;
-
-  return fgetgrent(global_stream);
-}
-
-void endgrent(void) {
-  if (!global_stream)
-    return;
-
-  fclose(global_stream);
-  global_stream = NULL;
-}
-
-struct group *getgrnam(const char *name) {
-  const char *path = getenv(GROUP_CONFIG_KEY);
-  if (!path)
-    return NULL;
-
-  FILE *stream = fopen(path, "r");
-  if (!stream)
-    return NULL;
-
-  struct group *entry;
-  while ((entry = fgetgrent(stream))) {
-    if (strcmp(entry->gr_name, name) == 0) {
-      fclose(stream);
-      return entry;
-    }
-  }
-
-  fclose(stream);
-  return NULL;
-}
-
-struct group *getgrgid(gid_t gid) {
-  const char *path = getenv(GROUP_CONFIG_KEY);
-  if (!path)
-    return NULL;
-
-  FILE *stream = fopen(path, "r");
-  if (!stream)
-    return NULL;
-
-  struct group *entry;
-  while ((entry = fgetgrent(stream))) {
-    if (entry->gr_gid == gid) {
-      fclose(stream);
-      return entry;
-    }
-  }
-
-  fclose(stream);
-  return NULL;
-}
-
-int getgrouplist(const char *user, gid_t group, gid_t *groups, int *ngroups) {
-  const char *path = getenv(GROUP_CONFIG_KEY);
-  if (!path) {
-    *ngroups = 0;
-    return -1;
-  }
-
-  FILE *stream = fopen(path, "r");
-  if (!stream) {
-    *ngroups = 0;
-    return -1;
-  }
-
-  int default_group_found = 0;
-  int groups_found = 0;
-
-  // Loop through all groups
-  struct group *entry;
-  while ((entry = fgetgrent(stream))) {
-    // Loop through all users in group
-    char **cur_user;
-    for (cur_user = entry->gr_mem; *cur_user; cur_user++) {
-      // Skip users who don't match arg 'user'
-      if (strcmp(*cur_user, user))
-        continue;
-
-      // Is this the default group? if so, flag it
-      if (entry->gr_gid == group)
-        default_group_found = 1;
-
-      // Only insert new entries if we have room
-      if (groups_found < *ngroups) {
-        groups[groups_found] = entry->gr_gid;
-      }
-
-      groups_found++;
-    }
-  }
-
-  // Include the default group if it wasn't found
-  if (!default_group_found) {
-    if (groups_found < *ngroups) {
-      groups[groups_found] = group;
-    }
-    groups_found++;
-  }
-
-  // Did we have to leave out some groups? If not, tell how many we found.
-  int retval = (groups_found > *ngroups) ? -1 : groups_found;
-
-  // Always tell the user how many groups we found via *ngroups
-  *ngroups = groups_found;
-
-  fclose(stream);
-  return retval;
-}
diff --git a/test/mocklibc/src/netdb.c b/test/mocklibc/src/netdb.c
deleted file mode 100644
index 94424032..00000000
--- a/test/mocklibc/src/netdb.c
+++ /dev/null
@@ -1,100 +0,0 @@
-/**
- * Copyright 2011 Google Inc. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- * Author: Nikki VonHollen <vonhollen@gmail.com>
- */
-
-#include "netgroup.h"
-
-#include <netdb.h>
-
-#include <ctype.h>
-#include <stdlib.h>
-#include <string.h>
-#include <sys/types.h>
-
-#define INNETGR_CHECK(match, value) if (match && value && strcmp(match, value)) continue;
-
-/** Private static data. */
-
-static struct netgroup *global_netgroup_head = NULL;
-static struct netgroup_iter global_iter;
-
-/** Public methods */
-
-// REMEMBER: 1 means success, 0 means failure for netgroup methods
-
-int setnetgrent(const char *netgroup) {
-  if (!global_netgroup_head)
-    global_netgroup_head = netgroup_parse_all();
-
-  struct netgroup *group = netgroup_find(global_netgroup_head, netgroup);
-  if (!group) {
-     netgroup_free_all(global_netgroup_head);
-    global_netgroup_head = NULL;
-    return 0;
-  }
-
-  netgroup_iter_init(&global_iter, group);
-  return 1;
-}
-
-void endnetgrent(void) {
-  netgroup_free_all(global_netgroup_head);
-  global_netgroup_head = NULL;
-}
-
-int getnetgrent(char **host, char **user, char **domain) {
-  if (!global_netgroup_head)
-    return 0;
-
-  struct entry *result = netgroup_iter_next(&global_iter);
-  if (!result)
-    return 0;
-
-  *host = result->data.triple.hostname;
-  *user = result->data.triple.username;
-  *domain = result->data.triple.domainname;
-  return 1;
-}
-
-int innetgr(const char *netgroup, const char *host, const char *user,
-    const char *domain) {
-  int retval = 0;
-  struct netgroup *head = netgroup_parse_all();
-  struct netgroup *group = netgroup_find(head, netgroup);
-  if (!group) {
-    // Can't find group
-    netgroup_free_all(head);
-    return 0;
-  }
-
-  struct netgroup_iter iter;
-  netgroup_iter_init(&iter, group);
-
-  struct entry *cur;
-  while ((cur = netgroup_iter_next(&iter))) {
-    INNETGR_CHECK(host, cur->data.triple.hostname);
-    INNETGR_CHECK(user, cur->data.triple.username);
-    INNETGR_CHECK(domain, cur->data.triple.domainname);
-
-    // No INNETGR_CHECK failed, so we matched!
-    retval = 1;
-    break;
-  }
-
-  netgroup_free_all(head);
-  return retval;
-}
diff --git a/test/mocklibc/src/netgroup-debug.c b/test/mocklibc/src/netgroup-debug.c
deleted file mode 100644
index 81d6e728..00000000
--- a/test/mocklibc/src/netgroup-debug.c
+++ /dev/null
@@ -1,84 +0,0 @@
-/**
- * Copyright 2011 Google Inc. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- * Author: Nikki VonHollen <vonhollen@gmail.com>
- */
-
-#include "netgroup-debug.h"
-
-#include <stdio.h>
-#include <stdlib.h>
-
-void netgroup_debug_print_entry(struct entry *entry, FILE *stream, unsigned int indent) {
-  print_indent(stream, indent);
-
-  if (entry->type == TRIPLE_ENTRY) {
-    fprintf(stream, "triple (%s,%s,%s)\n",
-        entry->data.triple.hostname,
-        entry->data.triple.username,
-        entry->data.triple.domainname);
-  } else if (entry->type == CHILD_ENTRY) {
-    fprintf(stream, "child '%s'\n", entry->data.child.name);
-    struct entry *child;
-    for (child = entry->data.child.head; child; child = child->next) {
-      netgroup_debug_print_entry(child, stream, indent + 1);
-    }
-  } else {
-    fprintf(stream, "UNKNOWN_TYPE");
-  }
-}
-
-void netgroup_debug_print_group(struct netgroup *group, FILE *stream, unsigned int indent) {
-  print_indent(stream, indent);
-  fprintf(stream, "%s\n", group->name);
-  struct entry *entry;
-  for (entry = group->head; entry; entry = entry->next) {
-    netgroup_debug_print_entry(entry, stream, indent + 1);
-  }
-}
-
-void netgroup_debug_print_group_unrolled(struct netgroup *group, FILE *stream, unsigned int indent) {
-  print_indent(stream, indent);
-  fprintf(stream, "%s\n", group->name);
-
-  struct netgroup_iter iter;
-  netgroup_iter_init(&iter, group);
-
-  struct entry *entry;
-  while ((entry = netgroup_iter_next(&iter))) {
-    netgroup_debug_print_entry(entry, stream, indent + 1);
-  }
-}
-
-void netgroup_debug_print_all(struct netgroup *head, FILE *stream, unsigned int indent) {
-  struct netgroup *group;
-  for (group = head; group; group = group->next) {
-    netgroup_debug_print_group(group, stream, indent);
-  }
-}
-
-int main(int argc, char **argv) {
-  struct netgroup *groups = netgroup_parse_all();
-  if (argc == 1)
-    netgroup_debug_print_all(groups, stdout, 0);
-  else if (argc == 2) {
-    struct netgroup *group = netgroup_find(groups, argv[1]);
-    if (!group)
-      return 1;
-    netgroup_debug_print_group_unrolled(group, stdout, 0);
-  }
-
-  return 0;
-}
diff --git a/test/mocklibc/src/netgroup-debug.h b/test/mocklibc/src/netgroup-debug.h
deleted file mode 100644
index d733c958..00000000
--- a/test/mocklibc/src/netgroup-debug.h
+++ /dev/null
@@ -1,58 +0,0 @@
-/**
- * Copyright 2011 Google Inc. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- * Author: Nikki VonHollen <vonhollen@gmail.com>
- */
-
-#ifndef NETGROUP_DEBUG_H_
-#define NETGROUP_DEBUG_H_
-
-#include "netgroup.h"
-
-#include <stdio.h>
-
-/**
- * Print entry and it's children to the given stream.
- * @param entry Netgroup entry to print
- * @param stream Stream to print to
- * @param indent Number of indents to use
- */
-void netgroup_debug_print_entry(struct entry *entry, FILE *stream, unsigned int indent);
-
-/**
- * Print a single netgroup to the given stream.
- * @param group Netgroup to print
- * @param stream Stream to print to
- * @param indent Number of indents to use
- */
-void netgroup_debug_print_group(struct netgroup *group, FILE *stream, unsigned int indent);
-
-/**
- * Print a single netgroup with all triples included recursively.
- * @param group Netgroup to print
- * @param stream Stream to print to
- * @param indent Number of indents to use
- */
-void netgroup_debug_print_group_unrolled(struct netgroup *group, FILE *stream, unsigned int indent);
-
-/**
- * Print all netgroups to the given stream.
- * @param head Head of list of netgroups
- * @param stream Stream to print to
- * @param indent Number of indents to use
- */
-void netgroup_debug_print_all(struct netgroup *head, FILE *stream, unsigned int indent);
-
-#endif
diff --git a/test/mocklibc/src/netgroup.c b/test/mocklibc/src/netgroup.c
deleted file mode 100644
index 06a8a894..00000000
--- a/test/mocklibc/src/netgroup.c
+++ /dev/null
@@ -1,345 +0,0 @@
-/**
- * Copyright 2011 Google Inc. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- * Author: Nikki VonHollen <vonhollen@gmail.com>
- */
-
-#include "netgroup.h"
-
-#include <ctype.h>
-#include <regex.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <sys/types.h>
-
-#define NETGROUP_CONFIG_KEY "MOCK_NETGROUP"
-#define NETGROUP_TRIPLE_REGEX "\\(([^,]*),([^,]*),([^\\)]*)\\)"
-#define FREE_IF_NOT_NULL(ptr) if (ptr) free(ptr)
-
-/** Private methods. */
-
-/**
- * Move the given pointer past any whitespace.
- * @param cur Pointer to string (char *) to advance
- */
-static void parser_skip_whitespace(char **cur) {
-  for (; isspace(**cur); (*cur)++) {}
-}
-
-/**
- * Copy the next group of non-space characters and move the pointer past
- * consumed characters.
- * @param cur Pointer to string (char *) to search/advance
- * @return Copy of chars consumed. Must be free'd by user.
- */
-static char *parser_copy_word(char **cur) {
-  char *value = *cur;
-  size_t i;
-
-  // Find the next non-null non-space character
-  for (i = 0; !isspace(value[i]) && value[i] != '\0'; i++) {}
-
-  // Don't allocate zero-length strings, just die
-  if (i == 0) {
-    return NULL;
-  }
-
-  // Allocate the new string, with room for a null terminator
-  char *result = malloc(i + 1);
-  if (!result) {
-    return NULL;
-  }
-
-  // Set the current pointer past the parsed region
-  *cur += i;
-
-  memcpy(result, value, i);
-  result[i] = '\0';
-  return result;
-}
-
-/**
- * Print a varaible indentation to the stream.
- * @param stream Stream to print to
- * @param indent Number of indents to use
- */
-void print_indent(FILE *stream, unsigned int indent) {
-  int i;
-  for (i = 0; i < indent; i++)
-    fprintf(stream, "  ");
-}
-
-/**
- * Connect entries with 'child' type to their child entries.
- * @param headentry Head of list of entries that need to be connected
- * @param headgroup Head of list of netgroups to connect child entries to
- */
-static void netgroup_connect_children(struct entry *headentry, struct netgroup *headgroup) {
-  struct entry *curentry;
-  for (curentry = headentry; curentry; curentry = curentry->next) {
-    // Skip entries that don't have children
-    if (curentry->type != CHILD_ENTRY)
-      continue;
-
-    // Set the entry's children to the head of the netgroup with the same name
-    struct netgroup *group = netgroup_find(headgroup, curentry->data.child.name);
-    if (group)
-      curentry->data.child.head = group->head;
-  }
-}
-
-
-/* Public methods. */
-
-struct netgroup *netgroup_parse_all() {
-  const char *path = getenv(NETGROUP_CONFIG_KEY);
-  if (!path)
-    return NULL;
-
-  FILE *stream = fopen(path, "r");
-  if (!stream)
-    return NULL;
-
-  struct netgroup *headgroup = NULL;
-  struct netgroup *lastgroup = NULL;
-
-  // Parse netgroups but don't fill in child entry pointers
-  for (;;) {
-    size_t line_alloc = 0;
-    char * line = NULL;
-    ssize_t line_size = getline(&line, &line_alloc, stream);
-    if (line_size == -1)
-      {
-	free(line);
-	break;
-      }
-
-    struct netgroup *nextgroup = netgroup_parse_line(line);
-    free(line);
-    if (!nextgroup)
-      continue;
-
-    if (!headgroup) {
-      headgroup = nextgroup;
-      lastgroup = nextgroup;
-    } else {
-      lastgroup->next = nextgroup;
-      lastgroup = nextgroup;
-    }
-  }
-
-  fclose(stream);
-
-  // Fill in child entry pointers
-  struct netgroup *curgroup;
-  for (curgroup = headgroup; curgroup; curgroup = curgroup->next) {
-    netgroup_connect_children(curgroup->head, headgroup);
-  }
-
-  return headgroup;
-}
-
-void netgroup_free_all(struct netgroup *head) {
-  struct netgroup *group = head;
-  struct netgroup *nextgroup;
-  while (group) {
-    nextgroup = group->next;
-    netgroup_free(group);
-    group = nextgroup;
-  }
-}
-
-struct netgroup *netgroup_parse_line(char *line) {
-  char *cur = line;
-
-  // Get the netgroup's name
-  parser_skip_whitespace(&cur);
-  char *group_name = parser_copy_word(&cur);
-  if (!group_name)
-    return NULL;
-
-  // Create new netgroup object
-  struct netgroup *result = malloc(sizeof(struct netgroup));
-  if (!result)
-    return NULL;
-  result->next = NULL;
-  result->name = group_name;
-  result->head = NULL;
-
-  // Fill in netgroup entries
-  struct entry* lastentry = NULL;
-  for (;;) {
-    // Get the next word (anything non-space and non-null)
-    parser_skip_whitespace(&cur);
-    char *word = parser_copy_word(&cur);
-    if (!word)
-      break;
-
-    // Parse the entry
-    struct entry *entry = netgroup_parse_entry(word);
-    free(word);
-    if (!entry)
-      continue;
-
-    // Connect the entries together in a singly-linked list
-    if (lastentry) {
-      lastentry->next = entry;
-    } else {
-      result->head = entry;
-    }
-
-    lastentry = entry;
-  }
-
-  return result;
-}
-
-void netgroup_free(struct netgroup *group) {
-  if (!group)
-    return;
-
-  free(group->name);
-  netgroup_entry_free_all(group->head);
-  free(group);
-}
-
-struct entry *netgroup_parse_entry(const char *value) {
-  // Initialize the regex to match triples only on first call
-  static int regex_needs_init = 1;
-  static regex_t regex_triple;
-  if (regex_needs_init) {
-    if (regcomp(&regex_triple, NETGROUP_TRIPLE_REGEX, REG_EXTENDED))
-      return NULL;
-    regex_needs_init = 0;
-  }
-
-  struct entry *result = malloc(sizeof(struct entry));
-  if (!result)
-    return NULL;
-
-  memset(result, 0, sizeof(struct entry));
-
-  regmatch_t regex_triple_match [4];
-  if (regexec(&regex_triple, value, 4, regex_triple_match, 0) == REG_NOMATCH) {
-    // Match failed, assume entry is a netgroup name
-    result->type = CHILD_ENTRY;
-    result->data.child.name = strdup(value);
-    if (!result->data.child.name) {
-      netgroup_entry_free(result);
-      return NULL;
-    }
-  } else {
-    // Match success, entry is a triple
-    result->type = TRIPLE_ENTRY;
-
-    // Array of pointers to fields to set in triple
-    char ** triple [3] = {
-        &result->data.triple.hostname,
-        &result->data.triple.username,
-        &result->data.triple.domainname };
-    int i;
-
-    // Loop through each potential field in triple
-    for (i = 0; i < 3; i++) {
-      regoff_t start = regex_triple_match[i + 1].rm_so;
-      regoff_t end = regex_triple_match[i + 1].rm_eo;
-      regoff_t len = end - start;
-
-      if (start == -1 || len == 0) {
-        // This field is empty, so it matches anything
-        *triple[i] = NULL;
-      } else {
-        // Allocate and copy new field for triple
-        char *field = malloc(len + 1);
-        if (!field) {
-          netgroup_entry_free(result);
-          return NULL;
-        }
-        memcpy(field, &value[start], len);
-        field[len] = '\0';
-        *triple[i] = field;
-      }
-    }
-  }
-  return result;
-}
-
-void netgroup_entry_free_all(struct entry *head) {
-  struct entry *entry = head;
-  struct entry *nextentry;
-  while (entry) {
-    nextentry = entry->next;
-    netgroup_entry_free(entry);
-    entry = nextentry;
-  }
-}
-
-void netgroup_entry_free(struct entry *entry) {
-  if (!entry)
-    return;
-
-  if (entry->type == TRIPLE_ENTRY) {
-    FREE_IF_NOT_NULL(entry->data.triple.hostname);
-    FREE_IF_NOT_NULL(entry->data.triple.username);
-    FREE_IF_NOT_NULL(entry->data.triple.domainname);
-  } else {
-    FREE_IF_NOT_NULL(entry->data.child.name);
-  }
-
-  free(entry);
-}
-
-struct netgroup *netgroup_find(struct netgroup *head, const char *name) {
-  struct netgroup *group;
-  for (group = head; group && strcmp(group->name, name); group = group->next) {}
-  return group;
-}
-
-void netgroup_iter_init(struct netgroup_iter *iter, struct netgroup *group) {
-  iter->stack[0] = group->head;
-  iter->depth = 0;
-}
-
-struct entry *netgroup_iter_next(struct netgroup_iter *iter) {
-  while (iter->depth >= 0) {
-    struct entry *cur = iter->stack[iter->depth];
-
-    if (!cur) {
-      // Pop current finished entry off stack
-      iter->depth--;
-    } else if (cur->type == CHILD_ENTRY) {
-      // Replace the current location on the stack with the next sibling
-      iter->stack[iter->depth] = cur->next;
-
-      // Grow the stack
-      iter->depth++;
-      if (iter->depth >= NETGROUP_MAX_DEPTH) {
-        iter->depth = -1;
-        return NULL; // Too much recursion
-      }
-
-      // Put this entry's children on top of the stack
-      struct entry *child = cur->data.child.head;
-      iter->stack[iter->depth] = child;
-    } else {
-      // Replace the current location on the stack with the next sibling
-      iter->stack[iter->depth] = cur->next;
-      return cur;
-    }
-  }
-
-  return NULL;
-}
diff --git a/test/mocklibc/src/netgroup.h b/test/mocklibc/src/netgroup.h
deleted file mode 100644
index 11cf7ebf..00000000
--- a/test/mocklibc/src/netgroup.h
+++ /dev/null
@@ -1,144 +0,0 @@
-/**
- * Copyright 2011 Google Inc. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- * Author: Nikki VonHollen <vonhollen@gmail.com>
- */
-
-#ifndef NETGROUP_H_
-#define NETGROUP_H_
-
-#define NETGROUP_MAX_DEPTH 32
-
-/**
- * Netgroup with a name and list of entries.
- */
-struct netgroup;
-
-/**
- * Entry in a netgroup, either a triple or sub-group (child).
- */
-struct entry;
-
-struct netgroup {
-  /* Next netgroup in list. */
-  struct netgroup *next; // Next netgroup in list
-
-  /* Netgroup name. */
-  char *name;
-
-  /* First entry in list of entries. */
-  struct entry *head;
-};
-
-struct entry {
-  /* Next entry in list of entries for the parent netgroup. */
-  struct entry *next;
-
-  /* Entry type is triple (host,user,domain) or child (netgroup name). */
-  enum {CHILD_ENTRY, TRIPLE_ENTRY} type;
-
-  union {
-    /* Child data if entry is a netgroup name. */
-    struct {
-      /* Child netgroup name. */
-      char *name;
-
-      /* Pointer to first entry in child netgroup. */
-      struct entry *head;
-    } child;
-
-    /* Triple data if entry type is triple. */
-    struct {
-      char *hostname;
-      char *username;
-      char *domainname;
-    } triple;
-  } data;
-};
-
-/* Recursive netgroup entry iterator. */
-struct netgroup_iter {
-  struct entry *stack [NETGROUP_MAX_DEPTH];
-  int depth;
-};
-
-
-/**
- * Load full netgroup database into memory.
- * @return Head netgroup
- */
-struct netgroup *netgroup_parse_all();
-
-/**
- * Free a list of netgroups.
- * @param head Head of list of netgroups
- */
-void netgroup_free_all(struct netgroup *head);
-
-/**
- * Parse a single netgroup.
- * @param line Line for netgroup definition
- * @return Single netgroup with list of netgroup entries
- */
-struct netgroup *netgroup_parse_line(char *line);
-
-/**
- * Free single netgroup.
- * @param group Netgroup to free
- */
-void netgroup_free(struct netgroup *group);
-
-/**
- * Parse a single netgroup entry.
- * @param value Entry triple or name as string
- * @return Single netgroup entry
- */
-struct entry *netgroup_parse_entry(const char *value);
-
-/**
- * Free a list of netgroup entries.
- * @param head Head of list of entries
- */
-void netgroup_entry_free_all(struct entry *head);
-
-/**
- * Free a single netgroup entry.
- * @param entry Netgroup entry to free
- */
-void netgroup_entry_free(struct entry *entry);
-
-/**
- * Find netgroup with given name.
- * @param head Head of list of netgroups
- * @param name Name to find
- * @return Netgroup with name or NULL if not found
- */
-struct netgroup *netgroup_find(struct netgroup *head, const char *name);
-
-/**
- * Create recursive iterator over all entries in a netgroup.
- * @param iter Pointer to iterator struct
- * @param group Group to iterate over
- */
-void netgroup_iter_init(struct netgroup_iter *iter, struct netgroup *group);
-
-/**
- * Get the next entry in the netgroup iterator.
- * @param iter Pointer to iterator struct
- * @return Netgroup entry of type triple, or NULL if done iterating
- */
-struct entry *netgroup_iter_next(struct netgroup_iter *iter);
-
-#endif
diff --git a/test/mocklibc/src/pwd.c b/test/mocklibc/src/pwd.c
deleted file mode 100644
index 6005a1d7..00000000
--- a/test/mocklibc/src/pwd.c
+++ /dev/null
@@ -1,99 +0,0 @@
-/**
- * Copyright 2011 Google Inc. All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- * Author: Nikki VonHollen <vonhollen@gmail.com>
- */
-
-#include <pwd.h>
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <sys/types.h>
-
-#define PASSWD_CONFIG_KEY "MOCK_PASSWD"
-
-static FILE *global_stream = NULL;
-
-void setpwent(void) {
-  if (global_stream)
-    endpwent();
-
-  const char *path = getenv(PASSWD_CONFIG_KEY);
-  if (!path)
-    return;
-
-  global_stream = fopen(path, "r");
-}
-
-struct passwd *getpwent(void) {
-  if (!global_stream)
-    setpwent();
-
-  if (!global_stream)
-    return NULL;
-
-  return fgetpwent(global_stream);
-}
-
-void endpwent(void) {
-  if (!global_stream)
-    return;
-
-  fclose(global_stream);
-  global_stream = NULL;
-}
-
-struct passwd *getpwnam(const char *name) {
-  const char *path = getenv(PASSWD_CONFIG_KEY);
-  if (!path)
-    return NULL;
-
-  FILE *stream = fopen(path, "r");
-  if (!stream)
-    return NULL;
-
-  struct passwd *entry;
-  while ((entry = fgetpwent(stream))) {
-    if (strcmp(entry->pw_name, name) == 0) {
-      fclose(stream);
-      return entry;
-    }
-  }
-
-  fclose(stream);
-  return NULL;
-}
-
-struct passwd *getpwuid(uid_t uid) {
-  const char *path = getenv(PASSWD_CONFIG_KEY);
-  if (!path)
-    return NULL;
-
-  FILE *stream = fopen(path, "r");
-  if (!stream)
-    return NULL;
-
-  struct passwd *entry;
-  while ((entry = fgetpwent(stream))) {
-    if (entry->pw_uid == uid) {
-      fclose(stream);
-      return entry;
-    }
-  }
-
-  fclose(stream);
-  return NULL;
-}
diff --git a/test/polkit/Makefile.am b/test/polkit/Makefile.am
deleted file mode 100644
index 261d1d5b..00000000
--- a/test/polkit/Makefile.am
+++ /dev/null
@@ -1,56 +0,0 @@
-
-NULL =
-
-AM_CPPFLAGS =                                              	\
-	-I$(top_builddir)/src                           	\
-	-I$(top_srcdir)/src                             	\
-	-I$(top_srcdir)/test                             	\
-	-DPACKAGE_LIBEXEC_DIR=\""$(libexecdir)"\"       	\
-	-DPACKAGE_SYSCONF_DIR=\""$(sysconfdir)"\"       	\
-	-DPACKAGE_DATA_DIR=\""$(datadir)"\"             	\
-	-DPACKAGE_BIN_DIR=\""$(bindir)"\"               	\
-	-DPACKAGE_LOCALSTATE_DIR=\""$(localstatedir)"\" 	\
-	-DPACKAGE_LOCALE_DIR=\""$(localedir)"\"         	\
-	-DPACKAGE_LIB_DIR=\""$(libdir)"\"               	\
-	-D_POSIX_PTHREAD_SEMANTICS                      	\
-	-D_REENTRANT	                                	\
-	$(NULL)
-
-AM_CFLAGS =            				\
-	-D_POLKIT_COMPILATION                                   \
-	-D_POLKIT_BACKEND_COMPILATION                           \
-	$(GLIB_CFLAGS)						\
-	$(NULL)
-
-LDADD =  	                      		\
-	$(GLIB_LIBS)						\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la	\
-	$(NULL)
-
-TEST_PROGS =
-
-# ----------------------------------------------------------------------------------------------------
-
-TEST_PROGS += polkitunixusertest
-polkitunixusertest_SOURCES = polkitunixusertest.c
-
-TEST_PROGS += polkitunixgrouptest
-polkitunixgrouptest_SOURCES = polkitunixgrouptest.c
-
-TEST_PROGS += polkitunixnetgrouptest
-polkitunixnetgrouptest_SOURCES = polkitunixnetgrouptest.c
-
-TEST_PROGS += polkitidentitytest
-polkitidentitytest_SOURCES = polkitidentitytest.c
-
-# ----------------------------------------------------------------------------------------------------
-
-check_PROGRAMS = $(TEST_PROGS)
-TESTS = $(TEST_PROGS)
-
-EXTRA_DIST = meson.build
-
-clean-local :
-	rm -f *~
-
--include $(top_srcdir)/git.mk
diff --git a/test/polkitbackend/Makefile.am b/test/polkitbackend/Makefile.am
deleted file mode 100644
index 282c5c9d..00000000
--- a/test/polkitbackend/Makefile.am
+++ /dev/null
@@ -1,53 +0,0 @@
-
-NULL =
-
-AM_CPPFLAGS =                                              	\
-	-I$(top_builddir)/src                           	\
-	-I$(top_srcdir)/src                             	\
-	-I$(top_srcdir)/test                             	\
-	-DPACKAGE_LIBEXEC_DIR=\""$(libexecdir)"\"       	\
-	-DPACKAGE_SYSCONF_DIR=\""$(sysconfdir)"\"       	\
-	-DPACKAGE_DATA_DIR=\""$(datadir)"\"             	\
-	-DPACKAGE_BIN_DIR=\""$(bindir)"\"               	\
-	-DPACKAGE_LOCALSTATE_DIR=\""$(localstatedir)"\" 	\
-	-DPACKAGE_LOCALE_DIR=\""$(localedir)"\"         	\
-	-DPACKAGE_LIB_DIR=\""$(libdir)"\"               	\
-	-D_POSIX_PTHREAD_SEMANTICS                      	\
-	-D_REENTRANT	                                	\
-	$(NULL)
-
-AM_CFLAGS =							\
-        -D_POLKIT_COMPILATION                                   \
-        -D_POLKIT_BACKEND_COMPILATION                           \
-	$(GLIB_CFLAGS)						\
-	$(NULL)
-
-LDADD =  	                      				\
-	$(GLIB_LIBS)						\
-	$(top_builddir)/src/polkit/libpolkit-gobject-1.la	\
-	$(top_builddir)/src/polkitbackend/libpolkit-backend-1.la\
-	$(top_builddir)/test/libpolkit-test-helper.la           \
-	$(NULL)
-
-TEST_PROGS =
-
-# ----------------------------------------------------------------------------------------------------
-
-polkitbackendjsauthoritytest_SOURCES = test-polkitbackendjsauthority.c
-# force C++ link via dummy C++ file, (see GNU automake manual section 8.3.5)
-nodist_EXTRA_polkitbackendjsauthoritytest_SOURCES = dummy-force-cpp-link.cxx
-
-TESTS_ENVIRONMENT = TOP_BUILD_DIR="$(top_builddir)"
-TEST_PROGS += polkitbackendjsauthoritytest-wrapper.py
-
-# ----------------------------------------------------------------------------------------------------
-
-noinst_PROGRAMS = polkitbackendjsauthoritytest
-TESTS = $(TEST_PROGS)
-
-EXTRA_DIST = meson.build
-
-clean-local :
-	rm -f *~
-
--include $(top_srcdir)/git.mk
-- 
GitLab

