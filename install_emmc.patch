diff --git a/projects/Amlogic/devices/KVIM/bootloader/boot.ini b/projects/Amlogic/devices/KVIM/bootloader/boot.ini
deleted file mode 100644
index d0a8667..0000000
--- a/projects/Amlogic/devices/KVIM/bootloader/boot.ini
+++ /dev/null
@@ -1,40 +0,0 @@
-#------------------------------------------------------------------------------------------------------
-#
-# boot.ini
-#
-# WARNING DO NOT MODIFY THIS FILE! ALL CHANGES WILL BE LOST WITH THE NEXT UPDATE!
-# Set your own settings in config.ini
-#
-#------------------------------------------------------------------------------------------------------
-KHADAS-UBOOT-CONFIG
-
-setenv bootrootfs "BOOT_IMAGE=kernel.img boot=UUID=@BOOT_UUID@ disk=UUID=@DISK_UUID@"
-setenv condev "ttyS0,115200"
-setenv hdmimode "1080p60hz"
-setenv hdmioutput   "1"
-setenv vpu          "1"
-setenv libreelec "quiet"
-setenv hdmi_cec "1"
-setenv uenv_addr 0x13000000
-
-fatload mmc 0:1 ${loadaddr} kernel.img
-fatload mmc 0:1 ${dtb_mem_addr} dtb.img
-
-if fatload mmc 0:1 ${uenv_addr} config.ini; then env import -t ${uenv_addr} $filesize; fi
-
-setenv khadas "no_console_suspend logo=osd1,loaded,0x3f800000,${hdmimode} vout=${hdmimode},enable hdmimode=${hdmimode} cvbsmode=nocvbs consoleblank=0"
-if test "${hdmi_cec}" = "1"; then setenv cec "hdmitx=cec17"; fi
-setenv bootargs "console=${condev} ${bootrootfs} ${khadas} ${cec} ${libreelec}"
-
-# Device tree modifications
-bootm start
-bootm loados
-bootm fdt
-if test "${vpu}" = "0"; then fdt rm /mesonstream; fdt rm /vdec; fdt rm /ppmgr; fi
-if test "${hdmioutput}" = "0"; then fdt rm /mesonfb; fi
-# Remove aml partition layout from device tree (required for eMMC boot)
-fdt rm /partitions
-bootm prep
-
-# Boot the board
-bootm go
diff --git a/projects/Amlogic/devices/KVIM/bootloader/config.ini b/projects/Amlogic/devices/KVIM/bootloader/config.ini
deleted file mode 100644
index 3cd4f54..0000000
--- a/projects/Amlogic/devices/KVIM/bootloader/config.ini
+++ /dev/null
@@ -1,57 +0,0 @@
-#------------------------------------------------------------------------------------------------------
-#
-# config.ini
-#
-#------------------------------------------------------------------------------------------------------
-
-#------------------------------------------------------------------------------------------------------
-#
-# Console Setup
-#   on serial port:
-#   condev='ttyS0,115200'
-#
-#------------------------------------------------------------------------------------------------------
-
-#------------------------------------------------------------------------------------------------------
-#
-# Video
-#   Setup the video output
-#       hdmimode='480i60hz'
-#       hdmimode='480p60hz'
-#       hdmimode='576i50hz'
-#       hdmimode='576p50hz'
-#       hdmimode='720p60hz'
-#       hdmimode='720p50hz'
-#       hdmimode='1080i60hz'
-#       hdmimode='1080p60hz'
-#       hdmimode='1080i50hz'
-#       hdmimode='1080p50hz'
-#       hdmimode='1080p30hz'
-#       hdmimode='1080p25hz'
-#       hdmimode='1080p24hz'
-#       hdmimode='2160p60hz'
-#       hdmimode='2160p50hz'
-#       hdmimode='2160p30hz'
-#       hdmimode='2160p25hz'
-#       hdmimode='2160p24hz'
-#
-#------------------------------------------------------------------------------------------------------
-
-#------------------------------------------------------------------------------------------------------
-#
-# LibreELEC variables
-#
-# Setup the LibreELEC options
-#   valid values are: textmode debugging progress nofsck nosplash noram overlay quiet ssh
-#
-# libreelec='quiet'
-#
-#------------------------------------------------------------------------------------------------------
-
-#------------------------------------------------------------------------------------------------------
-#
-# Enable|Disable HDMI CEC Control
-#   hdmi_cec='0'
-#   hdmi_cec='1'
-#
-#------------------------------------------------------------------------------------------------------
diff --git a/projects/Amlogic/devices/KVIM/bootloader/mkimage b/projects/Amlogic/devices/KVIM/bootloader/mkimage
new file mode 100644
index 0000000..08eeb36
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/bootloader/mkimage
@@ -0,0 +1,14 @@
+#!/bin/bash
+
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2017-present Team LibreELEC (https://libreelec.tv)
+
+if [ -f "$RELEASE_DIR/3rdparty/bootloader/u-boot" ]; then
+  echo "Writing u-boot to $(basename $DISK)"
+  dd if="$RELEASE_DIR/3rdparty/bootloader/u-boot" of="$DISK" conv=fsync,notrunc bs=1 count=112 >"$SAVE_ERROR" 2>&1 || show_error
+  dd if="$RELEASE_DIR/3rdparty/bootloader/u-boot" of="$DISK" conv=fsync,notrunc bs=512 skip=1 seek=1 >"$SAVE_ERROR" 2>&1 || show_error
+fi
+
+for file_ini in $RELEASE_DIR/3rdparty/instboot/* ; do
+  [ -e "$file_ini" ] && mcopy -s "$file_ini" ::
+done
diff --git a/projects/Amlogic/devices/KVIM/bootloader/release b/projects/Amlogic/devices/KVIM/bootloader/release
new file mode 100755
index 0000000..0a11106
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/bootloader/release
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2018-present Team LibreELEC (https://libreelec.tv)
+
+INSTBOOT_DIR=$RELEASE_DIR/3rdparty/instboot
+mkdir -p $INSTBOOT_DIR
+cp -a $INSTALL/instboot/* $INSTBOOT_DIR
+mv $INSTALL/usr/share/bootloader/dtb $INSTBOOT_DIR/dtb
diff --git a/projects/Amlogic/devices/KVIM/bootloader/update.sh b/projects/Amlogic/devices/KVIM/bootloader/update.sh
new file mode 100755
index 0000000..aaafa78
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/bootloader/update.sh
@@ -0,0 +1,36 @@
+#!/bin/sh
+
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2017-present Team LibreELEC (https://libreelec.tv)
+
+[ -z "$UPDATE_DIR" ] && UPDATE_DIR="/storage/.update"
+[ -z "$SYSTEM_ROOT" ] && SYSTEM_ROOT=""
+[ -z "$BOOT_ROOT" ] && BOOT_ROOT="/flash"
+[ -z "$BOOT_PART" ] && BOOT_PART=$(df "$BOOT_ROOT" | tail -1 | awk {' print $1 '})
+if [ -z "$BOOT_DISK" ]; then
+  case $BOOT_PART in
+    /dev/sd[a-z][0-9]*)
+      BOOT_DISK=$(echo $BOOT_PART | sed -e "s,[0-9]*,,g")
+      ;;
+    /dev/mmcblk*)
+      BOOT_DISK=$(echo $BOOT_PART | sed -e "s,p[0-9]*,,g")
+      ;;
+  esac
+fi
+
+# mount $BOOT_ROOT r/w
+mount -o remount,rw $BOOT_ROOT
+
+# update device tree
+mv $BOOT_ROOT/dtb $BOOT_ROOT/dtb_old
+cp -R $UPDATE_DIR/.tmp/*/3rdparty/instboot/dtb $BOOT_ROOT
+
+if [ -f $SYSTEM_ROOT/usr/share/bootloader/u-boot -a ! -e /dev/system -a ! -e /dev/boot ]; then
+  echo "Updating u-boot on: $BOOT_DISK..."
+  dd if=$SYSTEM_ROOT/usr/share/bootloader/u-boot of=$BOOT_DISK conv=fsync bs=1 count=112 status=none
+  dd if=$SYSTEM_ROOT/usr/share/bootloader/u-boot of=$BOOT_DISK conv=fsync bs=512 skip=1 seek=1 status=none
+fi
+
+# mount $BOOT_ROOT r/o
+  sync
+  mount -o remount,ro $BOOT_ROOT
diff --git a/projects/Amlogic/devices/KVIM/filesystem/usr/sbin/rebootfromnand b/projects/Amlogic/devices/KVIM/filesystem/usr/sbin/rebootfromnand
new file mode 100755
index 0000000..80268c6
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/filesystem/usr/sbin/rebootfromnand
@@ -0,0 +1,6 @@
+#!/bin/sh
+
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2018-present Team LibreELEC (https://libreelec.tv)
+
+/usr/sbin/fw_setenv bls android
diff --git a/projects/Amlogic/devices/KVIM/initramfs/platform_init b/projects/Amlogic/devices/KVIM/initramfs/platform_init
new file mode 100755
index 0000000..0847363
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/initramfs/platform_init
@@ -0,0 +1,94 @@
+#!/bin/sh
+
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2017-present Team LibreELEC (https://libreelec.tv)
+
+display_mode=$(cat /sys/class/display/mode)
+
+if [ -z "$display_mode" ]; then
+    display_mode="1080p60hz"
+fi
+
+# Parse command line arguments
+for arg in $(cat /proc/cmdline); do
+  case ${arg} in
+    BOOT_IMAGE=*)
+      BOOT_IMAGE=${arg#*=}
+      ;;
+    boot=*)
+      boot=${arg#*=}
+      ;;
+    disk=*)
+      disk=${arg#*=}
+      ;;
+    hdmimode=*)
+      hdmimode=${arg#*=}
+      ;;
+  esac
+done
+
+# Add information where to run LibreELEC from
+if [ -z "$BOOT_IMAGE" -o -z "$boot" -o -z "$disk" ]; then
+  cmdline=$(cat /proc/cmdline)
+  cmdline="$cmdline BOOT_IMAGE=/dev/boot boot=/dev/system disk=/dev/data"
+  echo "$cmdline" > /proc/cmdline
+fi
+
+# Set colorspace to avoid no HDMI signal with non-4K output modes
+echo 422,8bit > /sys/class/amhdmitx/amhdmitx0/attr
+
+# Enable HDMI output if cable is connected and not already enabled by u-boot
+if [ "$(cat /sys/class/amhdmitx/amhdmitx0/hpd_state)" != "0" ] && [ "$display_mode" != "$hdmimode" ]; then
+  echo "$hdmimode" > /sys/class/display/mode
+  display_mode="$hdmimode"
+fi
+
+# Set framebuffer geometry to match the resolution
+case $display_mode in
+  480*)            X=720  Y=480  ;;
+  576*)            X=720  Y=576  ;;
+  720p*)           X=1280 Y=720  ;;
+  *)               X=1920 Y=1080 ;;
+esac
+
+fbset -fb /dev/fb0 -g $X $Y 1920 2160 32
+fbset -fb /dev/fb1 -g 32 32 32 32 32
+echo 0 > /sys/class/graphics/fb0/free_scale
+echo 0 > /sys/class/graphics/fb1/free_scale
+echo 1 > /sys/class/video/disable_video
+
+# Enable scaling for 4K output
+case $display_mode in
+  4k*|smpte*|2160*)
+    echo 0 0 1919 1079 > /sys/class/graphics/fb0/free_scale_axis
+    echo 0 0 3839 2159 > /sys/class/graphics/fb0/window_axis
+    echo 1920 > /sys/class/graphics/fb0/scale_width
+    echo 1080 > /sys/class/graphics/fb0/scale_height
+    echo 0x10001 > /sys/class/graphics/fb0/free_scale
+  ;;
+esac
+
+# Include deinterlacer into default VFM map
+echo rm default > /sys/class/vfm/map
+echo add default decoder ppmgr deinterlace amvideo > /sys/class/vfm/map
+
+# Enable framebuffer device
+echo 0 > /sys/class/graphics/fb0/blank
+
+# Blank fb1 to prevent static noise
+echo 1 > /sys/class/graphics/fb1/blank
+
+# set smp_affinity
+#            Binary       Hex
+#    CPU 0    0001         1
+#    CPU 1    0010         2
+#    CPU 2    0100         4
+#    CPU 3    1000         8
+echo 2 > /proc/irq/231/smp_affinity  # hdmi_aocec
+echo 4 > /proc/irq/63/smp_affinity   # dwc_otg, dwc_otg_hcd:usb1
+echo 8 > /proc/irq/62/smp_affinity   # dwc_otg, dwc_otg_hcd:usb2, dwc_otg_pcd
+
+# DEC_CONTROL_FLAG_DISABLE_FAST_POC
+echo 4 > /sys/module/amvdec_h264/parameters/dec_control
+
+echo 1 > /sys/devices/system/cpu/cpufreq/ondemand/io_is_busy
diff --git a/projects/Amlogic/devices/KVIM/options b/projects/Amlogic/devices/KVIM/options
index 943ed63..2ad6b7d 100644
--- a/projects/Amlogic/devices/KVIM/options
+++ b/projects/Amlogic/devices/KVIM/options
@@ -11,7 +11,7 @@
     KERNEL_UBOOT_EXTRA_TARGET="gxl_p212_2g_kvim.dtb"
 
   # Additional kernel dependencies
-    KERNEL_EXTRA_DEPENDS_TARGET="device-trees-amlogic"
+    KERNEL_EXTRA_DEPENDS_TARGET="device-trees-amlogic-dtb"
 
   # additional drivers to install:
   # for a list of additinoal drivers see packages/linux-drivers
@@ -27,7 +27,7 @@
   # additional packages to install:
   # Space separated list is supported,
   # e.g. ADDITIONAL_PACKAGES="PACKAGE1 PACKAGE2"
-    ADDITIONAL_PACKAGES+=" autoscript-amlogic"
+    ADDITIONAL_PACKAGES+=" autoscript-amlogic-kvim"
 
   # add OOTB support for Khadas VIM IR remote
     IR_REMOTE_KEYMAPS="$IR_REMOTE_KEYMAPS khadas_vim"
diff --git a/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/data_to_emmc_uEnv.ini b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/data_to_emmc_uEnv.ini
new file mode 100644
index 0000000..1b91223
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/data_to_emmc_uEnv.ini
@@ -0,0 +1,2 @@
+dtb_name=/dtb/@DTB_NAME@
+boot_env=boot=LABEL=@BOOT_LABEL@ disk=/dev/data BOOT_IMAGE=kernel.img hdmitx=cecf console=ttyS0,115200n8 console=tty0 no_console_suspend consoleblank=0 systemd.show_status=auto 
diff --git a/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/ddbr-backup.sh b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/ddbr-backup.sh
new file mode 100644
index 0000000..a2d4027
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/ddbr-backup.sh
@@ -0,0 +1,45 @@
+#!/bin/sh
+
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2018-present Team LibreELEC (https://libreelec.tv)
+
+#BACKUP_DATE=$(date +%Y%m%d%H%M%S)
+#image="$(date +%Y%m%d%H%M%S)-EMMC-backup.img"
+image="EMMC-backup.img"
+
+OUTDIR=$1
+
+emmc=$2
+
+#echo "Start FULL backup eMMC to /storage/backup"
+
+if [ "$emmc" = "" ]
+then
+    if grep /dev/mmcblk0 /proc/mounts | grep flash ; then
+	emmc="/dev/mmcblk1"
+    else
+	emmc="/dev/mmcblk0"
+    fi
+else
+    if [ ! -e "$emmc" ] ; then
+	echo "Not found EMMC !!!!"
+	exit 1
+    fi
+fi
+
+if [ "$OUTDIR" = "" ]
+then
+    OUTDIR="/storage/backup/ddbr"
+    [ ! -d $OUTDIR ] && mkdir -p $OUTDIR
+else
+    if [ ! -d "$OUTDIR" ] ; then
+        echo " PROGRAM EXITED DUE TO ERROR: NO DIR $OUTDIR !!!"
+        exit 1
+    fi
+fi
+
+dd if=$emmc | gzip > $OUTDIR/$image.gz
+
+echo "Done! Full backup completed."
+poweroff
+exit 0
diff --git a/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/ddbr-restore.sh b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/ddbr-restore.sh
new file mode 100644
index 0000000..f31c6db
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/ddbr-restore.sh
@@ -0,0 +1,45 @@
+#!/bin/sh
+
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2018-present Team LibreELEC (https://libreelec.tv)
+
+image="EMMC-backup.img.gz"
+
+OUTDIR=$1
+
+if [ "$OUTDIR" = "" ]
+then
+    OUTDIR="/storage/backup/ddbr"
+else
+    if [ ! -d "$OUTDIR" ] ; then
+        echo " PROGRAM EXITED DUE TO ERROR: NO DIR $OUTDIR !!!"
+        exit 1
+    fi
+fi
+
+emmc=$2
+
+if [ "$emmc" = "" ]
+then
+    if grep /dev/mmcblk0 /proc/mounts | grep flash ; then
+	emmc="/dev/mmcblk1"
+    else
+	emmc="/dev/mmcblk0"
+    fi
+else
+    if [ ! -e "$emmc" ] ; then
+	echo "Not found EMMC !!!!"
+	exit 1
+    fi
+fi
+
+if [ ! -f "$OUTDIR/$image" ] ; then
+    echo "Not found file backup $OUTDIR/$image"
+    exit 1
+fi
+
+gunzip -c $OUTDIR/$image | dd of=$emmc
+
+echo "Done! restore backup completed."
+poweroff
+exit 0
diff --git a/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/erase_android_install2emmc.sh b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/erase_android_install2emmc.sh
new file mode 100644
index 0000000..c466a7d
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/erase_android_install2emmc.sh
@@ -0,0 +1,55 @@
+#!/bin/sh
+
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2018-present Team LibreELEC (https://libreelec.tv)
+
+IMAGE_KERNEL="/flash/kernel.img"
+IMAGE_SYSTEM="/flash/SYSTEM"
+SCRIPT_EMMC="/flash/emmc_autoscript"
+SCRIPT_ENV="/flash/uEnv.ini"
+IMAGE_DTB="/flash/dtb"
+
+if [ -f $IMAGE_KERNEL -a -f $IMAGE_SYSTEM -a -f $SCRIPT_EMMC -a -f $SCRIPT_ENV ] ; then
+
+    mkdir -p /tmp/system
+    e2label /dev/system "LE_EMMC"
+    e2label /dev/data "DATA_EMMC"
+    if grep -q /dev/system /proc/mounts ; then
+      umount -f /dev/system
+    fi
+    mount -o rw /dev/system /tmp/system
+    rm -rf /tmp/system/*
+
+    if grep -q /dev/system /proc/mounts ; then
+
+        cp $IMAGE_KERNEL /tmp/system && sync
+        cp $IMAGE_SYSTEM /tmp/system && sync
+        cp $SCRIPT_EMMC /tmp/system && sync
+        cp $SCRIPT_ENV /tmp/system && sync
+        sed -e "s/LIBREELEC/LE_EMMC/g" \
+          -e "s/STORAGE/DATA_EMMC/g" \
+          -i "/tmp/system/uEnv.ini"
+
+        cp -r $IMAGE_DTB /tmp/system && sync
+        sync
+        umount /tmp/system
+
+        if grep -q /dev/data /proc/mounts ; then
+          umount -f /dev/data
+        fi
+        mount -o rw /dev/data /tmp/system
+        rm -rf /tmp/system/*
+        sync
+        umount /tmp/system
+
+        fw_setenv system_part b
+        poweroff
+        exit 0
+    else
+      echo "No /dev/system  partiton."
+      exit 1
+    fi
+else
+    echo "No LE image found on /flash! Exiting..."
+    exit 1
+fi
diff --git a/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/install2emmc.sh b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/install2emmc.sh
new file mode 100644
index 0000000..d8a43d2
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/install2emmc.sh
@@ -0,0 +1,46 @@
+#!/bin/sh
+
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2018-present Team LibreELEC (https://libreelec.tv)
+
+IMAGE_KERNEL="/flash/kernel.img"
+IMAGE_SYSTEM="/flash/SYSTEM"
+SCRIPT_EMMC="/flash/emmc_autoscript"
+SCRIPT_ENV="/flash/uEnv.ini"
+IMAGE_DTB="/flash/dtb"
+
+if [ -f $IMAGE_KERNEL -a -f $IMAGE_SYSTEM -a -f $SCRIPT_EMMC -a -f $SCRIPT_ENV ] ; then
+
+    mkdir -p /tmp/system
+    e2label /dev/system "LE_EMMC"
+    e2label /dev/data "DATA_EMMC"
+    if grep -q /dev/system /proc/mounts ; then
+      echo "Unmounting SYSTEM partiton."
+      umount -f /dev/system
+    fi
+    mount -o rw /dev/system /tmp/system
+
+    if grep -q /dev/system /proc/mounts ; then
+
+        cp $IMAGE_KERNEL /tmp/system && sync
+        cp $IMAGE_SYSTEM /tmp/system && sync
+        cp $SCRIPT_EMMC /tmp/system && sync
+        cp $SCRIPT_ENV /tmp/system && sync
+        sed -e "s/LIBREELEC/LE_EMMC/g" \
+          -e "s/STORAGE/DATA_EMMC/g" \
+          -i "/tmp/system/uEnv.ini"
+
+        cp -r $IMAGE_DTB /tmp/system && sync
+        umount /tmp/system
+        sync
+	fw_setenv system_part b
+        poweroff
+        exit 0
+    else
+      echo "No /dev/system  partiton."
+      exit 1
+    fi
+else
+    echo "No LE image found on /flash! Exiting..."
+    exit 1
+fi
diff --git a/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/uEnv.ini b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/uEnv.ini
new file mode 100644
index 0000000..47ed9ea
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/instboot/uEnv.ini
@@ -0,0 +1,2 @@
+dtb_name=/dtb/@DTB_NAME@
+boot_env=boot=LABEL=@BOOT_LABEL@ disk=LABEL=@DISK_LABEL@ BOOT_IMAGE=kernel.img hdmitx=cecf console=ttyS0,115200n8 console=tty0 no_console_suspend consoleblank=0 systemd.show_status=auto 
diff --git a/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/package.mk b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/package.mk
new file mode 100644
index 0000000..7c7746b
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/package.mk
@@ -0,0 +1,29 @@
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2018-present Team LibreELEC (https://libreelec.tv)
+
+PKG_NAME="autoscript-amlogic-kvim"
+PKG_VERSION="0.1"
+PKG_LICENSE="GPL"
+PKG_DEPENDS_TARGET="toolchain"
+PKG_LONGDESC="Autoscript package for Amlogic devices"
+PKG_TOOLCHAIN="manual"
+
+make_target() {
+  for src in $PKG_DIR/scripts/*autoscript.src ; do
+    $TOOLCHAIN/bin/mkimage -A $TARGET_KERNEL_ARCH -O linux -T script -C none -d "$src" "$(basename $src .src)" > /dev/null
+  done
+}
+
+makeinstall_target() {
+  mkdir -p $INSTALL/instboot
+  cp -a $PKG_BUILD/*autoscript $INSTALL/instboot
+  cp -a $PKG_DIR/instboot/* $INSTALL/instboot
+  for src in $INSTALL/instboot/*.ini ; do
+      sed -e "s/@BOOT_LABEL@/$DISTRO_BOOTLABEL/g" \
+          -e "s/@DISK_LABEL@/$DISTRO_DISKLABEL/g" \
+          -i "$src"
+
+      sed -e "s/@DTB_NAME@/$KERNEL_UBOOT_EXTRA_TARGET/g" \
+          -i "$src"
+  done
+}
diff --git a/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/scripts/aml_autoscript.src b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/scripts/aml_autoscript.src
new file mode 100644
index 0000000..cb52a46
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/scripts/aml_autoscript.src
@@ -0,0 +1,11 @@
+defenv
+setenv bootcmd 'run start_autoscript; run storeboot;'
+setenv start_autoscript 'if usb start ; then run start_usb_autoscript; fi; if mmcinfo; then run start_mmc_autoscript; fi; run start_emmc_autoscript;'
+setenv start_emmc_autoscript 'if fatload mmc 1 1020000 emmc_autoscript; then autoscr 1020000; fi; if ext4load mmc 1:${system_part} 1020000 emmc_autoscript; then autoscr 1020000; fi;'
+setenv start_mmc_autoscript 'if fatload mmc 0 1020000 s905_autoscript; then autoscr 1020000; fi;'
+setenv start_usb_autoscript 'if fatload usb 0 1020000 s905_autoscript; then autoscr 1020000; fi; if fatload usb 1 1020000 s905_autoscript; then autoscr 1020000; fi; if fatload usb 2 1020000 s905_autoscript; then autoscr 1020000; fi; if fatload usb 3 1020000 s905_autoscript; then autoscr 1020000; fi;'
+setenv system_part "b"
+setenv upgrade_step "2"
+saveenv
+sleep 1
+reboot
diff --git a/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/scripts/emmc_autoscript.src b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/scripts/emmc_autoscript.src
new file mode 100644
index 0000000..2265a01
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/scripts/emmc_autoscript.src
@@ -0,0 +1,4 @@
+if test ${bls} = android; then setenv bls "libreelec"; saveenv; run storeboot; fi;
+setenv env_addr "0x10400000"
+setenv bootargs ddr_size=${ddr_size} ${bootargs}
+if ext4load mmc 1:${system_part} ${loadaddr} kernel.img; then if ext4load mmc 1:${system_part} ${env_addr} uEnv.ini; then env import -t ${env_addr} ${filesize}; setenv bootargs ${boot_env} ${bootargs}; fi; if ext4load mmc 1:${system_part} ${dtb_mem_addr} ${dtb_name}; then bootm ${loadaddr}; else store dtb read ${dtb_mem_addr}; bootm ${loadaddr}; fi; fi;
diff --git a/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/scripts/s905_autoscript.src b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/scripts/s905_autoscript.src
new file mode 100644
index 0000000..c1f2ddf
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/autoscript-amlogic-kvim/scripts/s905_autoscript.src
@@ -0,0 +1,8 @@
+if test ${bls} = android; then setenv bls "libreelec"; saveenv; run storeboot; fi;
+setenv env_addr "0x10400000"
+setenv bootargs ddr_size=${ddr_size} ${bootargs}
+if fatload mmc 0 ${loadaddr} kernel.img; then if fatload mmc 0 ${env_addr} uEnv.ini; then env import -t ${env_addr} ${filesize}; setenv bootargs ${boot_env} ${bootargs}; fi; if fatload mmc 0 ${dtb_mem_addr} ${dtb_name}; then bootm ${loadaddr}; else store dtb read ${dtb_mem_addr}; bootm ${loadaddr}; fi; fi;
+if fatload usb 0 ${loadaddr} kernel.img; then if fatload usb 0 ${env_addr} uEnv.ini; then env import -t ${env_addr} ${filesize}; setenv bootargs ${boot_env} ${bootargs}; fi; if fatload usb 0 ${dtb_mem_addr} ${dtb_name}; then bootm ${loadaddr}; else store dtb read ${dtb_mem_addr}; bootm ${loadaddr}; fi; fi;
+if fatload usb 1 ${loadaddr} kernel.img; then if fatload usb 1 ${env_addr} uEnv.ini; then env import -t ${env_addr} ${filesize}; setenv bootargs ${boot_env} ${bootargs}; fi; if fatload usb 1 ${dtb_mem_addr} ${dtb_name}; then bootm ${loadaddr}; else store dtb read ${dtb_mem_addr}; bootm ${loadaddr}; fi; fi;
+if fatload usb 2 ${loadaddr} kernel.img; then if fatload usb 2 ${env_addr} uEnv.ini; then env import -t ${env_addr} ${filesize}; setenv bootargs ${boot_env} ${bootargs}; fi; if fatload usb 2 ${dtb_mem_addr} ${dtb_name}; then bootm ${loadaddr}; else store dtb read ${dtb_mem_addr}; bootm ${loadaddr}; fi; fi;
+if fatload usb 3 ${loadaddr} kernel.img; then if fatload usb 3 ${env_addr} uEnv.ini; then env import -t ${env_addr} ${filesize}; setenv bootargs ${boot_env} ${bootargs}; fi; if fatload usb 3 ${dtb_mem_addr} ${dtb_name}; then bootm ${loadaddr}; else store dtb read ${dtb_mem_addr}; bootm ${loadaddr}; fi; fi;
diff --git a/projects/Amlogic/devices/KVIM/packages/device-trees-amlogic-dtb/package.mk b/projects/Amlogic/devices/KVIM/packages/device-trees-amlogic-dtb/package.mk
new file mode 100644
index 0000000..a1be767
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/packages/device-trees-amlogic-dtb/package.mk
@@ -0,0 +1,72 @@
+# SPDX-License-Identifier: GPL-2.0-or-later
+# Copyright (C) 2016-present Team LibreELEC (https://libreelec.tv)
+
+PKG_NAME="device-trees-amlogic-dtb"
+PKG_VERSION="30c9d42"
+PKG_SHA256="bcbcd81abab242afaf439ff4d3b92039f2dba97ce0986285627e19e58f1c47d4"
+PKG_LICENSE="GPL"
+PKG_URL="https://github.com/LibreELEC/device-trees-amlogic/archive/$PKG_VERSION.tar.gz"
+PKG_DEPENDS_TARGET="toolchain"
+PKG_LONGDESC="Device trees for Amlogic devices." 
+PKG_IS_KERNEL_PKG="yes"
+PKG_TOOLCHAIN="manual"
+
+make_target() {
+  # Enter kernel directory
+  pushd $BUILD/linux-$(kernel_version) > /dev/null
+
+  # Device trees already present in kernel tree we want to include
+  EXTRA_TREES=( \
+                gxbb_p201 gxbb_p200_1G_wetek_hub gxbb_p200_2G_wetek_play_2 \
+                gxl_p212_1g gxl_p212_2g gxl_p281_1g gxl_p212_1g_lepotato gxl_p212_2g_lepotato \
+                gxm_q200_2g gxm_q201_1g gxm_q201_2g \
+	      )
+
+  # Add trees to the list
+  for f in ${EXTRA_TREES[@]}; do
+    DTB_LIST="$DTB_LIST $f.dtb"
+  done
+
+  # Copy all device trees to kernel source folder and create a list
+  cp -f $PKG_BUILD/*.dts* arch/$TARGET_KERNEL_ARCH/boot/dts/amlogic/
+  for f in $PKG_BUILD/*.dts; do
+    DTB_NAME="$(basename $f .dts).dtb"
+    DTB_LIST="$DTB_LIST $DTB_NAME"
+  done
+
+  # Filter device tree list depending on project
+  case "$DEVICE" in
+    S905)
+      for f in ${DTB_LIST[@]}; do
+        [[ "$f" == gxbb* ]] || [[ "$f" == gxl* ]] && DTB_LIST_FILTERED="$DTB_LIST_FILTERED $f"
+      done
+      ;;
+    S912)
+      for f in ${DTB_LIST[@]}; do
+        [[ "$f" == gxm* ]] && DTB_LIST_FILTERED="$DTB_LIST_FILTERED $f"
+      done
+      ;;
+    *)
+      for f in ${DTB_LIST[@]}; do
+        if listcontains "$KERNEL_UBOOT_EXTRA_TARGET" "$f"; then
+          DTB_LIST_FILTERED="$DTB_LIST_FILTERED $f"
+        fi
+      done
+      ;;
+  esac
+
+  # Compile device trees
+  kernel_make $DTB_LIST_FILTERED
+  mv arch/$TARGET_KERNEL_ARCH/boot/dts/amlogic/*.dtb $PKG_BUILD
+
+  popd > /dev/null
+}
+
+makeinstall_target() {
+  case "$DEVICE" in
+    S905|S912)
+      mkdir -p $INSTALL/usr/share/bootloader/dtb
+      cp -a $PKG_BUILD/*.dtb $INSTALL/usr/share/bootloader/dtb
+    ;;
+  esac
+}
diff --git a/projects/Amlogic/devices/KVIM/patches/LibreELEC-settings/001-English_string_po.patch b/projects/Amlogic/devices/KVIM/patches/LibreELEC-settings/001-English_string_po.patch
new file mode 100644
index 0000000..7b43069
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/patches/LibreELEC-settings/001-English_string_po.patch
@@ -0,0 +1,36 @@
+--- a/language/English/strings.po
++++ b/language/English/strings.po
+@@ -867,3 +867,33 @@
+ msgctxt "#32399"
+ msgid "Public"
+ msgstr ""
++
++########## eMMC #########
++
++msgctxt "#32820"
++msgid "eMMC"
++msgstr ""
++
++msgctxt "#32821"
++msgid "Install to eMMC"
++msgstr ""
++
++msgctxt "#2821"
++msgid "Install Libreelec to eMMC."
++msgstr ""
++
++msgctxt "#32822"
++msgid "Full backup eMMC."
++msgstr ""
++
++msgctxt "#2822"
++msgid "Create full backup eMMC to /storage/backup/ddbr ."
++msgstr ""
++
++msgctxt "#32823"
++msgid "Restore  eMMC"
++msgstr ""
++
++msgctxt "#2823"
++msgid "Restore full backup to eMMC."
++msgstr ""
diff --git a/projects/Amlogic/devices/KVIM/patches/LibreELEC-settings/002-services_py.patch b/projects/Amlogic/devices/KVIM/patches/LibreELEC-settings/002-services_py.patch
new file mode 100644
index 0000000..661f6c4
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/patches/LibreELEC-settings/002-services_py.patch
@@ -0,0 +1,124 @@
+--- a/src/resources/lib/modules/services.py
++++ b/src/resources/lib/modules/services.py
+@@ -27,7 +27,8 @@
+ 
+ import os
+ import glob
+-
++import xbmc
++import xbmcgui
+ 
+ class services:
+ 
+@@ -47,6 +48,9 @@
+     OPT_SSH_NOPASSWD = None
+     AVAHI_DAEMON = None
+     CRON_DAEMON = None
++    EMMC_INSTALL = "/flash/install2emmc.sh"
++    EMMC_DDBR_BACKUP = "/flash/ddbr-backup.sh"
++    EMMC_DDBR_RESTORE = "/flash/ddbr-restore.sh"
+     menu = {'4': {
+         'name': 32001,
+         'menuLoader': 'load_menu',
+@@ -259,6 +263,37 @@
+                             },
+                         },
+                     },
++                'emmc': {
++                    'order': 7,
++                    'name': 32820,
++                    'not_supported': [],
++                    'settings': {
++                        'emmc_install': {
++                            'order': 1,
++                            'name': 32821,
++                            'value': '0',
++                            'action': 'install_emmc',
++                            'type': 'button',
++                            'InfoText': 2821,
++                            },
++                        'emmc_backup': {
++                            'order': 2,
++                            'name': 32822,
++                            'value': '0',
++                            'action': 'backup_emmc',
++                            'type': 'button',
++                            'InfoText': 2822,
++                            },
++                        'emmc_restore': {
++                            'order': 3,
++                            'name': 32823,
++                            'value': '0',
++                            'action': 'restore_emmc',
++                            'type': 'button',
++                            'InfoText': 2823,
++                            },
++                        },
++                    },
+                 }
+ 
+             self.oe = oeMain
+@@ -484,6 +519,63 @@
+             self.oe.set_busy(0)
+             self.oe.dbg_log('services::initialize_cron', 'ERROR: (%s)' % repr(e), 4)
+ 
++    def install_emmc(self, listItem=None):
++        try:
++            self.oe.dbg_log('services::install_emmc', 'enter_function', 0)
++            if os.path.exists(self.EMMC_INSTALL):
++                dialog = xbmcgui.Dialog()
++                ret = dialog.yesno('Attention!', 'Install Libreelec to eMMC ?')
++                if ret:
++                    self.oe.notify(self.oe._(32363), 'Start Installation to eMMC...')
++                    self.oe.set_busy(1)
++                    message = self.oe.execute(self.EMMC_INSTALL, 1).strip()
++                    self.oe.set_busy(0)
++#                    if message == 'Done! Install Libreelec to eMMC completed.':
++                    dialog = xbmcgui.Dialog()
++                    dialog.notification('Install',
++                                        '%s' % message,
++                                        xbmcgui.NOTIFICATION_INFO, 3000)
++        except Exception, e:
++            self.oe.dbg_log('services::install_emmc', 'ERROR: (' + repr(e) + ')')
++
++    def backup_emmc(self, listItem=None):
++        try:
++            self.oe.dbg_log('services::backup_emmc', 'enter_function', 0)
++            if os.path.exists(self.EMMC_DDBR_BACKUP):
++                dialog = xbmcgui.Dialog()
++                ret = dialog.yesno('Attention!', 'Create full backup eMMC ?')
++                if ret:
++                    self.oe.notify(self.oe._(32363), 'Backup...')
++                    self.oe.set_busy(1)
++                    message = self.oe.execute(self.EMMC_DDBR_BACKUP, 1).strip()
++                    self.oe.set_busy(0)
++                    if message == 'Done! Full backup completed.':
++                        dialog = xbmcgui.Dialog()
++                        dialog.notification('Backup',
++                                        '%s' % message,
++                                        xbmcgui.NOTIFICATION_INFO, 3000)
++        except Exception, e:
++            self.oe.dbg_log('services::backup_emmc', 'ERROR: (' + repr(e) + ')')
++
++    def restore_emmc(self, listItem=None):
++        try:
++            self.oe.dbg_log('services::restore_emmc', 'enter_function', 0)
++            if os.path.exists(self.EMMC_DDBR_RESTORE):
++                dialog = xbmcgui.Dialog()
++                ret = dialog.yesno('Attention!', 'Start restore full backup eMMC ?')
++                if ret:
++                    self.oe.notify(self.oe._(32363), 'Backup...')
++                    self.oe.set_busy(1)
++                    message = self.oe.execute(self.EMMC_DDBR_RESTORE, 1).strip()
++                    self.oe.set_busy(0)
++                    if message == 'Done! restore backup completed.':
++                	dialog = xbmcgui.Dialog()
++                	dialog.notification('Restore',
++                                        '%s' % message,
++                                        xbmcgui.NOTIFICATION_INFO, 3000)
++        except Exception, e:
++            self.oe.dbg_log('services::restore_emmc', 'ERROR: (' + repr(e) + ')')
++
+     def init_bluetooth(self, **kwargs):
+         try:
+             self.oe.dbg_log('services::init_bluetooth', 'enter_function', 0)
diff --git a/projects/Amlogic/devices/KVIM/patches/kodi/kodi-le-000-reboot-from-nand.patch b/projects/Amlogic/devices/KVIM/patches/kodi/kodi-le-000-reboot-from-nand.patch
new file mode 100644
index 0000000..affab2e
--- /dev/null
+++ b/projects/Amlogic/devices/KVIM/patches/kodi/kodi-le-000-reboot-from-nand.patch
@@ -0,0 +1,17 @@
+diff --git a/addons/skin.estuary/xml/DialogButtonMenu.xml b/addons/skin.estuary/xml/DialogButtonMenu.xml
+index 9d29e01..cd5f1df 100644
+--- a/addons/skin.estuary/xml/DialogButtonMenu.xml
++++ b/addons/skin.estuary/xml/DialogButtonMenu.xml
+@@ -54,6 +54,12 @@
+ 						<visible>System.CanReboot</visible>
+ 					</item>
+ 					<item>
++						<label>Reboot from Android</label>
++						<onclick>System.ExecWait("/usr/sbin/rebootfromnand")</onclick>
++						<onclick>Reset()</onclick>
++						<visible>System.CanReboot</visible>
++					</item>
++					<item>
+ 						<label>$LOCALIZE[20126] $INFO[system.profilename]</label>
+ 						<onclick>dialog.close(all,true)</onclick>
+ 						<onclick>System.LogOff</onclick>
